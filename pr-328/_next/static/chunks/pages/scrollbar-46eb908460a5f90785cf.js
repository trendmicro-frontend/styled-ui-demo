_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[53],{"97Jx":function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},e.exports.default=e.exports,e.exports.__esModule=!0,n.apply(this,arguments)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},FC13:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var r=n("97Jx"),a=n.n(r),l=n("m3Bd"),o=n.n(l),c=(n("ERkP"),n("ZVZ0")),i=["components"],b={};function p(e){var t=e.components,n=o()(e,i);return Object(c.b)("wrapper",a()({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",null,"Scrollbar"),Object(c.b)("h2",null,"Import"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"import {\n  Scrollbar\n} from '@trendmicro/react-styled-ui';\n")),Object(c.b)("h2",null,"Usage"),Object(c.b)("h3",null,"The scrollbar in the ",Object(c.b)("inlineCode",{parentName:"h3"},"Menu")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx"},'<Menu width="160px">\n  <MenuButton width="100%">Select an option</MenuButton>\n  <MenuList width="100%" height={200}>\n    <Scrollbar>\n      <MenuItem>List item 1</MenuItem>\n      <MenuItem>List item 2</MenuItem>\n      <MenuItem>List item 3</MenuItem>\n      <MenuItem>List item 4</MenuItem>\n      <MenuItem>List item 5</MenuItem>\n      <MenuItem>List item 6</MenuItem>\n      <MenuItem>List item 7</MenuItem>\n      <MenuItem>List item 8</MenuItem>\n      <MenuItem>List item 9</MenuItem>\n      <MenuItem>List item 10</MenuItem>\n      <MenuItem>List item 11</MenuItem>\n      <MenuItem>List item 12</MenuItem>\n    </Scrollbar>\n  </MenuList>\n</Menu>\n')),Object(c.b)("h3",null,"The scrollbar in the ",Object(c.b)("inlineCode",{parentName:"h3"},"Table")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},"function CustomScrollbar({\n  showVerticalScrollbar,\n  showHorizontalScrollbar,\n  children,\n  ...props\n}) {\n  const renderScrollView = props => {\n    return (\n      <Box\n        {...props}\n        right={showVerticalScrollbar ? \"8px\" : 0}\n        bottom={showHorizontalScrollbar ? \"8px\" : 0}\n      />\n    );\n  };\n\n  const renderScrollTrack = props => {\n    const [colorMode] = useColorMode();\n    const bgColor = {\n      dark: 'gray:70',\n      light: 'gray:70',\n    }[colorMode];\n    return (\n      <Box\n        {...props}\n        bg={bgColor}\n      />\n    );\n  };\n\n  return (\n    <Scrollbar\n      scrollbarVisibility=\"visible\"\n      renderView={renderScrollView}\n      renderHorizontalTrack={renderScrollTrack}\n      renderVerticalTrack={renderScrollTrack}\n      {...props}\n    >\n      {children}\n    </Scrollbar>\n  );\n}\n\nfunction StickyTable() {\n  const columns = React.useMemo(() => [\n    {\n      Header: 'Event Type',\n      accessor: 'eventType',\n    },\n    {\n      Header: 'Affected Devices',\n      accessor: 'affectedDevices',\n    },\n    {\n      Header: 'Detections',\n      accessor: 'detections',\n    },\n  ], []);\n\n  const data = React.useMemo(() => [\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ], []);\n\n  const tableHeaderRef = React.createRef();\n\n  const [showHorizontalScrollbar, setShowHorizontalScrollbar] = React.useState(false);\n  const [showVerticalScrollbar, setShowVerticalScrollbar] = React.useState(false);\n\n  const onScroll = (e) => {\n    const scrollLeft = e.target.scrollLeft;\n    if (tableHeaderRef.current && tableHeaderRef.current.scrollLeft !== scrollLeft) {\n      tableHeaderRef.current.scrollLeft = scrollLeft;\n    }\n  };\n\n  const onUpdate = ({ hasHorizontalScrollbar, hasVerticalScrollbar, ...props }) => {\n    setShowHorizontalScrollbar(hasHorizontalScrollbar);\n    setShowVerticalScrollbar(hasVerticalScrollbar);\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useBlockLayout,\n  );\n  \n  return (\n    <Table\n      isHoverable\n      variant=\"outline\"\n      width={400}\n      height={200}\n      {...getTableProps()}\n    >\n      <TableHeader ref={tableHeaderRef}>\n        {headerGroups.map(headerGroup => {\n          const { style, ...props } = headerGroup.getHeaderGroupProps();\n          let headerWidth = style.width;\n          if (showVerticalScrollbar) {\n            headerWidth = `calc(${style.width} + 8px)`; // 8px is scrollbar width\n          }\n          return (\n            <TableHeaderRow style={{...style, width: headerWidth}} {...props}>\n              {headerGroup.headers.map((column, index) => (\n                <TableHeaderCell\n                  key={column.accessor}\n                  {...(showVerticalScrollbar && index === headerGroup.headers.length - 1) && {\n                    borderRight: 0,\n                  }}\n                  {...column.getHeaderProps()}\n                >\n                  {column.render('Header')}\n                </TableHeaderCell>\n              ))}\n              {showVerticalScrollbar && (\n                <TableHeaderCell width=\"8px\" padding={0} borderLeft={0} />\n              )}\n            </TableHeaderRow>\n          );\n        })}\n      </TableHeader>\n      <CustomScrollbar\n        showVerticalScrollbar\n        showHorizontalScrollbar\n        onScroll={onScroll}\n        onUpdate={onUpdate}\n      >\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            prepareRow(row);\n            return (\n              <TableRow key={index} {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableCell key={cell.id} {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </CustomScrollbar>\n    </Table>\n  );\n}\n\nrender(<StickyTable />);\n")),Object(c.b)("h3",null,"ShadowScrollbar"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'function ShadowScrollbar(props) {\n  const shadowTopRef = React.useRef(null);\n  const shadowBottomRef = React.useRef(null);\n\n  const handleUpdate = ({ values }) => {\n    const { scrollTop, scrollHeight, clientHeight } = values;\n    const shadowTopOpacity = 1 / 20 * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const shadowBottomOpacity = 1 / 20 * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    shadowTopRef.current.style.opacity = shadowTopOpacity;\n    shadowBottomRef.current.style.opacity = shadowBottomOpacity;\n  };\n  return (\n    <Box position="relative">\n      <Scrollbar\n        onUpdate={handleUpdate}\n        {...props}\n      />\n      <Box\n        ref={shadowTopRef}\n        position="absolute"\n        top="0"\n        left="0"\n        right="0"\n        height="24px"\n        background="linear-gradient(to bottom, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)"\n      />\n      <Box\n        ref={shadowBottomRef}\n        position="absolute"\n        bottom="0"\n        left="0"\n        right="0"\n        height="24px"\n        background="linear-gradient(to top, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)"\n      />\n    </Box>\n  );\n}\n\nrender(\n  <ShadowScrollbar height={300}>\n    <Lorem count={12} />\n  </ShadowScrollbar>\n);\n')),Object(c.b)("h2",null,"Props"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Scrollbar")," composes the ",Object(c.b)("a",{parentName:"p",href:"./pseudoBox"},Object(c.b)("inlineCode",{parentName:"a"},"PseudoBox"))," component. You can override the default styles with style props."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Default"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"autoHideDelay"),Object(c.b)("td",{parentName:"tr",align:"left"},"number"),Object(c.b)("td",{parentName:"tr",align:"left"},"1000"),Object(c.b)("td",{parentName:"tr",align:"left"},"Hide delay in ms.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"disabled"),Object(c.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"If ",Object(c.b)("inlineCode",{parentName:"td"},"true"),", the overflow is clipped, and the rest of the content is hidden.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"maxHeight"),Object(c.b)("td",{parentName:"tr",align:"left"},"number ","|"," string"),Object(c.b)("td",{parentName:"tr",align:"left"},"'auto'"),Object(c.b)("td",{parentName:"tr",align:"left"},"Set a minimum height (in pixels) for auto-height mode. If ",Object(c.b)("inlineCode",{parentName:"td"},"maxHeight")," is not ",Object(c.b)("inlineCode",{parentName:"td"},"'auto'"),", activate auto height mode.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"minHeight"),Object(c.b)("td",{parentName:"tr",align:"left"},"number ","|"," string"),Object(c.b)("td",{parentName:"tr",align:"left"},"'auto'"),Object(c.b)("td",{parentName:"tr",align:"left"},"Set a maximum height (in pixels) for auto-height mode.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"minThumbSize"),Object(c.b)("td",{parentName:"tr",align:"left"},"number"),Object(c.b)("td",{parentName:"tr",align:"left"},"30"),Object(c.b)("td",{parentName:"tr",align:"left"},"Minimal thumb size in pixels.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"onScroll"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Event handler.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"onUpdate"),Object(c.b)("td",{parentName:"tr",align:"left"},"function({ values, hasHorizontalScrollbar, hasVerticalScrollbar })"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Called whenever the component is updated.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"renderView"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"The element your content will be rendered in.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"renderHorizontalThumb"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Horizontal thumb element.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"renderHorizontalTrack"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Horizontal track element.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"renderVerticalThumb"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Vertical thumb element.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"renderVerticalTrack"),Object(c.b)("td",{parentName:"tr",align:"left"},"function"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Vertical track element.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"scrollbarVisibility"),Object(c.b)("td",{parentName:"tr",align:"left"},"string"),Object(c.b)("td",{parentName:"tr",align:"left"},"'auto'"),Object(c.b)("td",{parentName:"tr",align:"left"},"Acceptable values: ",Object(c.b)("inlineCode",{parentName:"td"},"'auto'"),", ",Object(c.b)("inlineCode",{parentName:"td"},"'visible'"),", ",Object(c.b)("inlineCode",{parentName:"td"},"'hidden'"),". If ",Object(c.b)("inlineCode",{parentName:"td"},"'auto'"),", the scrollbar will auto show/hide. If ",Object(c.b)("inlineCode",{parentName:"td"},"'visible'"),", the scrollbar always to show.  If ",Object(c.b)("inlineCode",{parentName:"td"},"'hidden'"),", the scrollbar always to hide.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"thumbSize"),Object(c.b)("td",{parentName:"tr",align:"left"},"number"),Object(c.b)("td",{parentName:"tr",align:"left"}),Object(c.b)("td",{parentName:"tr",align:"left"},"Set a fixed size (in pixels) for thumbs.")))))}p.isMDXComponent=!0},Km8e:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},LdEA:function(e,t){e.exports=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a},e.exports.default=e.exports,e.exports.__esModule=!0},ONFf:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/scrollbar",function(){return n("FC13")}])},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var r=n("ERkP"),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"===typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(o,".").concat(m)]||d[m]||s[m]||l;return n?a.a.createElement(u,c(c({ref:t},b),{},{components:n})):a.a.createElement(u,c({ref:t},b))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"===typeof e?e:r,o[1]=c;for(var b=2;b<l;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},m3Bd:function(e,t,n){var r=n("LdEA");e.exports=function(e,t){if(null==e)return{};var n,a,l=r(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l},e.exports.default=e.exports,e.exports.__esModule=!0}},[["ONFf",0,1]]]);
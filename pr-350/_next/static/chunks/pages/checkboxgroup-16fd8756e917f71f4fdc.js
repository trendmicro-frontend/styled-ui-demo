_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[23],{"2gFM":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var a=n("97Jx"),r=n.n(a),o=n("m3Bd"),c=n.n(o),l=(n("ERkP"),n("ZVZ0")),b=["components"],p={};function i(e){var t=e.components,n=c()(e,b);return Object(l.b)("wrapper",r()({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"CheckboxGroup"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"CheckboxGroup")," is used to group related checkboxes."),Object(l.b)("h2",null,"Import"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { CheckboxGroup } from '@trendmicro/react-styled-ui';\n")),Object(l.b)("h3",null,"Usage"),Object(l.b)("h4",null,"Uncontrolled checkbox group"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup defaultValue={["apple"]}>\n  <Stack direction="column" spacing="1x" shouldWrapChildren>\n    <Checkbox value="apple">Apple</Checkbox>\n    <Checkbox value="orange">Orange</Checkbox>\n    <Checkbox value="papaya">Papaya</Checkbox>\n  </Stack>\n</CheckboxGroup>\n')),Object(l.b)("h4",null,"Controlled checkbox group"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [value, setValue] = React.useState([\'apple\']);\n\n  return (\n    <CheckboxGroup value={value} onChange={value => setValue(value)}>\n      <Stack direction="column" spacing="1x" shouldWrapChildren>\n        <Checkbox value="apple">Apple</Checkbox>\n        <Checkbox value="orange">Orange</Checkbox>\n        <Checkbox value="papaya">Papaya</Checkbox>\n      </Stack>\n    </CheckboxGroup>\n  );\n}\n')),Object(l.b)("h3",null,"Group orientation"),Object(l.b)("p",null,"Make a set of checkboxes appear horizontal stacked rather than vertically, by adding ",Object(l.b)("inlineCode",{parentName:"p"},'direction="row"')," to the ",Object(l.b)("inlineCode",{parentName:"p"},"Stack")," component."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup defaultValue={[\'apple\']}>\n  <Stack direction="row" spacing="3x">\n    <Checkbox value="apple">Apple</Checkbox>\n    <Checkbox value="orange">Orange</Checkbox>\n    <Checkbox value="papaya">Papaya</Checkbox>\n  </Stack>\n</CheckboxGroup>\n')),Object(l.b)("h3",null,"Colors"),Object(l.b)("p",null,"Use the ",Object(l.b)("inlineCode",{parentName:"p"},"variantColor")," prop to change the color scheme of the Radio. ",Object(l.b)("inlineCode",{parentName:"p"},"variantColor")," can be any color key with key ",Object(l.b)("inlineCode",{parentName:"p"},"50"),"(hover), ",Object(l.b)("inlineCode",{parentName:"p"},"60"),"(checked) that exist in the ",Object(l.b)("inlineCode",{parentName:"p"},"theme.colors"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<CheckboxGroup variantColor="green" defaultValue={[\'apple\']}>\n  <Stack direction="row" spacing="3x">\n    <Checkbox value="apple">Apple</Checkbox>\n    <Checkbox value="orange">Orange</Checkbox>\n    <Checkbox value="papaya">Papaya</Checkbox>\n  </Stack>\n</CheckboxGroup>\n')),Object(l.b)("h3",null,"Sizes"),Object(l.b)("p",null,"Use the ",Object(l.b)("inlineCode",{parentName:"p"},"size")," prop to change the size of the ",Object(l.b)("inlineCode",{parentName:"p"},"CheckboxGroup"),". You can set the value to ",Object(l.b)("inlineCode",{parentName:"p"},"sm"),", ",Object(l.b)("inlineCode",{parentName:"p"},"md"),", or ",Object(l.b)("inlineCode",{parentName:"p"},"lg"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="1x" shouldWrapChildren>\n  <CheckboxGroup size="sm" defaultValue={[\'apple\']}>\n    <Stack direction="row" spacing="3x">\n      <Checkbox value="apple">Apple</Checkbox>\n      <Checkbox value="orange">Orange</Checkbox>\n      <Checkbox value="papaya">Papaya</Checkbox>\n    </Stack>\n  </CheckboxGroup>\n  <CheckboxGroup size="md" defaultValue={[\'apple\']}>\n    <Stack direction="row" spacing="3x">\n      <Checkbox value="apple">Apple</Checkbox>\n      <Checkbox value="orange">Orange</Checkbox>\n      <Checkbox value="papaya">Papaya</Checkbox>\n    </Stack>\n  </CheckboxGroup>\n  <CheckboxGroup size="lg" defaultValue={[\'apple\']}>\n    <Stack direction="row" spacing="3x">\n      <Checkbox value="apple">Apple</Checkbox>\n      <Checkbox value="orange">Orange</Checkbox>\n      <Checkbox value="papaya">Papaya</Checkbox>\n    </Stack>\n  </CheckboxGroup>\n</Stack>\n')),Object(l.b)("h3",null,"States"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="2x" shouldWrapChildren>\n  <CheckboxGroup defaultValue={[\'apple\']}>\n    <Stack direction="row" spacing="3x">\n      <Checkbox value="apple">Apple</Checkbox>\n      <Checkbox value="orange">Orange</Checkbox>\n      <Checkbox value="papaya">Papaya</Checkbox>\n    </Stack>\n  </CheckboxGroup>\n  <CheckboxGroup disabled defaultValue={[\'apple\']}>\n    <Stack direction="row" spacing="3x">\n      <Checkbox value="apple">Apple</Checkbox>\n      <Checkbox value="orange">Orange</Checkbox>\n      <Checkbox value="papaya">Papaya</Checkbox>\n    </Stack>\n  </CheckboxGroup>\n</Stack>\n')),Object(l.b)("h3",null,"Asynchronous data loading"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [state, setState] = React.useState({\n    state: \'idle\',\n    fruits: [],\n  });\n  const timerRef = React.useRef(null);\n  const fetchData = React.useCallback(() => {\n    setState(prevState => ({ ...prevState, state: \'loading\' }));\n\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n    timerRef.current = setTimeout(() => {\n      setState({\n        state: \'success\',\n        fruits: [\'apple\'],\n      });\n\n      timerRef.current = null;\n    }, 2000);\n  }, []);\n\n  React.useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <>\n      <Box mb="4x">\n        <LinkButton onClick={() => fetchData()}>\n          <Flex align="center">\n            <Icon icon="redo" spin={true} animationPlayState={state.state === \'loading\' ? \'running\' : \'paused\'} />\n            <Space width="2x" />\n            Reload\n          </Flex>\n        </LinkButton>\n      </Box>\n      <CheckboxGroup\n        value={state.fruits}\n        disabled={state.state === \'loading\'}\n        onChange={value => {\n          setState(prevState => ({ ...prevState, fruits: value }));\n        }}\n      >\n        <Stack direction="row" spacing="3x">\n          <Checkbox value="apple">Apple</Checkbox>\n          <Checkbox value="orange">Orange</Checkbox>\n          <Checkbox value="papaya">Papaya</Checkbox>\n        </Stack>\n      </CheckboxGroup>\n    </>\n  );\n}\n')),Object(l.b)("h2",null,"Props"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:"left"},"Name"),Object(l.b)("th",{parentName:"tr",align:"left"},"Type"),Object(l.b)("th",{parentName:"tr",align:"left"},"Default"),Object(l.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"name"),Object(l.b)("td",{parentName:"tr",align:"left"},"string"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"The name used to reference the value of the control. If you don't provide this prop, it falls back to a randomly generated name.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"value"),Object(l.b)("td",{parentName:"tr",align:"left"},"Array<Checkbox","['value']",">"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"The value of the checkbox group.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"disabled"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"false"),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"true"),", all checkboxes will be disabled.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"variantColor"),Object(l.b)("td",{parentName:"tr",align:"left"},"string"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"The color of the checkbox when it's checked. This should be one of the color keys in the theme (e.g. ",Object(l.b)("inlineCode",{parentName:"td"},"'green'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'red'"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"size"),Object(l.b)("td",{parentName:"tr",align:"left"},"string"),Object(l.b)("td",{parentName:"tr",align:"left"},"'md'"),Object(l.b)("td",{parentName:"tr",align:"left"},"The size (width and height) of the checkbox. One of: ",Object(l.b)("inlineCode",{parentName:"td"},"'sm'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'md'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'lg'"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"defaultValue"),Object(l.b)("td",{parentName:"tr",align:"left"},"Array<Checkbox","['value']",">"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"The initial value of the checkbox group.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"children"),Object(l.b)("td",{parentName:"tr",align:"left"},"ReactNode"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"The content of the checkbox group. Must be the ",Object(l.b)("inlineCode",{parentName:"td"},"Checkbox")," component.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"onChange"),Object(l.b)("td",{parentName:"tr",align:"left"},"function"),Object(l.b)("td",{parentName:"tr",align:"left"}),Object(l.b)("td",{parentName:"tr",align:"left"},"A callback fired when any descendant ",Object(l.b)("inlineCode",{parentName:"td"},"Checkbox")," is checked or unchecked.")))))}i.isMDXComponent=!0},"97Jx":function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},e.exports.default=e.exports,e.exports.__esModule=!0,n.apply(this,arguments)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},KD1S:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/checkboxgroup",function(){return n("2gFM")}])},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},LdEA:function(e,t){e.exports=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r},e.exports.default=e.exports,e.exports.__esModule=!0},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s}));var a=n("ERkP"),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),i=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),u=i(n),h=a,s=u["".concat(c,".").concat(h)]||u[h]||d[h]||o;return n?r.a.createElement(s,l(l({ref:t},p),{},{components:n})):r.a.createElement(s,l({ref:t},p))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,c=new Array(o);c[0]=h;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"===typeof e?e:a,c[1]=l;for(var p=2;p<o;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},m3Bd:function(e,t,n){var a=n("LdEA");e.exports=function(e,t){if(null==e)return{};var n,r,o=a(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o},e.exports.default=e.exports,e.exports.__esModule=!0}},[["KD1S",0,1]]]);
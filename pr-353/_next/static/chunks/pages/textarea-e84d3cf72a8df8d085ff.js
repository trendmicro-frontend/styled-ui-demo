_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[69],{"97Jx":function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},e.exports.default=e.exports,e.exports.__esModule=!0,n.apply(this,arguments)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},LdEA:function(e,t){e.exports=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r},e.exports.default=e.exports,e.exports.__esModule=!0},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n("ERkP"),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||s[u]||l;return n?r.a.createElement(m,o(o({ref:t},c),{},{components:n})):r.a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"===typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},aUHR:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/textarea",function(){return n("n1wu")}])},m3Bd:function(e,t,n){var a=n("LdEA");e.exports=function(e,t){if(null==e)return{};var n,r,l=a(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l},e.exports.default=e.exports,e.exports.__esModule=!0},n1wu:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var a=n("97Jx"),r=n.n(a),l=n("m3Bd"),i=n.n(l),o=(n("ERkP"),n("ZVZ0")),b=["components"],c={};function p(e){var t=e.components,n=i()(e,b);return Object(o.b)("wrapper",r()({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",null,"Textarea"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Textarea")," component allows you to create a multi-line text input."),Object(o.b)("h2",null,"Import"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { Textarea } from '@trendmicro/react-styled-ui';\n")),Object(o.b)("h2",null,"Usage"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<>\n  <TextLabel mb="1x">Label:</TextLabel>\n  <Textarea placeholder="Basic example" />\n  <Text size="xs" mt="1x">Help text for the text input</Text>\n</>\n')),Object(o.b)("h3",null,"Sizing"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"rows")," and ",Object(o.b)("inlineCode",{parentName:"li"},"cols")," properties allow you to specify an exact size for the ",Object(o.b)("inlineCode",{parentName:"li"},"<Textarea>")," to take. Setting these is a good idea for consistency, as browser defaults can differ."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"maxLength")," property specifies a maximum number of characters that the ",Object(o.b)("inlineCode",{parentName:"li"},"Textarea")," is allowed to contain."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"minLength")," property specifies a minimum length that is considered valid. ",Object(o.b)("inlineCode",{parentName:"li"},"Textarea")," will not submit (and is invalid) if it is empty, using the ",Object(o.b)("inlineCode",{parentName:"li"},"required")," attribute."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"resize")," property to set whether the ",Object(o.b)("inlineCode",{parentName:"li"},"Textarea")," is resizable, and if so, in which directions. You can set the value to ",Object(o.b)("inlineCode",{parentName:"li"},"none"),", ",Object(o.b)("inlineCode",{parentName:"li"},"both"),", ",Object(o.b)("inlineCode",{parentName:"li"},"horizontal"),", or ",Object(o.b)("inlineCode",{parentName:"li"},"vertical"),".")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'\nfunction Example() {\n  const [resize, setResize] = React.useState(\'both\');\n\n  return (\n    <>\n      <Text mb="2x">resize:</Text>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" selected={resize === \'none\'} onClick={() => setResize(\'none\')}>none</Button>\n        <Button variant="outline" selected={resize === \'both\'} onClick={() => setResize(\'both\')}>both</Button>\n        <Button variant="outline" selected={resize === \'horizontal\'} onClick={() => setResize(\'horizontal\')}>horizontal</Button>\n        <Button variant="outline" selected={resize === \'vertical\'} onClick={() => setResize(\'vertical\')}>vertical</Button>\n      </Stack>\n      <Textarea\n        defaultValue="Placeholder text"\n        width="auto"\n        resize={resize}\n        rows="3"\n        cols="12"\n        minLength={4}\n        maxLength={16}\n      />\n    </>\n  );\n}\n')),Object(o.b)("h3",null,"Variants"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Textarea")," component comes in 3 variants: ",Object(o.b)("inlineCode",{parentName:"p"},"outline"),", ",Object(o.b)("inlineCode",{parentName:"p"},"filled"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"unstyled"),". Pass the ",Object(o.b)("inlineCode",{parentName:"p"},"variant")," prop and set it to either of these values."),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"outline")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Textarea variant="outline" placeholder="John Doe" />\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"filled")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Textarea variant="filled" placeholder="John Doe" />\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"unstyled")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Textarea variant="unstyled" placeholder="John Doe" />\n')),Object(o.b)("h3",null,"Attributes"),Object(o.b)("p",null,"General form input attributes are supported, such as ",Object(o.b)("inlineCode",{parentName:"p"},"disabled"),", ",Object(o.b)("inlineCode",{parentName:"p"},"readOnly"),", ",Object(o.b)("inlineCode",{parentName:"p"},"required"),", etc."),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"disabled")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack directin="column" spacing="4x">\n  <Textarea disabled placeholder="Placeholder text" />\n  <Textarea disabled placeholder="Placeholder text" defaultValue="Disabled" />\n</Stack>\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"readOnly")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack directin="column" spacing="4x">\n  <Textarea readOnly placeholder="Placeholder text" />\n  <Textarea readOnly placeholder="Placeholder text" defaultValue="Read-only" />\n</Stack>\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"required")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'<Textarea required placeholder="Placeholder text" />\n')),Object(o.b)("h3",null,"Validation"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"isInvalid")," attribute to indicate that the value entered into an input field does not conform to the format expected by the application. ",Object(o.b)("inlineCode",{parentName:"p"},"isInvalid")," can also be used to indicate that a required field has not been filled in."),Object(o.b)("p",null,"Set ",Object(o.b)("inlineCode",{parentName:"p"},"isInvalid")," to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," on the fields that have failed validation, otherwise set it to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," if no errors detected."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const InlineError = (props) => (\n  <Text fontSize="sm" lineHeight="sm" color="red:50" {...props} />\n);\n\nconst MultilineInputField = ({\n  value,\n  onChange,\n  ...props\n}) => {\n  const isInvalid = (value === \'\');\n  let invalidTextareaStyle = {};\n  if (isInvalid) {\n    invalidTextareaStyle = {\n      isInvalid: true,\n      pr: \'10x\',\n    };\n  }\n\n  return (\n    <>\n      <Flex position="relative" alignItems="center" mb="1x">\n        <Textarea\n          resize="none"\n          rows="3"\n          placeholder="Placeholder text"\n          value={value}\n          onChange={onChange}\n          {...invalidTextareaStyle}\n        />\n        {isInvalid && (\n          <Box position="absolute" right={0} top=".375rem">\n            <Icon icon="warning-circle" mx="3x" color="red:50" />\n          </Box>\n        )}\n      </Flex>\n      <Box>\n        {isInvalid && (\n          <InlineError>This is a required field.</InlineError>\n        )}\n      </Box>\n    </>\n  );\n};\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'\');\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <MultilineInputField value={value} onChange={onChange} />\n  );\n}\n\nrender(<Example />);\n')),Object(o.b)("h2",null,"Props"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Textarea")," composes the ",Object(o.b)("a",{parentName:"p",href:"./inputbase"},Object(o.b)("inlineCode",{parentName:"a"},"InputBase"))," component."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},"Name"),Object(o.b)("th",{parentName:"tr",align:"left"},"Type"),Object(o.b)("th",{parentName:"tr",align:"left"},"Default"),Object(o.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"rows"),Object(o.b)("td",{parentName:"tr",align:"left"},"number"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"Specifies the visible number of lines in a text area.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"cols"),Object(o.b)("td",{parentName:"tr",align:"left"},"number"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"Specifies the visible width of a text area.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"maxLength"),Object(o.b)("td",{parentName:"tr",align:"left"},"number"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"Specifies a maximum number of characters that is allowed to contain.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"minLength"),Object(o.b)("td",{parentName:"tr",align:"left"},"number"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"Specifies a minimum length that is considered valid.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"resize"),Object(o.b)("td",{parentName:"tr",align:"left"},"string"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"One of: ",Object(o.b)("inlineCode",{parentName:"td"},"'none'"),", ",Object(o.b)("inlineCode",{parentName:"td"},"'both'"),", ",Object(o.b)("inlineCode",{parentName:"td"},"'horizontal'"),", ",Object(o.b)("inlineCode",{parentName:"td"},"'vertical'"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"variant"),Object(o.b)("td",{parentName:"tr",align:"left"},"string"),Object(o.b)("td",{parentName:"tr",align:"left"},"'outline'"),Object(o.b)("td",{parentName:"tr",align:"left"},"The variant of the input style to use. One of: ",Object(o.b)("inlineCode",{parentName:"td"},"'outline'"),", ",Object(o.b)("inlineCode",{parentName:"td"},"'filled'"),", ",Object(o.b)("inlineCode",{parentName:"td"},"'unstyled'"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"disabled"),Object(o.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the control. This sets ",Object(o.b)("inlineCode",{parentName:"td"},"aria-disabled=true")," and you can style this state by passing the ",Object(o.b)("inlineCode",{parentName:"td"},"_disabled")," prop.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"readOnly"),Object(o.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", prevents the value of the input from being edited.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"isInvalid"),Object(o.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(o.b)("td",{parentName:"tr",align:"left"}),Object(o.b)("td",{parentName:"tr",align:"left"},"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the input will indicate an error. You can style this state by passing the ",Object(o.b)("inlineCode",{parentName:"td"},"_invalid")," prop.")))))}p.isMDXComponent=!0}},[["aUHR",0,1]]]);
_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[44],{ZVZ0:function(n,e,t){"use strict";t.d(e,"a",(function(){return c})),t.d(e,"b",(function(){return s}));var p=t("ERkP"),r=t.n(p);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);e&&(p=p.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,p)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,p,r=function(n,e){if(null==n)return{};var t,p,r={},a=Object.keys(n);for(p=0;p<a.length;p++)t=a[p],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(p=0;p<a.length;p++)t=a[p],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var d=r.a.createContext({}),i=function(n){var e=r.a.useContext(d),t=e;return n&&(t="function"===typeof n?n(e):u(u({},e),n)),t},c=function(n){var e=i(n.components);return r.a.createElement(d.Provider,{value:e},n.children)},b={inlineCode:"code",wrapper:function(n){var e=n.children;return r.a.createElement(r.a.Fragment,{},e)}},m=r.a.forwardRef((function(n,e){var t=n.components,p=n.mdxType,a=n.originalType,o=n.parentName,d=l(n,["components","mdxType","originalType","parentName"]),c=i(t),m=p,s=c["".concat(o,".").concat(m)]||c[m]||b[m]||a;return t?r.a.createElement(s,u(u({ref:e},d),{},{components:t})):r.a.createElement(s,u({ref:e},d))}));function s(n,e){var t=arguments,p=e&&e.mdxType;if("string"===typeof n||p){var a=t.length,o=new Array(a);o[0]=m;var u={};for(var l in e)hasOwnProperty.call(e,l)&&(u[l]=e[l]);u.originalType=n,u.mdxType="string"===typeof n?n:p,o[1]=u;for(var d=2;d<a;d++)o[d]=t[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},gAcy:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return d}));var p=t("97Jx"),r=t.n(p),a=t("m3Bd"),o=t.n(a),u=(t("ERkP"),t("ZVZ0")),l=(t("l1C2"),{});function d(n){var e=n.components,t=o()(n,["components"]);return Object(u.b)("wrapper",r()({},l,t,{components:e,mdxType:"MDXLayout"}),Object(u.b)("h1",null,"InputGroup"),Object(u.b)("p",null,Object(u.b)("inlineCode",{parentName:"p"},"InputGroup")," is used to group related add-ons and inputs."),Object(u.b)("h2",null,"Import"),Object(u.b)("h3",null,"Default imports"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-js"},"import InputGroup from '@trendmicro/react-styled-ui/InputGroup';\nimport InputGroupAddon from '@trendmicro/react-styled-ui/InputGroupAddon';\nimport InputGroupAppend from '@trendmicro/react-styled-ui/InputGroupAppend';\nimport InputGroupPrepend from '@trendmicro/react-styled-ui/InputGroupPrepend';\n")),Object(u.b)("h3",null,"Named imports"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-js"},"import {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupAppend,\n  InputGroupPrepend,\n} from '@trendmicro/react-styled-ui';\n")),Object(u.b)("h2",null,"Usage"),Object(u.b)("p",null,"Use ",Object(u.b)("inlineCode",{parentName:"p"},"InputGroup")," to place an ",Object(u.b)("inlineCode",{parentName:"p"},"InputGroupAddon")," or ",Object(u.b)("inlineCode",{parentName:"p"},"Button")," on either side of an ",Object(u.b)("inlineCode",{parentName:"p"},"Input"),". You may also place one on both sides of an ",Object(u.b)("inlineCode",{parentName:"p"},"Input"),"."),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup>\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">@</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Username" />\n  </InputGroup>\n  <InputGroup>\n    <Input placeholder="Recipient\'s username" />\n    <InputGroupAppend>\n      <InputGroupAddon variant="filled">@example.com</InputGroupAddon>\n    </InputGroupAppend>\n  </InputGroup>\n  <InputGroup>\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">$</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Recipient\'s username" />\n    <InputGroupAppend>\n      <InputGroupAddon variant="filled">.00</InputGroupAddon>\n    </InputGroupAppend>\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h3",null,"Sizes"),Object(u.b)("p",null,"Use the ",Object(u.b)("inlineCode",{parentName:"p"},"size")," prop to change the size of the input group. You can set the value to ",Object(u.b)("inlineCode",{parentName:"p"},"sm"),", ",Object(u.b)("inlineCode",{parentName:"p"},"md"),", or ",Object(u.b)("inlineCode",{parentName:"p"},"lg"),"."),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup size="sm">\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">sm</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Small size (24px)" />\n  </InputGroup>\n  <InputGroup size="md">\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">md</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Default size (32px)" />\n  </InputGroup>\n  <InputGroup size="lg">\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">lg</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Large size (40px)" />\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h3",null,"Variants"),Object(u.b)("p",null,"The ",Object(u.b)("inlineCode",{parentName:"p"},"InputGroup")," component comes in 3 variants: ",Object(u.b)("inlineCode",{parentName:"p"},"outline"),", ",Object(u.b)("inlineCode",{parentName:"p"},"filled"),", and ",Object(u.b)("inlineCode",{parentName:"p"},"unstyled"),". Pass the ",Object(u.b)("inlineCode",{parentName:"p"},"variant")," prop and set it to either of these values."),Object(u.b)("h4",null,Object(u.b)("inlineCode",{parentName:"h4"},"outline")),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup variant="outline">\n    <InputGroupPrepend>\n      <InputGroupAddon>@</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Username" />\n  </InputGroup>\n  <InputGroup variant="outline">\n    <InputGroupPrepend>\n      <InputGroupAddon>@</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input variant="filled" placeholder="Username" />\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h4",null,Object(u.b)("inlineCode",{parentName:"h4"},"filled")),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup variant="filled">\n    <InputGroupPrepend>\n      <InputGroupAddon>@</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input variant="outline" placeholder="Username" />\n  </InputGroup>\n  <InputGroup variant="filled">\n    <InputGroupPrepend>\n      <InputGroupAddon>@</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input placeholder="Username" />\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h4",null,Object(u.b)("inlineCode",{parentName:"h4"},"unstyled")),Object(u.b)("p",null,"For an unstyled input group that doesn't have border and padding spaces, it is not necessary to place an ",Object(u.b)("inlineCode",{parentName:"p"},"InputGroupPrepend")," or ",Object(u.b)("inlineCode",{parentName:"p"},"InputGroupAppend")," on either side of an ",Object(u.b)("inlineCode",{parentName:"p"},"Input"),"."),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup variant="unstyled">\n    <InputGroupAddon pr="1x">@</InputGroupAddon>\n    <Input placeholder="Username" />\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h3",null,"Multiple add-ons"),Object(u.b)("p",null,"Multiple add-ons are supported and can be mixed with checkbox and radio input components."),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <InputGroup>\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">$</InputGroupAddon>\n    </InputGroupPrepend>\n    <InputGroupPrepend>\n      <InputGroupAddon variant="filled">0.00</InputGroupAddon>\n    </InputGroupPrepend>\n    <Input />\n  </InputGroup>\n  <InputGroup>\n    <Input />\n    <InputGroupAppend>\n      <InputGroupAddon variant="filled">$</InputGroupAddon>\n    </InputGroupAppend>\n    <InputGroupAppend>\n      <InputGroupAddon variant="filled">0.00</InputGroupAddon>\n    </InputGroupAppend>\n  </InputGroup>\n</Stack>\n')),Object(u.b)("h3",null,"Multiple inputs"),Object(u.b)("p",null,"While multiple ",Object(u.b)("inlineCode",{parentName:"p"},"<Input />"),"s are supported visually, validation styles are only available for input groups with a single ",Object(u.b)("inlineCode",{parentName:"p"},"<Input />"),"."),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<InputGroup>\n  <InputGroupPrepend>\n    <InputGroupAddon variant="filled" whiteSpace="nowrap">First and last name</InputGroupAddon>\n  </InputGroupPrepend>\n  <Input placeholder="First name" defaultValue="John" required />\n  <Input placeholder="Last name" defaultValue="Doe" required />\n</InputGroup>\n')),Object(u.b)("h3",null,"Date inputs"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx"},'<InputGroup variant="unstyled">\n  <Input\n    placeholder="YYYY"\n    borderBottom={1}\n    textAlign="center"\n    width="12x"\n  />\n  <Text px="2x">\u2013</Text>\n  <Input\n    placeholder="MM"\n    borderBottom={1}\n    textAlign="center"\n    width="8x"\n  />\n  <Text px="2x">\u2013</Text>\n  <Input\n    placeholder="DD"\n    borderBottom={1}\n    textAlign="center"\n    width="8x"\n  />\n</InputGroup>\n')),Object(u.b)("h3",null,"Button add-ons"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'function Example() {\n  const { colorMode } = useColorMode();\n  const dividerColor ={\n    dark: \'gray:70\',\n    light: \'gray:30\',\n  }[colorMode];\n\n  return (\n    <Stack direction="column" spacing="4x">\n      <InputGroup>\n        <InputGroupPrepend>\n          <Button variant="secondary">\n            Action\n          </Button>\n        </InputGroupPrepend>\n        <Input />\n      </InputGroup>\n      <InputGroup>\n        <Input />\n        <InputGroupAppend>\n          <Button variant="secondary">\n            Action\n          </Button>\n        </InputGroupAppend>\n      </InputGroup>\n      <InputGroup>\n        <InputGroupPrepend>\n          <Button variant="secondary">\n            Host name\n            <Space width="1x" />\n            <Icon icon="angle-down" />\n          </Button>\n        </InputGroupPrepend>\n        <Input />\n        <InputGroupAppend>\n          <Button>\n            Action\n          </Button>\n        </InputGroupAppend>\n      </InputGroup>\n      <InputGroup>\n        <Input />\n        <ButtonGroup>\n          <Button borderRadius={0}>\n            Action\n          </Button>\n          <Divider orientation="vertical" color={dividerColor} />\n          <Button>\n            <Icon icon="settings" />\n          </Button>\n        </ButtonGroup>\n      </InputGroup>\n    </Stack>\n  );\n}\n\nrender(<Example />);\n')),Object(u.b)("h2",null,"Props"),Object(u.b)("h3",null,"InputGroup"),Object(u.b)("p",null,Object(u.b)("inlineCode",{parentName:"p"},"InputGroup")," composes the ",Object(u.b)("a",{parentName:"p",href:"./box"},Object(u.b)("inlineCode",{parentName:"a"},"Box"))," component."),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:"left"},"Name"),Object(u.b)("th",{parentName:"tr",align:"left"},"Type"),Object(u.b)("th",{parentName:"tr",align:"left"},"Default"),Object(u.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:"left"},"size"),Object(u.b)("td",{parentName:"tr",align:"left"},"string"),Object(u.b)("td",{parentName:"tr",align:"left"},"'md'"),Object(u.b)("td",{parentName:"tr",align:"left"},"The relative size to the input group itself. One of: ",Object(u.b)("inlineCode",{parentName:"td"},"'sm'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'md'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'lg'"))),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:"left"},"variant"),Object(u.b)("td",{parentName:"tr",align:"left"},"string"),Object(u.b)("td",{parentName:"tr",align:"left"},"'outline'"),Object(u.b)("td",{parentName:"tr",align:"left"},"The variant of the input style to use. One of: ",Object(u.b)("inlineCode",{parentName:"td"},"'outline'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'filled'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'unstyled'"))))),Object(u.b)("h3",null,"InputGroupAddon"),Object(u.b)("p",null,Object(u.b)("inlineCode",{parentName:"p"},"InputGroupAddon")," composes the ",Object(u.b)("a",{parentName:"p",href:"./flex"},Object(u.b)("inlineCode",{parentName:"a"},"Flex"))," component."),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:"left"},"Name"),Object(u.b)("th",{parentName:"tr",align:"left"},"Type"),Object(u.b)("th",{parentName:"tr",align:"left"},"Default"),Object(u.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:"left"},"size"),Object(u.b)("td",{parentName:"tr",align:"left"},"string"),Object(u.b)("td",{parentName:"tr",align:"left"},"'md'"),Object(u.b)("td",{parentName:"tr",align:"left"},"The relative size to the input group itself. One of: ",Object(u.b)("inlineCode",{parentName:"td"},"'sm'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'md'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'lg'"))),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:"left"},"variant"),Object(u.b)("td",{parentName:"tr",align:"left"},"string"),Object(u.b)("td",{parentName:"tr",align:"left"},"'outline'"),Object(u.b)("td",{parentName:"tr",align:"left"},"The variant of the input style to use. One of: ",Object(u.b)("inlineCode",{parentName:"td"},"'outline'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'filled'"),", ",Object(u.b)("inlineCode",{parentName:"td"},"'unstyled'"))))),Object(u.b)("h3",null,"InputGroupAppend"),Object(u.b)("p",null,Object(u.b)("inlineCode",{parentName:"p"},"InputGroupAppend")," composes the ",Object(u.b)("a",{parentName:"p",href:"./flex"},Object(u.b)("inlineCode",{parentName:"a"},"Flex"))," component."),Object(u.b)("h3",null,"InputGroupPrepend"),Object(u.b)("p",null,Object(u.b)("inlineCode",{parentName:"p"},"InputGroupPrepend")," composes the ",Object(u.b)("a",{parentName:"p",href:"./flex"},Object(u.b)("inlineCode",{parentName:"a"},"Flex"))," component."))}d.isMDXComponent=!0},tixK:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/inputgroup",function(){return t("gAcy")}])}},[["tixK",0,2,1]]]);
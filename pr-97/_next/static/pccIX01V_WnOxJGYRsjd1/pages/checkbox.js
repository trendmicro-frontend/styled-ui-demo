(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"+wNj":function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}n.d(t,"a",(function(){return a}))},"3ADl":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/checkbox",function(){return n("s1aV")}])},HbGN:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n("+wNj");function c(e,t){if(null==e)return{};var n,c,r=Object(a.a)(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(c=0;c<b.length;c++)n=b[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n("ERkP"),c=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var i=c.a.createContext({}),d=function(e){var t=c.a.useContext(i),n=t;return e&&(n="function"===typeof e?e(t):o({},t,{},e)),n},p=function(e){var t=d(e.components);return c.a.createElement(i.Provider,{value:t},e.children)},O="mdxType",j={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=d(n),O=a,m=p["".concat(b,".").concat(O)]||p[O]||j[O]||r;return n?c.a.createElement(m,o({ref:t},i,{components:n})):c.a.createElement(m,o({ref:t},i))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var r=n.length,b=new Array(r);b[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[O]="string"===typeof e?e:a,b[1]=o;for(var i=2;i<r;i++)b[i]=n[i];return c.a.createElement.apply(null,b)}return c.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},cxan:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},s1aV:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n("cxan"),c=n("HbGN"),r=n("ERkP"),b=n.n(r),o=n("ZVZ0"),l=(b.a.createElement,{}),i="wrapper";function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)(i,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",null,"Checkbox"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Checkbox")," is used in forms when a user needs to select multiple values from several options."),Object(o.b)("p",null,"Native HTML checkboxes are 100% accessible by default, so we used a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://dev.to/lkopacz/create-custom-keyboard-accessible-checkboxes-2036"}),"very common CSS technique")," to style the checkboxes."),Object(o.b)("p",null,"The Checkbox component composes ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"./controlbox"}),"ControlBox"),", a component we created to make it easy to style an element based on sibling inputs."),Object(o.b)("h2",null,"Import"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import Checkbox from '@trendmicro/react-styled-core/Checkbox';\n// or\nimport { Checkbox } from '@trendmicro/react-styled-core';\n")),Object(o.b)("h2",null,"Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"<Checkbox defaultChecked>Checkbox</Checkbox>\n")),Object(o.b)("h3",null,"Colors"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"variantColor")," prop to change the color scheme of the Checkbox. ",Object(o.b)("inlineCode",{parentName:"p"},"variantColor")," can be any color key with key ",Object(o.b)("inlineCode",{parentName:"p"},"50"),"(hover), ",Object(o.b)("inlineCode",{parentName:"p"},"60"),"(checked, active) that exist in the them.color."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack direction="row" spacing="6x">\n  <Checkbox variantColor="red" defaultChecked>\n    Checkbox\n  </Checkbox>\n  <Checkbox variantColor="green" defaultChecked>\n    Checkbox\n  </Checkbox>\n</Stack>\n')),Object(o.b)("h3",null,"Sizes"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"size")," prop to change the size of the ",Object(o.b)("inlineCode",{parentName:"p"},"Checkbox"),". You can set the value to ",Object(o.b)("inlineCode",{parentName:"p"},"sm"),", ",Object(o.b)("inlineCode",{parentName:"p"},"md"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"lg"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack direction="column" spacing="4x">\n  <Checkbox size="sm">Checkbox</Checkbox>\n  <Checkbox size="md">Checkbox</Checkbox>\n  <Checkbox size="lg">Checkbox</Checkbox>\n</Stack>\n')),Object(o.b)("h3",null,"States"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack direction="row" spacing="6x" alignItems="center">\n  <Checkbox>Checkbox</Checkbox>\n  <Checkbox defaultChecked>Checkbox</Checkbox>\n  <Checkbox disabled>Checkbox</Checkbox>\n  <Checkbox disabled defaultChecked>Checkbox</Checkbox>\n</Stack>\n')),Object(o.b)("h3",null,"Indeterminate"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'function IndeterminateExample() {\n  const [checkedItems, setCheckedItems] = React.useState([true, false]);\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n\n  return (\n    <>\n      <Checkbox\n        checked={allChecked}\n        indeterminate={isIndeterminate}\n        onChange={e => setCheckedItems([e.target.checked, e.target.checked])}\n        children="Parent Checkbox"\n      />\n      <Stack direction="column" pl="6x" mt="4x" spacing="4x">\n        <Checkbox\n          checked={checkedItems[0]}\n          onChange={e => setCheckedItems([e.target.checked, checkedItems[1]])}\n          children="Child Checkbox 1"\n        />\n        <Checkbox\n          checked={checkedItems[1]}\n          onChange={e => setCheckedItems([checkedItems[0], e.target.checked])}\n          children="Child Checkbox 2"\n        />\n      </Stack>\n    </>\n  );\n}\n')),Object(o.b)("h2",null,"Props"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Default"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"id"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The id assigned to input field")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"name"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The name of the input field in a checkbox (Useful for form submission)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"value"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")," or ",Object(o.b)("inlineCode",{parentName:"td"},"number")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The value to be used in the checkbox input. This is the value that will be returned on form submission.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"variantColor"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),'The color of the checkbox when it\'s checked. This should be one of the color keys in the theme (e.g."green", "red")')),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"size"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"sm"),", ",Object(o.b)("inlineCode",{parentName:"td"},"md"),", ",Object(o.b)("inlineCode",{parentName:"td"},"lg")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"md")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The size (width and height) of the checkbox")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"defaultChecked"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the checkbox will be initially checked.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"checked"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the checkbox will be checked. You'll need to pass ",Object(o.b)("inlineCode",{parentName:"td"},"onChange")," to update it's value (since it's now controlled)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"disabled"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the checkbox will be disabled")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"indeterminate"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the checkbox will be indeterminate. This only affects the icon shown inside checkbox")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"children"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The children of the checkbox.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"onChange"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"function")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Function called when the state of the checkbox changes.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"onBlur"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"function")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Function called when you blur out of the checkbox.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"onFocus"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"function")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Function called when the checkbox receive focus.")))))}d.isMDXComponent=!0}},[["3ADl",0,1]]]);
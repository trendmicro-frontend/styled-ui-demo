(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"+wNj":function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,"a",(function(){return a}))},"254t":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/input",function(){return n("gXbB")}])},HbGN:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n("+wNj");function r(e,t){if(null==e)return{};var n,r,l=Object(a.a)(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return j}));var a=n("ERkP"),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):o({},t,{},e)),n},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,b=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,O=d["".concat(b,".").concat(u)]||d[u]||s[u]||l;return n?r.a.createElement(O,o({ref:t},c,{components:n})):r.a.createElement(O,o({ref:t},c))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,b=new Array(l);b[0]=O;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"===typeof e?e:a,b[1]=o;for(var c=2;c<l;c++)b[c]=n[c];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},cxan:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},gXbB:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var a=n("cxan"),r=n("HbGN"),l=n("ERkP"),b=n.n(l),o=n("ZVZ0"),i=(b.a.createElement,{}),c="wrapper";function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(c,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",null,"Input"),Object(o.b)("p",null,"Input component is a component that is used to get user input in a text field."),Object(o.b)("h2",null,"Import"),Object(o.b)("h3",null,"Default imports"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import Input from '@trendmicro/react-styled-core/Input';\nimport InputLabel from '@trendmicro/react-styled-core/InputLabel';\n")),Object(o.b)("h3",null,"Named imports"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import {\n  Input,\n  InputLabel,\n} from '@trendmicro/react-styled-core';\n")),Object(o.b)("h2",null,"Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<>\n  <InputLabel mb="1x">Label:</InputLabel>\n  <Input placeholder="Basic example" />\n</>\n')),Object(o.b)("h3",null,"Sizes"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"size")," prop to change the size of the ",Object(o.b)("inlineCode",{parentName:"p"},"Input"),". You can set the value to ",Object(o.b)("inlineCode",{parentName:"p"},"sm"),", ",Object(o.b)("inlineCode",{parentName:"p"},"md"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"lg"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack direction="column" spacing="4x">\n  <Box>\n    <InputLabel mb="1x" size="sm">Label:</InputLabel>\n    <Input size="sm" placeholder="Small size (24px)" />\n  </Box>\n  <Box>\n    <InputLabel mb="1x" size="md">Label:</InputLabel>\n    <Input size="md" placeholder="Default size (32px)" />\n  </Box>\n  <Box>\n    <InputLabel mb="1x" size="lg">Label:</InputLabel>\n    <Input size="lg" placeholder="Large size (40px)" />\n  </Box>\n</Stack>\n')),Object(o.b)("h3",null,"Variants"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Input")," component comes in two variants: ",Object(o.b)("inlineCode",{parentName:"p"},"outline"),", ",Object(o.b)("inlineCode",{parentName:"p"},"filled"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"unstyled"),". Pass the ",Object(o.b)("inlineCode",{parentName:"p"},"variant")," prop and set it to either of these values."),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"outline")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Input variant="outline" placeholder="John Doe" />\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"filled")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Input variant="filled" placeholder="John Doe" />\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"unstyled")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Input variant="unstyled" placeholder="John Doe" />\n')),Object(o.b)("h3",null,"Attributes"),Object(o.b)("p",null,"Standard input attributes are supported, e.g., ",Object(o.b)("inlineCode",{parentName:"p"},"type"),", ",Object(o.b)("inlineCode",{parentName:"p"},"disabled"),", ",Object(o.b)("inlineCode",{parentName:"p"},"readOnly"),", ",Object(o.b)("inlineCode",{parentName:"p"},"required"),", etc."),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"type")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Grid\n  templateColumns="min-content auto"\n  columnGap="3x"\n  rowGap="3x"\n>\n  <Grid>\n    <Text>Name:</Text>\n  </Grid>\n  <Grid>\n    <Input type="text" placeholder="John Doe" />\n  </Grid>\n  <Grid>\n    <Text>Password:</Text>\n  </Grid>\n  <Grid>\n    <Input type="password" placeholder="Password" />\n  </Grid>\n</Grid>\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"disabled")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack directin="column" spacing="4x">\n  <Input disabled placeholder="Placeholder text" />\n  <Input disabled placeholder="Placeholder text" defaultValue="Disabled" />\n</Stack>\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"readOnly")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack directin="column" spacing="4x">\n  <Input readOnly placeholder="Placeholder text" />\n  <Input readOnly placeholder="Placeholder text" defaultValue="Read-only" />\n</Stack>\n')),Object(o.b)("h4",null,Object(o.b)("inlineCode",{parentName:"h4"},"required")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Input required placeholder="Placeholder text" />\n')),Object(o.b)("h3",null,"Adornments"),Object(o.b)("p",null,"Input adornments can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'function Example() {\n  const [view, setView] = React.useState(false);\n  const toggleView = () => setView(view => !view);\n  const { colorMode } = useColorMode();\n  const adornmentColor = {\n    dark: \'white:tertiary\',\n    light: \'black:tertiary\',\n  }[colorMode];\n  const adornmentIconName = view ? \'view\' : \'view-off\';\n  const inputType = view ? \'text\' : \'password\';\n\n  return (\n    <Stack direction="column" spacing="4x">\n      <Flex position="relative" alignItems="center">\n        <Box position="absolute" left={0}>\n          <TMIcon name="mobile" px="3x" color={adornmentColor} />\n        </Box>\n        <Input\n          placeholder="Mobile phone number"\n          px="10x"\n        />\n      </Flex>\n      <Flex position="relative" alignItems="center">\n        <Box position="absolute" left={0}>\n          <Text width="10x" textAlign="center" color={adornmentColor}>$</Text>\n        </Box>\n        <Input\n          placeholder="Enter the amount"\n          px="10x"\n        />\n        <Box position="absolute" right={0}>\n          <TMIcon name="check" color="green:50" px="3x"/>\n        </Box>\n      </Flex>\n      <Flex position="relative" alignItems="center">\n        <Input\n          type={inputType}\n          defaultValue="Revealed Password"\n          placeholder="Password"\n          pr="10x"\n        />\n        <Box position="absolute" right={0} zIndex={2}>\n          <ButtonBase onClick={toggleView}>\n            <TMIcon name={adornmentIconName} px="3x" color={adornmentColor} />\n          </ButtonBase>\n        </Box>\n      </Flex>\n    </Stack>\n  );\n}\n')),Object(o.b)("h3",null,"Validation"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"aria-invalid")," attribute to indicate that the value entered into an input field does not conform to the format expected by the application. ",Object(o.b)("inlineCode",{parentName:"p"},"aria-invalid")," can also be used to indicate that a required field has not been filled in."),Object(o.b)("p",null,"Set ",Object(o.b)("inlineCode",{parentName:"p"},"aria-invalid")," to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," on the fields that have failed validation, otherwise set it to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," if no errors detected."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const InlineError = (props) => (\n  <Text fontSize="sm" lineHeight="sm" color="red:50" {...props} />\n);\n\nconst InputField = ({\n  value,\n  onChange,\n  ...props\n}) => {\n  const isInvalid = (value === \'\');\n  let invalidInputStyle = {};\n  if (isInvalid) {\n    invalidInputStyle = {\n      \'aria-invalid\': true,\n      pr: \'10x\',\n    };\n  }\n\n  return (\n    <>\n      <Flex position="relative" alignItems="center" mb="1x">\n        <Input\n          placeholder="Enter your name here"\n          value={value}\n          onChange={onChange}\n          {...invalidInputStyle}\n        />\n        {isInvalid && (\n          <Box position="absolute" right={0}>\n            <TMIcon name="warning-circle" px="3x" color="red:50" />\n          </Box>\n        )}\n      </Flex>\n      <Box>\n        {isInvalid && (\n          <InlineError>This is a required field.</InlineError>\n        )}\n      </Box>\n    </>\n  );\n};\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'\');\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <InputField value={value} onChange={onChange} />\n  );\n}\n\nrender(<Example />);\n')),Object(o.b)("h2",null,"Props"),Object(o.b)("h3",null,"Input"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Input")," composes the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"./pseudobox"}),Object(o.b)("inlineCode",{parentName:"a"},"PseudoBox"))," component."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Default"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"size")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"'md'"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The visual size of the ",Object(o.b)("inlineCode",{parentName:"td"},"input")," element. One of: 'sm', 'md', 'lg'")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"variant")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"'outline'"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The variant of the input style to use. One of: 'outline', 'filled', 'unstyled'")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"disabled")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the input will be disabled. This sets ",Object(o.b)("inlineCode",{parentName:"td"},"aria-disabled=true")," and you can style this state by passing the ",Object(o.b)("inlineCode",{parentName:"td"},"_disabled")," prop.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"readOnly")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", prevents the value of the input from being edited.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"aria-invalid")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"boolean")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(o.b)("inlineCode",{parentName:"td"},"true"),", the input will indicate an error. You can style this state by passing the ",Object(o.b)("inlineCode",{parentName:"td"},"_invalid")," prop.")))),Object(o.b)("h3",null,"InputLabel"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"InputLabel")," composes the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"./box"}),Object(o.b)("inlineCode",{parentName:"a"},"Box"))," component."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Default"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"size")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("inlineCode",{parentName:"td"},"string")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"'md'"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"One of: 'sm', 'md', 'lg'")))))}p.isMDXComponent=!0}},[["254t",0,1]]]);
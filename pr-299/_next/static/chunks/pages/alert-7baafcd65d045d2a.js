(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6966],{3645:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}});var a=n(7896),r=n(59740),l=(n(2784),n(30876)),i=["components"],s={};function o(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"Alert"),(0,l.kt)("p",null,"An alert displays a short, important message in a way that attracts the user's attention without interrupting the user's task."),(0,l.kt)("h2",null,"Import"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { Alert } from '@trendmicro/react-styled-ui';\n")),(0,l.kt)("h2",null,"Usage"),(0,l.kt)("h3",null,"Severity levels"),(0,l.kt)("p",null,"Alerts provide four severity levels, each with a distinctive icon and color."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <Alert severity="success">\n    <Text>This is a success alert.</Text>\n  </Alert>\n  <Alert severity="info">\n    <Text>This is an info alert.</Text>\n  </Alert>\n  <Alert severity="warning">\n    <Text>This is a warning alert.</Text>\n  </Alert>\n  <Alert severity="error">\n    <Text>This is an error alert.</Text>\n  </Alert>\n</Stack>\n')),(0,l.kt)("h3",null,"With close button"),(0,l.kt)("p",null,"Set ",(0,l.kt)("inlineCode",{parentName:"p"},"isCloseButtonVisible")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to include a close button on the right-hand side of an alert."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <Alert severity="success" isCloseButtonVisible>\n    <Text>This is a success alert.</Text>\n  </Alert>\n  <Alert severity="info" isCloseButtonVisible>\n    <Text>This is an info alert.</Text>\n  </Alert>\n  <Alert severity="warning" isCloseButtonVisible>\n    <Text>This is a warning alert.</Text>\n  </Alert>\n  <Alert severity="error" isCloseButtonVisible>\n    <Text>This is an error alert.</Text>\n  </Alert>\n</Stack>\n')),(0,l.kt)("h3",null,"Icons"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"icon")," prop allows you to override the default icon for the specified severity."),(0,l.kt)("p",null,"Setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"icon")," prop to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," will remove the icon altogether."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <Alert\n    isCloseButtonVisible\n    severity="success"\n  >\n    This is a success alert.\n  </Alert>\n  <Alert\n    isCloseButtonVisible\n    severity="success"\n    icon="success"\n  >\n    This is a success alert.\n  </Alert>\n  <Alert\n    isCloseButtonVisible\n    severity="success"\n    icon={<Icon icon="check-circle-o" color="gray:80" />}\n  >\n    This is a success alert.\n  </Alert>\n  <Alert\n    isCloseButtonVisible\n    severity="success"\n    icon={false}\n  >\n    This is a success alert.\n  </Alert>\n</Stack>\n')),(0,l.kt)("h3",null,"Multiline text"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const Paragraph = (props) => (\n  <PseudoBox mb="1x" _lastChild={{ mb: 0 }} {...props} />\n);\n\nfunction Example() {\n  return (\n    <Alert isCloseButtonVisible severity="info">\n      <Paragraph>This is the first paragraph.</Paragraph>\n      <Paragraph>This is the second paragraph.</Paragraph>\n      <Paragraph>This is the third paragraph.</Paragraph>\n    </Alert>\n  );\n}\n\nrender(<Example />);\n')),(0,l.kt)("h3",null,"Formatted title"),(0,l.kt)("p",null,"You can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"Text")," component with ",(0,l.kt)("inlineCode",{parentName:"p"},"fontWeight")," to display a formatted title above the content."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x">\n  <Alert isCloseButtonVisible severity="success">\n    <Box mb="1x">\n      <Text fontWeight="bold">Success</Text>\n    </Box>\n    <Text mr={-36}>\n      This is a success alert.\n    </Text>\n  </Alert>\n  <Alert isCloseButtonVisible severity="info">\n    <Box mb="1x">\n      <Text fontWeight="bold">Info</Text>\n    </Box>\n    <Text mr={-36}>\n      This is an info alert.\n    </Text>\n  </Alert>\n  <Alert isCloseButtonVisible severity="warning">\n    <Box mb="1x">\n      <Text fontWeight="bold">Warning</Text>\n    </Box>\n    <Text mr={-36}>\n      This is a warning alert.\n    </Text>\n  </Alert>\n  <Alert isCloseButtonVisible severity="error">\n    <Box mb="1x">\n      <Text fontWeight="bold">Error</Text>\n    </Box>\n    <Text mr={-36}>\n      This is an error alert.\n    </Text>\n  </Alert>\n</Stack>\n')),(0,l.kt)("h3",null,"Actions"),(0,l.kt)("p",null,"An alert can have an action button (such close). It is rendered after the message, at the end of the alert."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing={1}>\n  <Alert isCloseButtonVisible severity="warning">\n    <Text>Your browser is currently not supported. <Link>More Information</Link></Text>\n  </Alert>\n  <Alert isCloseButtonVisible severity="error">\n    <Flex justify="space-between" mt={-1} mb={-2}>\n      <Text>Your license will expire in 7 days.</Text>\n      <FlatButton size="sm" variant="outline" variantColor="black:primary">\n        Renew Now\n      </FlatButton>\n    </Flex>\n  </Alert>\n</Stack>\n')),(0,l.kt)("h3",null,"Transition"),(0,l.kt)("p",null,"You can use a transition component such as ",(0,l.kt)("inlineCode",{parentName:"p"},"Collapse")," to give the appearance of a smooth transition."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => setIsOpen(false);\n\n  return (\n    <>\n      <Collapse isOpen={isOpen}>\n        <Alert isCloseButtonVisible severity="info" onClose={handleClose}>\n          Click the close button on the right side.\n        </Alert>\n      </Collapse>\n      <Box mt="4x">\n        <Button onClick={handleOpen} disabled={isOpen}>\n          Reopen\n        </Button>\n      </Box>\n    </>\n  );\n}\n')),(0,l.kt)("h2",null,"Props"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Alert")," composes the ",(0,l.kt)("a",{parentName:"p",href:"./flex"},(0,l.kt)("inlineCode",{parentName:"a"},"Flex"))," component."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"isCloseButtonVisible"),(0,l.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", a close button will appear on the right side.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClose"),(0,l.kt)("td",{parentName:"tr",align:"left"},"function"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"A callback called when the close button is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"severity"),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"},"'success'"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The severity level of the alert. One of: ",(0,l.kt)("inlineCode",{parentName:"td"},"'success'"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"'info'"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"'warning'"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"'error'"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"icon"),(0,l.kt)("td",{parentName:"tr",align:"left"},"string ","|"," ReactNode ","|"," false"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Override the icon displayed before the children. Unless provided, the icon is mapped to the value of the ",(0,l.kt)("inlineCode",{parentName:"td"},"severity")," prop.")))))}o.isMDXComponent=!0},52129:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/alert",function(){return n(3645)}])}},function(e){e.O(0,[9774,2888,179],(function(){return t=52129,e(e.s=t);var t}));var t=e.O();_N_E=t}]);
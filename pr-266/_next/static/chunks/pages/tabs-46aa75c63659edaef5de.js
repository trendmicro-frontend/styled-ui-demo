_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[65],{"IE/8":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return o}));var a=n("97Jx"),b=n.n(a),l=n("m3Bd"),r=n.n(l),i=(n("ERkP"),n("ZVZ0")),c=(n("l1C2"),{});function o(e){var t=e.components,n=r()(e,["components"]);return Object(i.b)("wrapper",b()({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"Tabs"),Object(i.b)("p",null,"An accessible tabs component."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"Tab")," and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," elements are associated by their order in the tree.\nNone of the components are empty wrappers, each is associated with a real DOM\nelement in the document, giving you maximum control over styling and\ncomposition."),Object(i.b)("h2",null,"Import"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'import { Tabs, TabList, TabPanels, Tab, TabPanel } from "@trendmicro/react-styled-ui/Tabs";\n')),Object(i.b)("h2",null,"Usage"),Object(i.b)("p",null,"You can render any element within ",Object(i.b)("inlineCode",{parentName:"p"},"Tabs"),", but ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," should only have ",Object(i.b)("inlineCode",{parentName:"p"},"Tab"),"\nas children, and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanels")," should have ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," as children."),Object(i.b)("p",null,"Tabs expects ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanels")," as children. The order doesn't matter,\nyou can have tabs at the top, at the bottom, or both."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Tabs>\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>three!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n")),Object(i.b)("h3",null,"Tab variants and color"),Object(i.b)("p",null,"Tabs come in 3 different variants to style the tabs: ",Object(i.b)("inlineCode",{parentName:"p"},"line"),",",Object(i.b)("inlineCode",{parentName:"p"},"enclosed"),", ",Object(i.b)("inlineCode",{parentName:"p"},"unstyled")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="enclosed">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>three!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Make a Tab disabled"),Object(i.b)("p",null,"When a ",Object(i.b)("inlineCode",{parentName:"p"},"Tab")," is disabled, it's skipped during keyboard navigation and it's not\nclickable."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>One</Tab>\n        <Tab disabled>Two</Tab>\n        <Tab>Three</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel><p>1</p></TabPanel>\n        <TabPanel><p>2</p></TabPanel>\n        <TabPanel><p>3</p></TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n")),Object(i.b)("h3",null,"Change the tabs alignment"),Object(i.b)("p",null,"You can change the alignment of the ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," by passing ",Object(i.b)("inlineCode",{parentName:"p"},"align")," prop. We\nsupport 3 sizes ",Object(i.b)("inlineCode",{parentName:"p"},"left"),", ",Object(i.b)("inlineCode",{parentName:"p"},"center"),", ",Object(i.b)("inlineCode",{parentName:"p"},"right"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs align="right" variant="enclosed">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Fitted Tabs"),Object(i.b)("p",null,"Stretch the tab list to fit the container by passing ",Object(i.b)("inlineCode",{parentName:"p"},"isFitted")," prop."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs isFitted variant="enclosed">\n  <TabList mb="1em">\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Styling the tab states manually"),Object(i.b)("p",null,"In event you need to create custom styles for the tabs. Simply set the variant\nto ",Object(i.b)("inlineCode",{parentName:"p"},"unstyled"),", and use the ",Object(i.b)("inlineCode",{parentName:"p"},"_selected"),", ",Object(i.b)("inlineCode",{parentName:"p"},"_hover"),", ",Object(i.b)("inlineCode",{parentName:"p"},"_active")," style props."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="unstyled">\n  <TabList>\n    <Tab _selected={{ color: "white", bg: "blue:50" }}>Tab 1</Tab>\n    <Tab _selected={{ color: "white", bg: "green:40" }}>Tab 2</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Manually Activated Tabs"),Object(i.b)("p",null,"By default, ",Object(i.b)("inlineCode",{parentName:"p"},"Tabs")," are activated automatically. This means when you use the\narrow keys to change tabs, the tab is activated and focused."),Object(i.b)("p",null,"The content of a ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," should ideally be preloaded. However, if switching to a tab panel causes a network request and possibly a page refresh, there might be some notable latency and this might affect the experience for keyboard and screen reader users."),Object(i.b)("p",null,"In this scenario, you should use a manually activated tab, it moves focus\nwithout activating the tabs. With focus on a specifc tab, users can activate a\ntab by pressing ",Object(i.b)("kbd",null,"Space")," or ",Object(i.b)("kbd",null,"Enter"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs activateOnKeypress variant="line">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Data Tabs"),Object(i.b)("p",null,"If you'd like to drive your tabs with an array instead of using the granular\ncomponents, you can create your own DataTabs component."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  // First, you create the component...\n  function DataTabs({ data }) {\n    return (\n      <Tabs>\n        <TabList>\n          {data.map((tab, index) => (\n            <Tab key={index}>{tab.label}</Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          {data.map((tab, index) => (\n            <TabPanel p={4} key={index}>\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    );\n  }\n\n  // Next, you have an array of data...\n  const tabData = [\n    {\n      label: "Nigerian Jollof",\n      content: "Perhaps the greatest dish ever invented.",\n    },\n    {\n      label: "Pounded Yam & Egusi",\n      content:\n        "Perhaps the surest dish ever invented but fills the stomach more than rice.",\n    },\n  ];\n\n  // you can just pass it in:\n  return <DataTabs data={tabData} />;\n}\n')),Object(i.b)("h2",null,"Accessibility"),Object(i.b)("h3",null,"Keyboard"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Key"),Object(i.b)("th",{parentName:"tr",align:null},"Action"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"ArrowLeft")),Object(i.b)("td",{parentName:"tr",align:null},"Moves focus to the next tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"ArrowUp")),Object(i.b)("td",{parentName:"tr",align:null},"Moves focus to the previous tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Tab")),Object(i.b)("td",{parentName:"tr",align:null},"When focus moves into the tab list, places focus on the active tab element")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Space")," or ",Object(i.b)("inlineCode",{parentName:"td"},"Enter")),Object(i.b)("td",{parentName:"tr",align:null},"Activates the tab if it was not activated automatically on focus")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Home")),Object(i.b)("td",{parentName:"tr",align:null},"Moves focus to the first tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"End")),Object(i.b)("td",{parentName:"tr",align:null},"Moves focus to the last tab")))),Object(i.b)("h3",null,"ARIA roles"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Component"),Object(i.b)("th",{parentName:"tr",align:null},"Aria"),Object(i.b)("th",{parentName:"tr",align:null},"Usage"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Tab"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},'role="tab"')),Object(i.b)("td",{parentName:"tr",align:null},"Indicates that it's a tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"aria-selected")),Object(i.b)("td",{parentName:"tr",align:null},"Set to ",Object(i.b)("inlineCode",{parentName:"td"},"true")," a tab is selected and all other Tabs have it set to ",Object(i.b)("inlineCode",{parentName:"td"},"false"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"aria-controls")),Object(i.b)("td",{parentName:"tr",align:null},"Set to the ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of its associated ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"TabList"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"id")),Object(i.b)("td",{parentName:"tr",align:null},"The ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of the ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel")," that's referencd by its associated ",Object(i.b)("inlineCode",{parentName:"td"},"Tab"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"aria-orientation")),Object(i.b)("td",{parentName:"tr",align:null},"Set to vertical or horizontal based on the value of the ",Object(i.b)("inlineCode",{parentName:"td"},"orientation")," prop.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},'role="tablist"')),Object(i.b)("td",{parentName:"tr",align:null},"Indicates that it's a tablist")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"aria-labelledby")),Object(i.b)("td",{parentName:"tr",align:null},"Set to the ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of the ",Object(i.b)("inlineCode",{parentName:"td"},"Tab")," that labels the ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel"),".")))),Object(i.b)("h2",null,"Props"),Object(i.b)("h3",null,"Tabs Props"),Object(i.b)("p",null,"Tabs composes ",Object(i.b)("inlineCode",{parentName:"p"},"Box")," so you call pass all ",Object(i.b)("inlineCode",{parentName:"p"},"Box")," related props."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"onChange")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"(index: number) => void")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The callback to update the active tab index.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"index")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"number")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The controlled index of the tabs.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"defaultIndex")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"number")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The index of the initial active tab.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"activateOnKeypress")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", keyboard navigation changes focus between tabs but doens't activate it. User will have to press ",Object(i.b)("inlineCode",{parentName:"td"},"Enter")," to active it")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"children")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The children of the switch.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"variant")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"line"),",",Object(i.b)("inlineCode",{parentName:"td"},"enclosed"),", ",Object(i.b)("inlineCode",{parentName:"td"},"unstyled")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"line")),Object(i.b)("td",{parentName:"tr",align:null},"The visual style of the tab.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"orientation")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"horizontal"),", ",Object(i.b)("inlineCode",{parentName:"td"},"vertical")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"horizontal")),Object(i.b)("td",{parentName:"tr",align:null},"The orientation of the tabs")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"isFitted")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the tabs will stretch to fill the available space")))),Object(i.b)("h3",null,"Tab Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"disabled")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the control. This sets ",Object(i.b)("inlineCode",{parentName:"td"},"aria-disabled=true")," and you can style this state by passing the ",Object(i.b)("inlineCode",{parentName:"td"},"_disabled")," prop.")))))}o.isMDXComponent=!0},Iblr:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tabs",function(){return n("IE/8")}])},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return O}));var a=n("ERkP"),b=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,b=function(e,t){if(null==e)return{};var n,a,b={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}var o=b.a.createContext({}),p=function(e){var t=b.a.useContext(o),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return b.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},m=b.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,O=d["".concat(r,".").concat(m)]||d[m]||s[m]||l;return n?b.a.createElement(O,i(i({ref:t},o),{},{components:n})):b.a.createElement(O,i({ref:t},o))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"===typeof e?e:a,r[1]=i;for(var o=2;o<l;o++)r[o]=n[o];return b.a.createElement.apply(null,r)}return b.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}},[["Iblr",0,2,1]]]);
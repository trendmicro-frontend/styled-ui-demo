_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[46],{"0aQO":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/menu",function(){return n("6gEh")}])},"6gEh":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var a=n("97Jx"),l=n.n(a),r=n("m3Bd"),b=n.n(r),i=(n("ERkP"),n("ZVZ0")),u=(n("l1C2"),{});function c(e){var t=e.components,n=b()(e,["components"]);return Object(i.b)("wrapper",l()({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"Menu"),Object(i.b)("p",null,"An accessible dropdown menu for the common dropdown menu button design pattern.\nMenu uses roving tabIndex for focus management."),Object(i.b)("p",null,Object(i.b)("carbon-ad",null)),Object(i.b)("h2",null,"Import"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Menu"),": The wrapper component that provides context, state, and focus\nmanagement."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuList"),": The wrapper for the menu items. Must be a direct child of ",Object(i.b)("inlineCode",{parentName:"li"},"Menu"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuItem"),": The trigger that handles menu selection. Must be a direct child of\na ",Object(i.b)("inlineCode",{parentName:"li"},"MenuList"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuGroup"),": A wrapper to group related menu items."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuDivider"),": A visual separator for menu items and groups.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { Menu, MenuList, MenuItem, MenuGroup, MenuDivider } from '@trendmicro/react-styled-ui';\n// or\nimport Menu from '@trendmicro/react-styled-ui/Menu';\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuButton"),": The trigger for the menu list. Must be a direct child of ",Object(i.b)("inlineCode",{parentName:"li"},"Menu"),".")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import MenuButton from '@trendmicro/react-styled-ui/MenuButton';\n// or\nimport { MenuButton } from '@trendmicro/react-styled-ui';\n")),Object(i.b)("h2",null,"Usage"),Object(i.b)("h3",null,"Basic menu with an anchor"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"function basicMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const { isOpen, onClose, onToggle } = useDisclosure();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    onToggle();\n  };\n\n  return (\n    <>\n      <Button onClick={handleClick}>Select an option</Button>\n      <Menu\n        anchorEl={anchorEl}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <MenuList>\n          <MenuItem>List item</MenuItem>\n          <MenuItem>List item</MenuItem>\n          <MenuItem>List item</MenuItem>\n        </MenuList>\n      </Menu>\n    </>\n  );\n}\n")),Object(i.b)("h3",null,"Basic menu with ",Object(i.b)("inlineCode",{parentName:"h3"},"MenuButton")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Stack shouldWrapChildren spacing="2x">\n  <Menu>\n    <MenuButton>Select an option</MenuButton>\n    <MenuList maxHeight="200px" overflow="auto">\n      <MenuItem>List item 1</MenuItem>\n      <MenuItem>List item 2</MenuItem>\n      <MenuItem>List item 3</MenuItem>\n      <MenuItem>List item 4</MenuItem>\n      <MenuItem>List item 5</MenuItem>\n      <MenuItem>List item 6</MenuItem>\n      <MenuItem>List item 7</MenuItem>\n      <MenuItem>List item 8</MenuItem>\n      <MenuItem>List item 9</MenuItem>\n      <MenuItem>List item 10</MenuItem>\n      <MenuItem>List item 11</MenuItem>\n      <MenuItem>List item 12</MenuItem>\n    </MenuList>\n  </Menu>\n  <Menu>\n    <MenuButton variant="ghost">Select an option</MenuButton>\n    <MenuList>\n      <MenuItem>List item</MenuItem>\n      <MenuItem>List item</MenuItem>\n      <MenuItem>List item</MenuItem>\n    </MenuList>\n  </Menu>\n</Stack>\n')),Object(i.b)("h3",null,"Group"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton>Select an option</MenuButton>\n  <MenuList>\n    <MenuGroup title="title1">\n      <MenuItem px="6x">List item</MenuItem>\n      <MenuItem px="6x">List item</MenuItem>\n      <MenuItem px="6x">List item</MenuItem>\n    </MenuGroup>\n    <MenuGroup title="title2">\n      <MenuItem px="6x">List item</MenuItem>\n      <MenuItem px="6x">List item</MenuItem>\n      <MenuItem px="6x">List item</MenuItem>\n    </MenuGroup>\n  </MenuList>\n</Menu>\n')),Object(i.b)("h3",null,"Divider"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Menu>\n  <MenuButton>Select an option</MenuButton>\n  <MenuList>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuDivider />\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n  </MenuList>\n</Menu>\n")),Object(i.b)("h3",null,"Disabled"),Object(i.b)("p",null,"Add ",Object(i.b)("inlineCode",{parentName:"p"},"disabled")," property on ",Object(i.b)("inlineCode",{parentName:"p"},"MenuItem")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Menu>\n  <MenuButton>Select an option</MenuButton>\n  <MenuList>\n    <MenuItem>List item</MenuItem>\n    <MenuItem disabled>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n  </MenuList>\n</Menu>\n")),Object(i.b)("h3",null,"Set the minimum width of the ",Object(i.b)("inlineCode",{parentName:"h3"},"MenuList")," to the width of the ",Object(i.b)("inlineCode",{parentName:"h3"},"MenuButton")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Menu display="inline-block">\n  <MenuButton>Select an option</MenuButton>\n  <MenuList minWidth="100%" whiteSpace="nowrap">\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n  </MenuList>\n</Menu>\n')),Object(i.b)("h3",null,"Menu with icon"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton>Select an option</MenuButton>\n  <MenuList>\n    <MenuItem><Icon icon="delete" mr="2x"/>List item</MenuItem>\n    <MenuItem><Icon icon="edit" mr="2x"/>List item</MenuItem>\n    <MenuItem><Icon icon="share" mr="2x"/>List item</MenuItem>\n  </MenuList>\n</Menu>\n')),Object(i.b)("h3",null,"Dropup Menu"),Object(i.b)("p",null,"Add the ",Object(i.b)("inlineCode",{parentName:"p"},"placement")," property with ",Object(i.b)("inlineCode",{parentName:"p"},"top-start")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Menu display="inline-block" placement="top-start">\n  <MenuButton>Select an option</MenuButton>\n  <MenuList minWidth="100%" whiteSpace="nowrap">\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n  </MenuList>\n</Menu>\n')),Object(i.b)("h3",null,"Menu with checkbox"),Object(i.b)("p",null,"Need to set ",Object(i.b)("inlineCode",{parentName:"p"},"closeOnSelect")," to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," on ",Object(i.b)("inlineCode",{parentName:"p"},"Menu")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'function menuWithCheckbox() {\n  const [checkedItems, setCheckedItems] = React.useState([\'host\', \'ip\']);\n  const handleChange = (e) => {\n    const value = e.target.value;\n    const items = [...checkedItems];\n    items.indexOf(value) === -1 ? items.push(value) : items.splice(items.indexOf(value), 1);\n    setCheckedItems(items);\n  };\n  return (\n    <Menu closeOnSelect={false}>\n      <MenuButton>Select an option</MenuButton>\n      <MenuList>\n        <CheckboxGroup size="sm" defaultValue={checkedItems}>\n          <MenuItem><Checkbox value="host" onChange={e => handleChange(e)}>Endpoint name</Checkbox></MenuItem>\n          <MenuItem><Checkbox value="ip" onChange={e => handleChange(e)}>IP address</Checkbox></MenuItem>\n          <MenuItem><Checkbox value="os" onChange={e => handleChange(e)}>Operating system</Checkbox></MenuItem>\n        </CheckboxGroup>\n      </MenuList>\n    </Menu>\n  );\n}\n')),Object(i.b)("h3",null,"Menu with label inline"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'function inlineLabelMenu() {\n  const [menuItem, setMenuItem] = React.useState(\'Name\');\n\n  const handleClick = (event) => {\n    if (event.key === \'Enter\' || event.type === \'click\') {setMenuItem(event.target.innerHTML)}\n  };\n\n  return (\n    <Menu display="inline-block">\n      <MenuButton><Text color="white:secondary" mr="1x">Search by:</Text>{menuItem}</MenuButton>\n      <MenuList onClick={handleClick} minWidth="100%" whiteSpace="nowrap">\n        <MenuItem onKeyDown={handleClick}>Name</MenuItem>\n        <MenuItem onKeyDown={handleClick}>Address</MenuItem>\n        <MenuItem onKeyDown={handleClick}>Postcode</MenuItem>\n      </MenuList>\n    </Menu>\n  );\n}\n')),Object(i.b)("h3",null,"Offset position"),Object(i.b)("p",null,"Add ",Object(i.b)("inlineCode",{parentName:"p"},"skidding")," or ",Object(i.b)("inlineCode",{parentName:"p"},"distance")," to customize menu offset position"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Menu>\n  <MenuButton>Select an option</MenuButton>\n  <MenuList skidding={20} distance={8}>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n    <MenuItem>List item</MenuItem>\n  </MenuList>\n</Menu>\n")),Object(i.b)("h2",null,"Accessibility"),Object(i.b)("h3",null,"Keyboard Interaction"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Key"),Object(i.b)("th",{parentName:"tr",align:null},"Action"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Enter")," or ",Object(i.b)("inlineCode",{parentName:"td"},"Space")),Object(i.b)("td",{parentName:"tr",align:null},"When ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton")," receives focus, opens the menu and places focus on the first menu item")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"ArrowDown")),Object(i.b)("td",{parentName:"tr",align:null},"When ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton")," receives focus, opens the menu and moves focus to the first menu item")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"ArrowUp")),Object(i.b)("td",{parentName:"tr",align:null},"When ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton")," receives focus, opens the menu and moves focus to the last menu item")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"Escape")),Object(i.b)("td",{parentName:"tr",align:null},"When the menu is open, closes the menu and sets focus to the ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton"))))),Object(i.b)("h3",null,"ARIA roles"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"For ",Object(i.b)("inlineCode",{parentName:"strong"},"MenuButton"),":")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"It has ",Object(i.b)("inlineCode",{parentName:"li"},"role")," set to ",Object(i.b)("inlineCode",{parentName:"li"},"button"),"."),Object(i.b)("li",{parentName:"ul"},"It has aria-haspopup set to either ",Object(i.b)("inlineCode",{parentName:"li"},"menu"),"."),Object(i.b)("li",{parentName:"ul"},"When the menu is displayed, ",Object(i.b)("inlineCode",{parentName:"li"},"MenuButton")," has ",Object(i.b)("inlineCode",{parentName:"li"},"aria-expanded")," set to ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"MenuButton")," has ",Object(i.b)("inlineCode",{parentName:"li"},"aria-controls")," set to the ",Object(i.b)("inlineCode",{parentName:"li"},"id")," of the ",Object(i.b)("inlineCode",{parentName:"li"},"MenuList"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"For ",Object(i.b)("inlineCode",{parentName:"strong"},"MenuList"),":")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"It contains the ",Object(i.b)("inlineCode",{parentName:"li"},"MenuItem")," has role ",Object(i.b)("inlineCode",{parentName:"li"},"menu"),".")),Object(i.b)("h2",null,"Props"),Object(i.b)("h3",null,"Menu Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"children"),Object(i.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The children of the menu must be ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton")," or ",Object(i.b)("inlineCode",{parentName:"td"},"MenuList"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"isOpen"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the menu will be opened")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"autoSelect"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"false")),Object(i.b)("td",{parentName:"tr",align:null},"The menu will select the first enabled item when it opens, the trigger item must be ",Object(i.b)("inlineCode",{parentName:"td"},"MenuButton"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"closeOnBlur"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true")),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the menu will close on outside click or blur")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"closeOnSelect"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true")),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the menu will close on menu item select")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"placement"),Object(i.b)("td",{parentName:"tr",align:null},"PopperJS.placement"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"bottom-start")),Object(i.b)("td",{parentName:"tr",align:null},"The placement of the ",Object(i.b)("inlineCode",{parentName:"td"},"MenuList"),". One of: ",Object(i.b)("inlineCode",{parentName:"td"},"'top'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'bottom'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'right'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'left'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'top-start'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'top-end'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'bottom-start'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'bottom-end'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'right-start'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'right-end'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'left-start'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'left-end'"))))),Object(i.b)("h3",null,"MenuButton Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"children"),Object(i.b)("td",{parentName:"tr",align:null},"React.ReactNode")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onClick"),Object(i.b)("td",{parentName:"tr",align:null},"React.MouseEventHandler")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onKeyDown"),Object(i.b)("td",{parentName:"tr",align:null},"React.KeyboardEventHandler")))),Object(i.b)("h3",null,"MenuList Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"children"),Object(i.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The content of the ",Object(i.b)("inlineCode",{parentName:"td"},"MenuList"),", should be the ",Object(i.b)("inlineCode",{parentName:"td"},"MenuItem")," component")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onClick"),Object(i.b)("td",{parentName:"tr",align:null},"React.MouseEventHandler"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"Function to be called when you click on the menu item")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onBlur"),Object(i.b)("td",{parentName:"tr",align:null},"React.FocusEventHandler"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"Function to be called when you blur out of the menu list")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"skidding"),Object(i.b)("td",{parentName:"tr",align:null},"number"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"0")),Object(i.b)("td",{parentName:"tr",align:null},"Displaces the menu (in pixels) along the reference element. Used by ",Object(i.b)("a",{parentName:"td",href:"https://popper.js.org/docs/v2/modifiers/offset/#skidding-1"},Object(i.b)("inlineCode",{parentName:"a"},"popper.js")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"distance"),Object(i.b)("td",{parentName:"tr",align:null},"number"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"0")),Object(i.b)("td",{parentName:"tr",align:null},"Displaces the menu (in pixels) away from, or toward, the reference. Used by ",Object(i.b)("a",{parentName:"td",href:"https://popper.js.org/docs/v2/modifiers/offset/#distance-1"},Object(i.b)("inlineCode",{parentName:"a"},"popper.js")))))),Object(i.b)("h3",null,"MenuItem Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"disabled"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the menu item will be disabled")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onClick"),Object(i.b)("td",{parentName:"tr",align:null},"React.MouseEventHandler"),Object(i.b)("td",{parentName:"tr",align:null},"Function that is called on click and enter/space keypress")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"onKeyDown"),Object(i.b)("td",{parentName:"tr",align:null},"React.KeyboardEventHander"),Object(i.b)("td",{parentName:"tr",align:null},"Function that is called on keydown")))),Object(i.b)("h3",null,"MenuGroup Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"children"),Object(i.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(i.b)("td",{parentName:"tr",align:null},"The content of the menu group, should be the ",Object(i.b)("inlineCode",{parentName:"td"},"MenuItem")," component")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"title"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"The title of the menu group")))))}c.isMDXComponent=!0},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return s}));var a=n("ERkP"),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),o=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=o(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=o(n),d=a,s=m["".concat(b,".").concat(d)]||m[d]||p[d]||r;return n?l.a.createElement(s,i(i({ref:t},c),{},{components:n})):l.a.createElement(s,i({ref:t},c))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var r=n.length,b=new Array(r);b[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"===typeof e?e:a,b[1]=i;for(var c=2;c<r;c++)b[c]=n[c];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}},[["0aQO",0,2,1]]]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9283],{58402:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return i}});var a=n(7896),r=n(59740),o=(n(2784),n(30876)),d=["components"],l={};function i(e){var t=e.components,n=(0,r.Z)(e,d);return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Badge"),(0,o.kt)("p",null,"Badges are used to highlight an item's status for quick recognition."),(0,o.kt)("h2",null,"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Badge } from '@tonic-ui/react';\n")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x" shouldWrapChildren>\n  <Stack direction="row" spacing="6x" shouldWrapChildren>\n    <Badge badgeContent="5+">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge badgeContent="99+">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge badgeContent="87">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge variant="dot" offset={[4, 2]} borderColor="gray:100">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge variant="dot" dotSize={6} offset={[4, 2]} borderColor="gray:100">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge isHidden>\n      <Icon icon="alert" />\n    </Badge>\n    <Badge badgeContent={0}>\n      <Icon icon="alert" />\n    </Badge>\n    <Badge badgeContent="!">\n      <Icon icon="alert" />\n    </Badge>\n    <Badge badgeContent={<Text color="yellow:50">Text</Text>}>\n      <Icon icon="alert" />\n    </Badge>\n  </Stack>\n  <Stack direction="row" spacing="6x" shouldWrapChildren>\n    <Badge badgeContent="5+">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge badgeContent="99+">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge badgeContent="87">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge variant="dot" borderColor="gray:100">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge variant="dot" dotSize={6} borderColor="gray:100">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge isHidden>\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge badgeContent={0}>\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge badgeContent="!">\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n    <Badge badgeContent={<Text color="yellow:50">Text</Text>}>\n      <Skeleton variant="rect" width={42} height={42} />\n    </Badge>\n  </Stack>\n</Stack>\n')),(0,o.kt)("h3",null,"Badge color"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"variantColor")," prop to customize the color of the Badge. ",(0,o.kt)("inlineCode",{parentName:"p"},"variantColor"),"\ncan be any ",(0,o.kt)("strong",{parentName:"p"},"color key with key 60")," that exists in the ",(0,o.kt)("inlineCode",{parentName:"p"},"theme.colors"),"."),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"Thats mean the ",(0,o.kt)("inlineCode",{parentName:"p"},"green:60")," exists in the ",(0,o.kt)("inlineCode",{parentName:"p"},"theme.colors"),' then can use variantColor="green".'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"./theme"},"Learn more about theming"),"."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="row" spacing="4x">\n  <Badge badgeContent={1} />\n  <Badge variantColor="orange" badgeContent={2} />\n  <Badge variantColor="yellow" badgeContent={3} />\n  <Badge variantColor="green" badgeContent={4} />\n  <Badge variantColor="blue" badgeContent={5} />\n  <Badge variantColor="gray" badgeContent={6} />\n  <Badge variantColor="magenta" badgeContent={7} />\n  <Badge variantColor="purple" badgeContent={8} />\n  <Badge variantColor="teal" badgeContent={9} />\n  <Badge variantColor="cyan" badgeContent={10} />\n</Stack>\n')),(0,o.kt)("h3",null,"Badge border color"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Pass the ",(0,o.kt)("inlineCode",{parentName:"li"},"borderColor")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"borderWidth")," props to customize the border of the Badge. It only effect on wrapped children.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="row" spacing="6x" shouldWrapChildren>\n  <Badge badgeContent="5" borderColor="orange:50">\n    <Icon icon="alert" />\n  </Badge>\n  <Badge badgeContent="5">\n    <Icon icon="alert" borderColor="orange:50" borderWidth={3} />\n  </Badge>\n  <Badge badgeContent="5" borderColor="orange:50">\n    <Icon icon="alert" />\n  </Badge>\n  <Badge variant="dot" offset={[4, 2]} borderColor="orange:50" borderWidth={3}>\n    <Icon icon="alert" />\n  </Badge>\n</Stack>\n')),(0,o.kt)("h2",null,"Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"variant"),(0,o.kt)("td",{parentName:"tr",align:"left"},"string"),(0,o.kt)("td",{parentName:"tr",align:"left"},"'badge'"),(0,o.kt)("td",{parentName:"tr",align:"left"},"'badge' or 'dot'.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"variantColor"),(0,o.kt)("td",{parentName:"tr",align:"left"},"string"),(0,o.kt)("td",{parentName:"tr",align:"left"},"'red'"),(0,o.kt)("td",{parentName:"tr",align:"left"},"The color scheme to use for the badge. It must be a color key defined in ",(0,o.kt)("inlineCode",{parentName:"td"},"theme.colors"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"badgeContent"),(0,o.kt)("td",{parentName:"tr",align:"left"},"number","|","string","|","React Element"),(0,o.kt)("td",{parentName:"tr",align:"left"}),(0,o.kt)("td",{parentName:"tr",align:"left"})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"isHidden"),(0,o.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,o.kt)("td",{parentName:"tr",align:"left"},"false"),(0,o.kt)("td",{parentName:"tr",align:"left"},"show badge content or not.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"offset"),(0,o.kt)("td",{parentName:"tr",align:"left"},"[","number, number","]"),(0,o.kt)("td",{parentName:"tr",align:"left"},"-"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set offset of the badge.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"borderColor"),(0,o.kt)("td",{parentName:"tr",align:"left"},"string"),(0,o.kt)("td",{parentName:"tr",align:"left"},"value of ",(0,o.kt)("inlineCode",{parentName:"td"},"variantColor")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set border color of the badge when overlap a children.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"borderWidth"),(0,o.kt)("td",{parentName:"tr",align:"left"},"number"),(0,o.kt)("td",{parentName:"tr",align:"left"},"1"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Set border width of the badge when overlap a children.")))))}i.isMDXComponent=!0},11289:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/badge",function(){return n(58402)}])}},function(e){e.O(0,[9774,2888,179],(function(){return t=11289,e(e.s=t);var t}));var t=e.O();_N_E=t}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7322],{4941:function(n,o,e){"use strict";e.r(o);var t=e(2322),i=e(5392);function s(n){var o=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h3:"h3"},(0,i.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{children:"useCopyToClipboard"}),"\n",(0,t.jsxs)(o.p,{children:["A custom Hook that provides a ",(0,t.jsx)(o.code,{children:"copy"})," method to copy text to the clipboard. If anything does not work, it will output an error message and the value will be set to ",(0,t.jsx)(o.code,{children:"null"}),"."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"// import\nimport { useCopyToClipboard } from '@tonic-ui/react-hooks';\n\n// usage\nconst [value, copy] = useCopyToClipboard();\n"})}),"\n",(0,t.jsx)(o.h3,{children:"Returns"}),"\n",(0,t.jsx)(o.p,{children:"Returns an array with the value and the copy function."}),"\n",(0,t.jsx)(o.h3,{children:"Example"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-jsx",children:"function Component() {\n  const [buttonIsCopied, setButtonIsCopied] = React.useState(null);\n  const [linkIsCopied, setLinkIsCopied] = React.useState(null);\n  const [value, copy] = useCopyToClipboard();\n\n  return (\n    <>\n      <Flex columnGap=\"2x\" mb=\"2x\">\n        <Button\n          minWidth={120}\n          onClick={async function () {\n            const ok = await copy('https://github.com/trendmicro-frontend/tonic-ui')\n            setButtonIsCopied(!!ok);\n            setTimeout(() => setButtonIsCopied(null), 1000);\n          }}\n        >\n          {buttonIsCopied === null && 'Click to copy'}\n          {buttonIsCopied === true && 'Copied'}\n          {buttonIsCopied === false && 'Copy failed'}\n        </Button>\n        <LinkButton\n          onClick={async function () {\n            const ok = await copy('https://github.com/trendmicro-frontend/tonic-ui')\n            setLinkIsCopied(!!ok);\n            setTimeout(() => setLinkIsCopied(null), 1000);\n          }}\n        >\n          {linkIsCopied === null && 'Click to copy'}\n          {linkIsCopied === true && 'Copied'}\n          {linkIsCopied === false && 'Copy failed'}\n        </LinkButton>\n      </Flex>\n      <Text>Copied value: {value}</Text>\n    </>\n  );\n}\n"})})]})}o.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=Object.assign({},(0,i.ah)(),n.components).wrapper;return o?(0,t.jsx)(o,Object.assign({},n,{children:(0,t.jsx)(s,n)})):s(n)}},1952:function(n,o,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useCopyToClipboard",function(){return e(4941)}])}},function(n){n.O(0,[9774,2888,179],function(){return n(n.s=1952)}),_N_E=n.O()}]);
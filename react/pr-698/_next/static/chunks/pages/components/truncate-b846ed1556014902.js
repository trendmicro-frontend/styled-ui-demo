(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9380],{30485:function(e,n,t){"use strict";t.r(n);var l=t(52322),a=t(45392);function i(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",nav:"nav",ul:"ul",li:"li"},(0,a.ah)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.div,{className:"main-content",id:"main-content",children:[(0,l.jsx)(n.h1,{id:"truncate",children:"Truncate"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"Truncate"})," component will shorten text with an ellipsis. Always add a ",(0,l.jsx)(n.code,{children:"title"})," attribute to the truncated element so the full text can be displayed in a tooltip."]}),"\n",(0,l.jsxs)(n.h2,{id:"import",children:["Import",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"import { Truncate } from '@tonic-ui/react';\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"usage",children:["Usage",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.h3,{id:"default-example",children:["Default example",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#default-example",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(n.p,{children:"Truncate will prevent text that overflows the container from wrapping."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:'<Box width={240}>\n  <Truncate title="This is a very long text that will be truncated">\n    This is a very long text that will be truncated\n  </Truncate>\n</Box>\n'})}),"\n",(0,l.jsxs)(n.p,{children:["You can also set the width of the truncated text with the ",(0,l.jsx)(n.code,{children:"width"})," prop."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:'<Truncate\n  title="This is a very long text that will be truncated"\n  width={240}\n>\n  This is a very long text that will be truncated\n</Truncate>\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"expandable-example",children:["Expandable example",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#expandable-example",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.p,{children:["You can use the ",(0,l.jsx)(n.code,{children:"_hover"})," prop to control how to expand the truncated text on hover."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:'function Example() {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex direction="column" rowGap="3x">\n      <Box\n        backgroundColor={colorStyle.background.secondary}\n        px="3x"\n        py="2x"\n      >\n        <Truncate\n          title="This is a very long text that will be truncated"\n          width={240}\n          _hover={{\n            width: \'max-content\',\n          }}\n        >\n          This is a very long text that will be truncated\n        </Truncate>\n      </Box>\n      <Box\n        backgroundColor={colorStyle.background.secondary}\n        px="3x"\n        py="2x"\n        width={240}\n      >\n        <Truncate\n          title="This is a very long text that will be truncated"\n          _hover={{\n            overflow: \'visible\',\n          }}\n        >\n          This is a very long text that will be truncated\n        </Truncate>\n      </Box>\n    </Flex>\n  );\n}\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"tooltip-example",children:["Tooltip example",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tooltip-example",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.p,{children:["You can wrap ",(0,l.jsx)(n.code,{children:"Truncate"})," with a ",(0,l.jsx)(n.code,{children:"Tooltip"})," to display the full text in a tooltip when the text is truncated."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"function Example() {\n  const textRef = React.useRef();\n  const [isOpen, toggleIsOpen] = useToggle();\n  useEventListener(\n    () => textRef.current,\n    'mouseenter', // It can be either 'mouseleave' or 'pointerleave'\n    React.useCallback((event) => {\n      const isOverflowing = (event.currentTarget.scrollWidth > event.currentTarget.clientWidth);\n      isOverflowing && toggleIsOpen(true);\n    }, [toggleIsOpen]),\n  );\n  useEventListener(\n    () => textRef.current,\n    'mouseleave', // It can be either 'mouseleave' or 'pointerleave'\n    React.useCallback((event) => {\n      toggleIsOpen(false);\n    }, [toggleIsOpen]),\n  );\n\n  return (\n    <Box width={240}>\n      <Tooltip\n        isOpen={isOpen}\n        label=\"This is a very long text that will be truncated\"\n      >\n        <Truncate ref={textRef}>\n          This is a very long text that will be truncated\n        </Truncate>\n      </Tooltip>\n    </Box>\n  );\n}\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"props",children:["Props",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.h3,{id:"truncate-1",children:["Truncate",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#truncate-1",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{align:"left",children:"Name"}),(0,l.jsx)(n.th,{align:"left",children:"Type"}),(0,l.jsx)(n.th,{align:"left",children:"Default"}),(0,l.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{align:"left",children:"children"}),(0,l.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,l.jsx)(n.td,{align:"left"}),(0,l.jsx)(n.td,{align:"left"})]})})]})]}),(0,l.jsxs)(n.nav,{className:"toc",id:"toc",children:[(0,l.jsx)(n.div,{className:"toc-heading",children:"Contents"}),(0,l.jsxs)(n.ul,{className:"toc-level toc-level-1",children:[(0,l.jsx)(n.li,{className:"toc-item toc-item-h2",children:(0,l.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#import",children:"Import"})}),(0,l.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,l.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#usage",children:"Usage"}),(0,l.jsxs)(n.ul,{className:"toc-level toc-level-2",children:[(0,l.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,l.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#default-example",children:"Default example"})}),(0,l.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,l.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#expandable-example",children:"Expandable example"})}),(0,l.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,l.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#tooltip-example",children:"Tooltip example"})})]})]}),(0,l.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,l.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#props",children:"Props"}),(0,l.jsx)(n.ul,{className:"toc-level toc-level-2",children:(0,l.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,l.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#truncate-1",children:"Truncate"})})})]})]})]})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,a.ah)(),e.components).wrapper;return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(i,e)})):i(e)}},35916:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/truncate",function(){return t(30485)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=35916)}),_N_E=e.O()}]);
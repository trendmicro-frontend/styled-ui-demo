(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2153],{71574:function(e,n,o){"use strict";o.r(n);var s=o(52322),r=o(45392);function l(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",nav:"nav",ul:"ul",li:"li"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.div,{className:"main-content",id:"main-content",children:[(0,s.jsx)(n.h1,{id:"usecolormode",children:"useColorMode"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useColorMode"})," is a custom Hook that gives you access to the current color mode, and a function to change the color mode."]}),"\n",(0,s.jsxs)(n.h2,{id:"import",children:["Import",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { useColorStyle } from '@tonic-ui/react';\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"usage",children:["Usage",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsx)(n.pre,{disabled:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { css, Global } from '@emotion/react';\nimport { Button, useColorMode } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  const [colorMode, setColorMode] = useColorMode(); // One of: 'dark', 'light'\n  const toggleColorMode = () => {\n    const nextColorMode = {\n      'dark': 'light',\n      'light': 'dark',\n    }[colorMode];\n    setColorMode(nextColorMode);\n  };\n\n  return (\n    <>\n      <Global\n        styles={css`\n          :root {\n            color-scheme: ${colorMode};\n          }\n        `}\n      />\n      <Button onClick={toggleColorMode}>\n        Toggle Color Mode\n      </Button>\n    </>\n  );\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"returns",children:["Returns",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#returns",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array with the current color mode and a function to change the color mode."}),"\n",(0,s.jsxs)(n.h2,{id:"demos",children:["Demos",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#demos",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsx)(n.pre,{noInline:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"render(() => {\n  const [colorMode, setColorMode] = useColorMode(); // One of: 'dark', 'light'\n  const toggleColorMode = () => {\n    const nextColorMode = {\n      'dark': 'light',\n      'light': 'dark',\n    }[colorMode];\n    setColorMode(nextColorMode);\n  };\n\n  return (\n    <>\n      <Global\n        styles={css`\n          :root {\n            color-scheme: ${colorMode};\n          }\n        `}\n      />\n      <Button onClick={toggleColorMode}>\n        Toggle Color Mode\n      </Button>\n    </>\n  );\n});\n"})})]}),(0,s.jsxs)(n.nav,{className:"toc",id:"toc",children:[(0,s.jsx)(n.div,{className:"toc-heading",children:"Contents"}),(0,s.jsxs)(n.ul,{className:"toc-level toc-level-1",children:[(0,s.jsx)(n.li,{className:"toc-item toc-item-h2",children:(0,s.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#import",children:"Import"})}),(0,s.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,s.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#usage",children:"Usage"}),(0,s.jsx)(n.ul,{className:"toc-level toc-level-2",children:(0,s.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,s.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#returns",children:"Returns"})})})]}),(0,s.jsx)(n.li,{className:"toc-item toc-item-h2",children:(0,s.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#demos",children:"Demos"})})]})]})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,r.ah)(),e.components).wrapper;return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l(e)}},20014:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/color-mode/useColorMode",function(){return o(71574)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=20014)}),_N_E=e.O()}]);
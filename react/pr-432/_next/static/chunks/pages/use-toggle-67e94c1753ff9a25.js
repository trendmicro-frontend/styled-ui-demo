(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9812],{64333:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return s}});var u=t(7896),o=t(59740),l=(t(2784),t(30876)),a=["components"],c={};function s(n){var e=n.components,t=(0,o.Z)(n,a);return(0,l.kt)("wrapper",(0,u.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"useToggle"),(0,l.kt)("p",null,"A custom Hook that toggles between boolean values. It also accepts a toggle function that can be used to change the value."),(0,l.kt)("h3",null,"Hook"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { useReducer } from 'react';\n\nconst defaultToggleFunction = (state, nextValue) => {\n  return (typeof nextValue === 'boolean') ? nextValue : !state;\n};\n\nconst useToggle = (\n  initialValue = false,\n  toggleFunction = defaultToggleFunction,\n) => {\n  return useReducer(toggleFunction, initialValue);\n};\n")),(0,l.kt)("h3",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"function Switch() {\n  const [value, toggleValue] = useToggle(false);\n\n  return (\n    <Button onClick={toggleValue}>\n      {value ? 'ON' : 'OFF'}\n    </Button>\n  );\n}\n")))}s.isMDXComponent=!0},31633:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/use-toggle",function(){return t(64333)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=31633,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
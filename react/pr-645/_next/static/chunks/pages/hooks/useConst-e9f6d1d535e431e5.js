(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5929],{3198:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return u}});n(2784);var a=n(876),r=["components"];function l(){return l=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l.apply(this,arguments)}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i={};function u(t){var e=t.components,n=o(t,r);return(0,a.kt)("wrapper",l({},i,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"useConst"),(0,a.kt)("p",null,"A custom Hook that creates a constant value over the lifecycle of a component."),(0,a.kt)("p",null,"Unlike ",(0,a.kt)("inlineCode",{parentName:"p"},"React.useMemo"),", this is guaranteed to always return the same value (and if the initializer is a function, only call it once). This is similar to setting a private member in a class constructor."),(0,a.kt)("p",null,"If the value should ever change based on dependencies, use ",(0,a.kt)("inlineCode",{parentName:"p"},"React.useMemo")," instead."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// import\nimport { useConst } from '@tonic-ui/react-hooks';\n\n// usage\nconst value = useConst(initialValue);\n")),(0,a.kt)("h3",null,"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"initialValue"),(0,a.kt)("td",{parentName:"tr",align:"left"},"any ","|"," () => any"),(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"Initial value, or function to get the initial value. Similar to ",(0,a.kt)("inlineCode",{parentName:"td"},"useState"),", only the value/function passed in the first time this is called is respected.")))),(0,a.kt)("h3",null,"Returns"),(0,a.kt)("p",null,"The value. This is the same value that is returned by the initializer."),(0,a.kt)("h3",null,"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function Component() {\n  const mountTime = useConst(() => new Date().toTimeString());\n  const randomValue = useConst(Math.random());\n\n  return (\n    <Box display="flex" flexDirection="column" rowGap="2x">\n      <Box>Mount time: {mountTime}</Box>\n      <Box>Random value: {randomValue}</Box>\n    </Box>\n  )\n}\n')))}u.isMDXComponent=!0},7658:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useConst",function(){return n(3198)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=7658,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
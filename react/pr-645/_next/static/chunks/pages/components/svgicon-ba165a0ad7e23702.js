(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1948],{2250:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return c}});n(2784);var r=n(876),a=["components"];function o(){return o=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},o.apply(this,arguments)}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i={};function c(t){var e=t.components,n=l(t,a);return(0,r.kt)("wrapper",o({},i,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"SVGIcon"),(0,r.kt)("p",null,"If you need a custom SVG icon, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"<SVGIcon>")," component to extend the native ",(0,r.kt)("inlineCode",{parentName:"p"},"<svg>")," element:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It comes with built-in accessibility."),(0,r.kt)("li",{parentName:"ul"},"SVG elements should be scaled for a 24x24px viewport.")),(0,r.kt)("h2",null,"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { SVGIcon } from '@tonic-ui/react';\n")),(0,r.kt)("h2",null,"Usage"),(0,r.kt)("p",null,"You can use the current text color by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},'fill="currentColor"')," attribute to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<path>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"<g>")," element. This means that the fill color of the SVG will be inherited from the color value of its parent."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<SVGIcon color="gray:50" size={24} viewBox="0 0 16 16">\n  <g fill="currentColor">\n    <path d="M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM11 12l-3-3-3 3-1.060-1.060 3.060-2.94-3-3 1.060-1.070 2.94 2.95 2.94-2.94 1.060 1.060-2.89 3 3 3z" />\n  </g>\n</SVGIcon>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const CustomIcon = ({ size, ...rest }) => {\n    const viewBox = \'0 0 16 16\';\n    return (\n      <SVGIcon size={size} viewBox={viewBox} {...rest}>\n        <g fill="currentColor">\n          <path d="M15 8c0 3.866-3.134 7-7 7s-7-3.134-7-7c0-3.866 3.134-7 7-7v0c3.866 0 7 3.134 7 7v0z" />\n        </g>\n      </SVGIcon>\n    );\n  };\n\n  return (\n    <Stack direction="row" spacing="3x" alignItems="center">\n      <CustomIcon size="1x" color="blue:10" />\n      <CustomIcon size="2x" color="blue:20" />\n      <CustomIcon size="3x" color="blue:30" />\n      <CustomIcon size="4x" color="blue:40" />\n      <CustomIcon size="5x" color="blue:50" />\n      <CustomIcon size="6x" color="blue:60" />\n      <CustomIcon size="7x" color="blue:70" />\n      <CustomIcon size="8x" color="blue:80" />\n      <CustomIcon size="9x" color="blue:90" />\n      <CustomIcon size="10x" color="blue:100" />\n    </Stack>\n  );\n}\n')),(0,r.kt)("h2",null,"Props"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"size"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The size of the icon.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"color"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'currentColor'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The color of the icon.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"focusable"),(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Denotes that the icon is not an interactive element, and only used for presentation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"role"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'presentation'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"One of: 'presentation', 'img'")))))}c.isMDXComponent=!0},9111:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/svgicon",function(){return n(2250)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=9111,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
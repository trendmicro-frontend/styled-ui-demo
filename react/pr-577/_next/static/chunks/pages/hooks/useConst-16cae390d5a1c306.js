(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5929],{63198:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return r}});var o=t(7896),a=t(59740),s=(t(2784),t(30876)),u=["components"],i={};function r(n){var e=n.components,t=(0,a.Z)(n,u);return(0,s.kt)("wrapper",(0,o.Z)({},i,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",null,"useConst"),(0,s.kt)("p",null,"A custom Hook that creates a constant value over the lifecycle of a component."),(0,s.kt)("p",null,"Unlike ",(0,s.kt)("inlineCode",{parentName:"p"},"React.useMemo"),", this is guaranteed to always return the same value (and if the initializer is a function, only call it once). This is similar to setting a private member in a class constructor."),(0,s.kt)("p",null,"If the value should ever change based on dependencies, use ",(0,s.kt)("inlineCode",{parentName:"p"},"React.useMemo")," instead."),(0,s.kt)("h2",null,"Import"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { useConst } from '@tonic-ui/react-hooks';\n")),(0,s.kt)("h2",null,"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'function Component() {\n  const mountTime = useConst(() => new Date().toTimeString());\n  const randomValue = useConst(Math.random());\n\n  return (\n    <Box display="flex" flexDirection="column" rowGap="2x">\n      <Box>Mount time: {mountTime}</Box>\n      <Box>Random value: {randomValue}</Box>\n    </Box>\n  )\n}\n')))}r.isMDXComponent=!0},59351:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useConst",function(){return t(63198)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=59351,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
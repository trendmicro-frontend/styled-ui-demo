(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9701],{23345:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return l}});var u=t(7896),o=t(59740),s=(t(2784),t(30876)),r=["components"],a={};function l(n){var e=n.components,t=(0,o.Z)(n,r);return(0,s.kt)("wrapper",(0,u.Z)({},a,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",null,"usePrevious"),(0,s.kt)("p",null,"A custom Hook that stores the previous state or props."),(0,s.kt)("h2",null,"Import"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { usePrevious } from '@tonic-ui/react-hooks';\n")),(0,s.kt)("h2",null,"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'function Counter() {\n  const [value, setValue] = React.useState(0);\n  const lastValue = usePrevious(value);\n\n  return (\n    <>\n      <Box mb="4x">\n        Current: {value} - Previous: {lastValue}\n      </Box>\n      <Button onClick={() => setValue(value + 1)}>\n        Click Me\n      </Button>\n    </>\n  );\n}\n')))}l.isMDXComponent=!0},15727:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/usePrevious",function(){return t(23345)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=15727,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
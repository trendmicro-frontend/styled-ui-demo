(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8996],{80256:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return i}});var a=n(7896),l=n(59740),o=(n(2784),n(30876)),r=["components"],u={};function i(t){var e=t.components,n=(0,l.Z)(t,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"useToggle"),(0,o.kt)("p",null,"A custom Hook that toggles between boolean values. It also accepts a toggle function that can be used to change the value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const [value, toggleValue] = useToggle(initialValue, [toggleReducer]);\n")),(0,o.kt)("h3",null,"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"initialValue"),(0,o.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,o.kt)("td",{parentName:"tr",align:"left"}),(0,o.kt)("td",{parentName:"tr",align:"left"},"The initial value of the toggle.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"toggleReducer?"),(0,o.kt)("td",{parentName:"tr",align:"left"},"(state: boolean, nextValue: boolean) => boolean"),(0,o.kt)("td",{parentName:"tr",align:"left"}),(0,o.kt)("td",{parentName:"tr",align:"left"},"An optional reducer function that can be used to determine the next value.")))),(0,o.kt)("h3",null,"Returns"),(0,o.kt)("p",null,"Returns an array with the current value and a function to toggle the value."),(0,o.kt)("p",null,"If a boolean value is explicitly passed to the toggle function, it will be used instead of negating the current value."),(0,o.kt)("h3",null,"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function Switch() {\n  const [value, toggleValue] = useToggle(false);\n\n  return (\n    <Button onClick={toggleValue}>\n      {value ? 'ON' : 'OFF'}\n    </Button>\n  );\n}\n")))}i.isMDXComponent=!0},57450:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useToggle",function(){return n(80256)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=57450,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
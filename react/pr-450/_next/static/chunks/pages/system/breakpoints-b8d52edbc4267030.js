(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6706],{58980:function(e,n,t){"use strict";var o=t(12215),i=t(81292),a=(t(2784),t(10765)),r=t(82767),d=t(28165);n.Z=function(e){var n,t=e.theme,s=(0,i.useTheme)(),l=(0,i.useColorMode)(),m=(0,o.Z)(l,1)[0],x=(0,i.useColorStyle)({colorMode:m}),c=null!==(n=(0,o.Z)(x,1)[0][t])&&void 0!==n?n:s[t];if(!c)return"Theme field not found";"space"!==t&&"sizes"!==t||(c=Object.keys(c).filter((function(e){return!e.toString().match(/[qh]$/)})).reduce((function(e,n){return e[n]=c[n],e}),{}));return(0,d.tZ)(i.Box,{mb:"6x"},(0,d.tZ)(a.Z,null,"const ".concat(t," = ").concat((0,r.Z)(c,!1))))}},82767:function(e,n){"use strict";n.Z=function(e){return JSON.stringify(e,null,2).replace(/"/g,"'").replace(/'(\d+|[a-z]+)':/g,"$1:")}},81762:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return l}});var o=t(7896),i=t(59740),a=(t(2784),t(30876)),r=t(58980),d=["components"],s={};function l(e){var n=e.components,t=(0,i.Z)(e,d);return(0,a.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Breakpoints"),(0,a.kt)(r.Z,{theme:"breakpoints",mdxType:"ThemeParser"}),(0,a.kt)("p",null,"To configure the default breakpoints used in responsive array values, add a breakpoints array to your theme. These values will be used to generate the media queries for responsive styles."),(0,a.kt)("p",null,"The first value in the array is the smallest breakpoint, and the last value is the largest. You can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"md"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"lg"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"xl"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"xxl")," as breakpoint names to reference the breakpoints in the array."),(0,a.kt)("h2",null,"Examples"),(0,a.kt)("p",null,"Try resizing your browser window to see the effect of the responsive styles."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Box\n  fontSize={{\n    _: 'md', // default\n    sm: 'sm', // @media screen and (min-width: 320px)\n    md: 'md', // @media screen and (min-width: 640px)\n    lg: 'lg', // @media screen and (min-width: 1024px)\n    xl: 'xl', // @media screen and (min-width: 1280px)\n    '2xl': '2xl', // @media screen and (min-width: 1680px)\n  }}\n  lineHeight={{\n    _: 'md', // default\n    sm: 'sm', // @media screen and (min-width: 320px)\n    md: 'md', // @media screen and (min-width: 640px)\n    lg: 'lg', // @media screen and (min-width: 1024px)\n    xl: 'xl', // @media screen and (min-width: 1280px)\n    '2xl': '2xl', // @media screen and (min-width: 1680px)\n  }}\n>\n  <Box display={{ _: 'none', sm: 'block', md: 'none' }}>\n    <Box mb=\"1x\"><code>@media screen and (min-width: 320px)</code></Box>\n    Small Text\n  </Box>\n  <Box display={{ _: 'none', md: 'block', lg: 'none' }}>\n    <Box mb=\"1x\"><code>@media screen and (min-width: 640px)</code></Box>\n    Medium Text\n  </Box>\n  <Box display={{ _: 'none', lg: 'block', xl: 'none' }}>\n    <Box mb=\"1x\"><code>@media screen and (min-width: 1024px)</code></Box>\n    Large Text\n  </Box>\n  <Box display={{ _: 'none', xl: 'block', '2xl': 'none' }}>\n    <Box mb=\"1x\"><code>@media screen and (min-width: 1280px)</code></Box>\n    Extra Large Text\n  </Box>\n  <Box display={{ _: 'none', '2xl': 'block' }}>\n    <Box mb=\"1x\"><code>@media screen and (min-width: 1680px)</code></Box>\n    Double Extra Large Text\n  </Box>\n</Box>\n")))}l.isMDXComponent=!0},98979:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/system/breakpoints",function(){return t(81762)}])}},function(e){e.O(0,[9774,2888,179],(function(){return n=98979,e(e.s=n);var n}));var n=e.O();_N_E=n}]);
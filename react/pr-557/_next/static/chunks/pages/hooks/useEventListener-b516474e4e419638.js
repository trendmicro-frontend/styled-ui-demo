(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1749],{45614:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return a}});var o=t(7896),r=t(59740),s=(t(2784),t(30876)),l=["components"],u={};function a(n){var e=n.components,t=(0,r.Z)(n,l);return(0,s.kt)("wrapper",(0,o.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",null,"useEventListener"),(0,s.kt)("p",null,"A custom Hook to manage browser event listeners."),(0,s.kt)("h2",null,"Import"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { useEventListener } from '@tonic-ui/react-hooks';\n")),(0,s.kt)("h3",null,"useEventListener"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\nconst noop = () => {};\n\nconst runIfFn = (valueOrFn, ...args) => {\n  if (typeof valueOrFn === 'function') {\n    return valueOrFn(...args);\n  }\n  return valueOrFn;\n};\n\nconst useEventListener = (\n  eventName,\n  eventHandler,\n  element,\n  options,\n) => {\n  const eventListener = useEventCallback(eventHandler);\n\n  useEffect(() => {\n    const targetElement = runIfFn(element) ?? document;\n    if (!(targetElement && targetElement.addEventListener)) {\n      return noop;\n    }\n\n    targetElement.addEventListener(eventName, eventListener, options);\n\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener, options);\n    };\n  }, [element, eventName, eventListener, options]);\n};\n")),(0,s.kt)("h2",null,"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const buttonRef = React.useRef(null);\n\n  const onScroll = (event) => {\n    console.log('document scrolled', event);\n  };\n\n  const onClick = (event) => {\n    console.log('button clicked', event);\n  };\n\n  // example with document based event\n  useEventListener('scroll', onScroll);\n\n  // example with element based event\n  useEventListener('click', onClick, buttonRef.current);\n\n  return (\n    <Button ref={buttonRef}>\n      Click Me\n    </Button>\n  );\n}\n")))}a.isMDXComponent=!0},25899:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useEventListener",function(){return t(45614)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=25899,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5934],{35837:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return m}});var a=n(7896),r=n(59740),l=(n(2784),n(30876)),i=["components"],o={};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"Menu"),(0,l.kt)("p",null,"A menu is used to display a list of options to the user. It appears when the user interacts with a button, link, or other control that triggers an action."),(0,l.kt)("h2",null,"Import"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Menu"),": The component that provides the menu functionality."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuTrigger"),": The trigger that opens the menu. This is usually a button or link."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuButton"),": A button that composes ",(0,l.kt)("inlineCode",{parentName:"li"},"MenuTrigger")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Button")," and is used to open the menu."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuIndicator"),": An indicator that appears next to the trigger. This is usually a chevron or arrow."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuList"),": A wrapper that contains the menu items. Must be a direct child of the ",(0,l.kt)("inlineCode",{parentName:"li"},"Menu")," component."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuGroup"),": A wrapper that groups related menu items."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuItem"),": The individual menu items. Must be a direct child of the ",(0,l.kt)("inlineCode",{parentName:"li"},"MenuList")," component."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MenuDivider"),": A divider that separates menu items.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  Menu,\n  MenuTrigger,\n  MenuButton,\n  MenuIndicator,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n} from '@trendmicro/react-styled-ui';\n")),(0,l.kt)("h2",null,"Usage"),(0,l.kt)("h3",null,"Basic menu structure"),(0,l.kt)("p",null,"Below is a simple example that shows the basic menu structure."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<>\n  <MenuItem value="general">\n    <Icon icon="settings" mr="2x" />\n    <Text>General</Text>\n  </MenuItem>\n  <MenuItem value="accounts">\n    <Icon icon="user-team" mr="2x" />\n    <Text>Accounts</Text>\n  </MenuItem>\n  <MenuItem value="privacy">\n    <Icon icon="lock" mr="2x" />\n    <Text>Privacy</Text>\n  </MenuItem>\n  <MenuDivider />\n  <MenuItem disabled value="restore-defaults">\n    <Icon icon="undo" mr="2x" />\n    <Text>Restore Defaults</Text>\n  </MenuItem>\n</>\n')),(0,l.kt)("h3",null,"Controlled menu"),(0,l.kt)("p",null,"The menu opens over the anchor element by default, and closes when the user clicks outside of the menu."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(null);\n  const handleOpenMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    setIsOpen(!isOpen);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n    setIsOpen(false);\n  };\n  const handleClickMenuItem = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    setSelectedValue(value);\n  };\n  const handleMenuItemClick = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    console.log(`Menu item #${value} clicked`);\n  };\n\n  return (\n    <>\n      <Button\n        aria-controls="basic-menu"\n        aria-haspopup="true"\n        aria-expanded={isOpen ? \'true\' : undefined}\n        onClick={handleOpenMenu}\n      >\n        Options\n      </Button>\n      <Menu\n        id="basic-menu"\n        anchorEl={anchorEl}\n        isOpen={isOpen}\n        onClose={handleCloseMenu}\n        mr="2x"\n      >\n        <MenuList\n          width="max-content"\n          onClick={handleClickMenuItem}\n        >\n          <MenuItem value={1}>\n            Item #1\n          </MenuItem>\n          <MenuItem value={2}>\n            Item #2\n          </MenuItem>\n          <MenuItem value={3}>\n            Item #3\n          </MenuItem>\n        </MenuList>\n      </Menu>\n      <Space width="2x" />\n      <Text>Selected: {selectedValue}</Text>\n    </>\n  );\n}\n')),(0,l.kt)("h3",null,"MenuTrigger"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"MenuTrigger")," is the trigger that opens the menu when clicked. It is usually a button or link. The ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuIndicator")," can be added to the trigger to indicate the menu is open or closed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Flex alignItems="center">\n  <Menu>\n    <MenuTrigger>\n      <Text>Options</Text>\n    </MenuTrigger>\n    <MenuList width="max-content">\n      <MenuItem>\n        Item #1\n      </MenuItem>\n      <MenuItem>\n        Item #2\n      </MenuItem>\n      <MenuItem>\n        Item #3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n  <Divider\n    variant="solid"\n    orientation="vertical"\n    height="5x"\n    mx="4x"\n  />\n  <Menu>\n    <MenuTrigger>\n      <Flex alignItems="center" userSelect="none">\n        <Text>Options</Text>\n        <Space width="1x" />\n        <MenuIndicator />\n      </Flex>\n    </MenuTrigger>\n    <MenuList width="max-content">\n      <MenuItem>\n        Item #1\n      </MenuItem>\n      <MenuItem>\n        Item #2\n      </MenuItem>\n      <MenuItem>\n        Item #3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n  <Divider\n    variant="solid"\n    orientation="vertical"\n    height="5x"\n    mx="4x"\n  />\n  <Menu>\n    <MenuTrigger>\n      {({ getMenuTriggerProps }) => {\n        return (\n          <Button\n            {...getMenuTriggerProps()}\n            variant="secondary"\n          >\n            <Text>Options</Text>\n            <Space width="1x" />\n            <MenuIndicator />\n          </Button>\n        );\n      }}\n    </MenuTrigger>\n    <MenuList width="max-content">\n      <MenuItem>\n        Item #1\n      </MenuItem>\n      <MenuItem>\n        Item #2\n      </MenuItem>\n      <MenuItem>\n        Item #3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n</Flex>\n')),(0,l.kt)("h3",null,"MenuButton"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"MenuButton")," composes ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuTrigger")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Button")," to create a button that opens the menu. It's an useful alternative to ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuTrigger")," when the trigger is a button."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"disabled",disabled:!0},"const MenuButton = (props) => (\n  <MenuTrigger>\n    {({ getMenuTriggerProps }) => (\n      <Button\n        {...getMenuTriggerProps()}\n        {...props}\n      >\n        {children}\n      </Button>\n    )}\n  </MenuTrigger>\n);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary" size="md">\n    <Text>Options</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList width="max-content">\n    <MenuItem>\n      Item #1\n    </MenuItem>\n    <MenuItem>\n      Item #2\n    </MenuItem>\n    <MenuItem>\n      Item #3\n    </MenuItem>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("h3",null,"MenuIndicator"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"MenuIndicator")," is an indicator that indicates the menu is open or closed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="ghost" size="sm" px="1x">\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList width="max-content">\n    <MenuItem>\n      Item #1\n    </MenuItem>\n    <MenuItem>\n      Item #2\n    </MenuItem>\n    <MenuItem>\n      Item #3\n    </MenuItem>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("p",null,"You can also customize the indicator by passing a component as children or a function as children that returns a component."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<Menu placement=\"bottom-start\">\n  {({ isOpen, direction }) => {\n    return (\n      <>\n        <MenuButton variant=\"secondary\">\n          <MenuIndicator>\n            {({ ref, style: styleProps }) => {\n              // direction is either 'up' or 'down'\n              const icon = `arrow-${direction}`;\n              styleProps.transform = isOpen ? 'scaleY(-1)' : 'scaleY(1)';\n\n              return (\n                <Icon\n                  ref={ref}\n                  icon={icon}\n                  size=\"3x\"\n                  {...styleProps}\n                />\n              );\n            }}\n          </MenuIndicator>\n        </MenuButton>\n        <MenuList width=\"max-content\">\n          <MenuItem>\n            Item #1\n          </MenuItem>\n          <MenuItem>\n            Item #2\n          </MenuItem>\n          <MenuItem>\n            Item #3\n          </MenuItem>\n        </MenuList>\n      </>\n    );\n  }}\n</Menu>\n")),(0,l.kt)("h3",null,"MenuGroup"),(0,l.kt)("p",null,"To group related menu items, wrap them in a ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuGroup")," and pass a ",(0,l.kt)("inlineCode",{parentName:"p"},"title")," prop for the group title."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const Avatar = (props) => (\n  <Flex\n    p="1x"\n    borderRadius="50%"\n    alignItems="center"\n    justifyContent="center"\n    fontSize="xs"\n    lineHeight="1"\n    {...props}\n  />\n);\n\nrender(\n  <Menu>\n    <MenuTrigger>\n      <Avatar\n        bg="gray:50"\n        color="white:secondary"\n        _hover={{\n          color: \'white:primary\',\n        }}\n      >\n        <Icon icon="user-team" size="5x" />\n      </Avatar>\n    </MenuTrigger>\n    <MenuList width="max-content">\n      <MenuItem>\n        <Text>Profile</Text>\n      </MenuItem>\n      <MenuDivider />\n      <MenuGroup\n        title={(\n          <Flex justifyContent="space-between">\n            <Text>Other profiles</Text>\n            <Space minWidth="10x" />\n            <ButtonBase title="Manage profiles">\n              <Icon icon="settings" size="3x" />\n            </ButtonBase>\n          </Flex>\n        )}\n      >\n        <MenuItem px="4x">\n          <Avatar color="white" bg="blue:50" mr="2x">\n            JD\n          </Avatar>\n          John Doe\n        </MenuItem>\n        <MenuItem px="4x">\n          <Avatar color="white" bg="gray:50" mr="2x">\n            <Icon icon="user" size="3x" />\n          </Avatar>\n          Guest\n        </MenuItem>\n      </MenuGroup>\n    </MenuList>\n  </Menu>\n);\n')),(0,l.kt)("h3",null,"Menu sizing"),(0,l.kt)("p",null,"To change the width of the menu, pass ",(0,l.kt)("inlineCode",{parentName:"p"},"width")," prop to the ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuList")," component."),(0,l.kt)("h4",null,(0,l.kt)("inlineCode",{parentName:"h4"},'width="100%"')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary">\n    <Text>This is a very long menu button</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList width="100%">\n    <MenuItem>\n      Item #1\n    </MenuItem>\n    <MenuItem>\n      Item #2\n    </MenuItem>\n    <MenuItem>\n      Item #3\n    </MenuItem>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("h4",null,(0,l.kt)("inlineCode",{parentName:"h4"},'width="max-content"')),(0,l.kt)("p",null,"By default, the menu items will wrap to the next line if the width of the trigger is smaller than the width of the menu. You can pass ",(0,l.kt)("inlineCode",{parentName:"p"},'width="max-content"')," to ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuList")," to prevent wrapping."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary">\n    <Text>Options</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList width="max-content">\n    <MenuItem>\n      This is a very long menu item #1\n    </MenuItem>\n    <MenuItem>\n      This is a very long menu item #2\n    </MenuItem>\n    <MenuItem>\n      This is a very long menu item #3\n    </MenuItem>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("h3",null,"Placement"),(0,l.kt)("p",null,"To position the menu relative to the trigger, pass a ",(0,l.kt)("inlineCode",{parentName:"p"},"placement")," prop to ",(0,l.kt)("inlineCode",{parentName:"p"},"Menu"),"."),(0,l.kt)("p",null,"The value can be one of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"top")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"top-start")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"top-end")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bottom")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bottom-start")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bottom-end"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},"const useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst gridAreas = [\n  ['top-start', 'top', 'top-end'],\n  ['.', '.', '.'],\n  ['.', 'center', '.'],\n  ['.', '.', '.'],\n  ['bottom-start', 'bottom', 'bottom-end'],\n];\n\nfunction Example() {\n  const [placement, changePlacementBy] = useSelection('bottom-start');\n  const gridTemplateAreas = gridAreas.map((row) => {\n    const rowString = '\"' + row.join(' ') + '\"';\n    return rowString;\n  }).join(' ');\n\n  return (\n    <Flex>\n      <Grid\n        templateAreas={gridTemplateAreas}\n        autoColumns=\"minmax(0, 1fr)\"\n        autoFlow=\"row\"\n        gap=\"2x\"\n      >\n        {gridAreas.flat().map((value, key) => {\n          if (value === '.') {\n            return (<Box key={key} />);\n          }\n\n          if (value === 'center') {\n            return (\n              <Box key={key}>\n                <Menu placement={placement}>\n                  <MenuButton variant=\"secondary\">\n                    <Text>Options</Text>\n                    <Space width=\"1x\" />\n                    <MenuIndicator />\n                  </MenuButton>\n                  <MenuList width=\"max-content\">\n                    <MenuItem>\n                      Item #1\n                    </MenuItem>\n                    <MenuItem>\n                      Item #2\n                    </MenuItem>\n                    <MenuItem>\n                      Item #3\n                    </MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n            );\n          }\n\n          const changePlacement = changePlacementBy(value);\n          const onClick = () => {\n            changePlacement();\n          };\n\n          return (\n            <Box key={key}>\n              <SelectableButton\n                selected={value === placement}\n                onClick={onClick}\n                width=\"100%\"\n              >\n                {value}\n              </SelectableButton>\n            </Box>\n          );\n        })}\n      </Grid>\n    </Flex>\n  );\n}\n\nrender(<Example />);\n")),(0,l.kt)("h3",null,"Offset"),(0,l.kt)("p",null,"The basic offset accepts an array with two numbers in the form ",(0,l.kt)("inlineCode",{parentName:"p"},"[skidding, distance]"),". It can be used to adjust the position of the menu relative to the trigger."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Skidding")),(0,l.kt)("p",null,"The first number, ",(0,l.kt)("inlineCode",{parentName:"p"},"skidding"),", displaces ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuList")," along the reference trigger. This value is specified in pixels."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Distance")),(0,l.kt)("p",null,"The second number, ",(0,l.kt)("inlineCode",{parentName:"p"},"distance"),", controls the distance between the ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuList")," and the reference trigger. This value is specified in pixels."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary">\n    <Text>Options</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList\n    offset={[\n      16, // skidding\n      8, // distance\n    ]}\n    width="max-content"\n  >\n    <MenuItem>\n      Item #1\n    </MenuItem>\n    <MenuItem>\n      Item #2\n    </MenuItem>\n    <MenuItem>\n      Item #3\n    </MenuItem>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("h3",null,"Scrolling"),(0,l.kt)("p",null,"To make the menu scrollable, pass ",(0,l.kt)("inlineCode",{parentName:"p"},'overflow="auto"')," and ",(0,l.kt)("inlineCode",{parentName:"p"},"maxHeight")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"MenuList"),". The menu will become scrollable when the menu items exceed the height of the menu."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary">\n    <Text>Options</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList\n    maxHeight={200}\n    overflow="auto"\n    width="max-content"\n  >\n    {Array.from({ length: 100 }).map((_, key) => (\n      <MenuItem key={key}>\n        Item #{key + 1}\n      </MenuItem>\n    ))}\n  </MenuList>\n</Menu>\n')),(0,l.kt)("p",null,"You can also use the ",(0,l.kt)("inlineCode",{parentName:"p"},"Scrollbar")," component to override the default scrollbar."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu>\n  <MenuButton variant="secondary">\n    <Text>Options</Text>\n    <Space width="1x" />\n    <MenuIndicator />\n  </MenuButton>\n  <MenuList width="max-content">\n    <Scrollbar maxHeight={200}>\n      {Array.from({ length: 100 }).map((_, key) => (\n        <MenuItem key={key}>\n          Item #{key + 1}\n        </MenuItem>\n      ))}\n    </Scrollbar>\n  </MenuList>\n</Menu>\n')),(0,l.kt)("h3",null,"Input controls"),(0,l.kt)("p",null,"Set ",(0,l.kt)("inlineCode",{parentName:"p"},"closeOnSelect")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," to keep the menu open after selecting a menu item."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'function menuWithCheckbox() {\n  const [checkedItems, setCheckedItems] = React.useState([\'host\', \'ip\']);\n  const handleChange = (e) => {\n    const value = e.target.value;\n    const items = [...checkedItems];\n    items.indexOf(value) === -1 ? items.push(value) : items.splice(items.indexOf(value), 1);\n    setCheckedItems(items);\n  };\n  return (\n    <Menu closeOnSelect={false}>\n      <MenuButton variant="secondary">\n        <Text>Selected ({checkedItems.length})</Text>\n        <Space width="1x" />\n        <MenuIndicator />\n      </MenuButton>\n      <MenuList width="max-content">\n        <CheckboxGroup size="sm" defaultValue={checkedItems}>\n          <MenuItem><Checkbox value="host" onChange={e => handleChange(e)}>Endpoint name</Checkbox></MenuItem>\n          <MenuItem><Checkbox value="ip" onChange={e => handleChange(e)}>IP address</Checkbox></MenuItem>\n          <MenuItem><Checkbox value="os" onChange={e => handleChange(e)}>Operating system</Checkbox></MenuItem>\n        </CheckboxGroup>\n      </MenuList>\n    </Menu>\n  );\n}\n')),(0,l.kt)("h2",null,"Accessibility"),(0,l.kt)("h3",null,"Keyboard Interaction"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Action"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Enter")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"Space")),(0,l.kt)("td",{parentName:"tr",align:"left"},"When ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuTrigger")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuButton")," is focused, opens the menu.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ArrowDown")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"ArrowUp")),(0,l.kt)("td",{parentName:"tr",align:"left"},"When ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuList")," is focused, moves the focus to the next menu item.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Escape")),(0,l.kt)("td",{parentName:"tr",align:"left"},"When a menu item is focused, closes the menu and moves the focus to the trigger.")))),(0,l.kt)("h2",null,"Props"),(0,l.kt)("h3",null,"Menu"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"anchorEl"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Element")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The element to which the menu is attached.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"autoSelect"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to automatically select the first menu item when the menu is opened.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The children must be composed by a ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuList")," and either one of ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuTrigger")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"MenuButton"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"closeOnBlur"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to close the menu when the user clicks outside of the menu.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"closeOnSelect"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to close the menu when the user selects a menu item.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"defaultActiveIndex"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"-1"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The index of the menu item to be selected by default.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"defaultIsOpen"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu is open by default.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"isOpen"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu is open.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onBlur"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu loses focus.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onKeyDown"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the user presses a key.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onOpen"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu is opened.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClick"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when a menu item is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClose"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu is closed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"placement"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"'bottom-start'"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The placement of the menu. One of: 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end'")))),(0,l.kt)("h3",null,"MenuTrigger"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu trigger is disabled.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClick"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu trigger is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onKeyDown"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the user presses a key.")))),(0,l.kt)("h3",null,"MenuButton"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu trigger is disabled.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClick"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu trigger is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onKeyDown"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the user presses a key.")))),(0,l.kt)("h3",null,"MenuIndicator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu indicator is disabled.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"easing"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"{ enter?: string, exit?: string }")),(0,l.kt)("td",{parentName:"tr",align:"left"},"{ enter: easing.easeOut, exit: easing.easeOut }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The timing function to use for the animation.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"timeout"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"{ appear?: number, enter?: number, exit?: number }")),(0,l.kt)("td",{parentName:"tr",align:"left"},"{ enter: 133, exit: 93 }"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The duration of the animation.")))),(0,l.kt)("h3",null,"MenuList"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"offset"),(0,l.kt)("td",{parentName:"tr",align:"left"},"[skidding, distance]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"[0, 0]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"To control the distance and skidding of the menu list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"TransitionComponent"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Component")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Collapse")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The component used to transition the menu list in and out.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"TransitionProps"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Any transition props to be applied to the menu list.")))),(0,l.kt)("h3",null,"MenuGroup"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"title"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The title of the menu group.")))),(0,l.kt)("h3",null,"MenuItem"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether the menu item is disabled.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onClick"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the menu item is clicked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"onKeyDown"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"function")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when the user presses a key.")))),(0,l.kt)("h3",null,"MenuDivider"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"children"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"Node")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))))}m.isMDXComponent=!0},29329:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/menu",function(){return n(35837)}])}},function(e){e.O(0,[9774,2888,179],(function(){return t=29329,e(e.s=t);var t}));var t=e.O();_N_E=t}]);
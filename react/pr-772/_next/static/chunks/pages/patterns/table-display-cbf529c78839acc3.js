(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4516],{57673:function(e,n,t){"use strict";t.d(n,{Z:function(){return T}});var r=t(98922),o=t(49427),l=t(5632),a=t(2784),i=t(79525),s=t(98485),c=t(71561),u=t(28214),d=t(66824),p=["size"];function m(){return(m=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var f=(0,a.forwardRef)(function(e,n){var t=e.size,o=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,p);return a.createElement(r.SVGIcon,m({size:t,viewBox:"0 0 1024 1024"},o),a.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});f.displayName="CodeSandboxIcon";var x=t(30462);function h(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return b(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return b(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var v={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},g=function(e){var n=e.component,t=e.code,p=(0,l.useRouter)(),m=h((0,a.useReducer)(function(e){return!e},!1),2),b=m[0],g=m[1],T=h((0,r.useColorMode)(),1)[0],y={dark:c.y,light:c.q}[T],w=h((0,o.useToggle)(!1),2),S=w[0],I=w[1],E=(0,s.Z)(t),C=E.onCopy,j=E.hasCopied,k=(0,a.useCallback)(function(){C()},[C]),O=(0,a.useCallback)(function(){(0,u.b)({title:"Tonic UI",code:t})},[t]),L=(0,a.useCallback)(function(){g(),I(!1)},[g,I]);return a.createElement(i.nu,{code:t,disabled:!0,language:"jsx",theme:y},a.createElement(r.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[T],p:"4x"},a.createElement(r.Box,{fontSize:"sm",lineHeight:"sm"},a.createElement(a.Fragment,{key:b},a.createElement(n,null)))),a.createElement(r.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},a.createElement(x.Z,{"data-track":S?"CodeBlock|hide_source|".concat((0,d.Z)({path:p.pathname})):"CodeBlock|show_source|".concat((0,d.Z)({path:p.pathname})),onClick:I},a.createElement(r.Tooltip,{label:S?"Hide the source":"Show the source"},a.createElement(r.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),a.createElement(x.Z,{"data-track":"CodeBlock|copy_source|".concat((0,d.Z)({path:p.pathname})),onClick:k},a.createElement(r.Tooltip,{label:j?"Copied":"Copy the source"},a.createElement(r.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),a.createElement(x.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(p.pathname),onClick:O},a.createElement(r.Tooltip,{label:"Edit in CodeSandbox"},a.createElement(f,{size:{sm:"5x",md:"4x"}}))),a.createElement(x.Z,{"data-track":"CodeBlock|reset|".concat(p.pathname),onClick:L},a.createElement(r.Tooltip,{label:"Reset the demo"},a.createElement(r.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),a.createElement(r.Fade,{in:S},a.createElement(r.Collapse,{in:S,unmountOnExit:!0},a.createElement(i.uz,{style:v}))))};g.displayName="Demo";var T=g},44508:function(e,n,t){"use strict";t.r(n);var r=t(73705),o=t(98922),l=t(61374),a=t(1582),i=t(2784),s=["isExpanded"];function c(){return(c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function u(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return d(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return d(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var p=[{endpointId:"0d4523d9-ceed-4a9a-b3d0-056814ee8811",endpointHostname:"endpoint-1",endpointIPs:["fe80::c5a0:6dd9:1002:5760","10.1.136.130"],endpointMAC:"00:50:56:9c:3c:5a",eventId:1,eventSourceType:1,firstSeen:"2023-06-07T02:31:48Z",lastSeen:"2023-06-07T02:31:48Z",objectFirstSeen:"2023-06-07T02:27:34Z",objectLastSeen:"2023-06-07T02:32:04Z",objectIPs:["192.8.82.3","199.7.83.46","192.113.5.32"],osDescription:"Windows 10 Enterprise (64-bit) build 19044",osType:"0x00000007",osVer:"10.0.19044",processCmd:"C:\\Windows\\System32\\svchost.exe -k NetworkService -p -s NlaSvc",processFileCreation:"2023-06-05T10:07:28Z",processFileHashMD5:"b7f884c1b74a263f746ee12a5f7c9f6a",processFileHashSHA1:"1bc5066ddf693fc034d6514618854e26a84fd0d1",processFileHashSHA256:"add683a6910abbbf0e28b557fad0ba998166394932ae2aca069d9aa19ea8fe88",processFileModifiedTime:"2023-06-05T10:07:28Z",processFileSize:55320,processLaunchTime:"2023-06-06T09:42:15Z",processName:"C:\\Windows\\System32\\svchost.exe",processId:1408,processSigner:"Microsoft Windows Publisher",processSignerValid:!0,processUser:"NETWORK SERVICE",processUserDomain:"NT AUTHORITY",productCode:"dummy",productVersion:"x.y.z",sessionId:0,timezone:"Pacific Standard Time"}],m=(0,i.forwardRef)(function(e,n){var t=e.isExpanded,r=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,s),l=t?Math.floor(93.1):133,u=a.transitionEasing.easeOut,d=t?(0,a.getEnterTransitionProps)({timeout:l,easing:u}):(0,a.getExitTransitionProps)({timeout:l,easing:u}),p={transform:t?"rotate(90deg)":"rotate(0deg)",transition:(0,a.createTransitionStyle)("transform",d)};return i.createElement(o.ButtonBase,r,i.createElement(o.Icon,c({icon:"angle-right",size:"4x"},p)))});m.displayName="TableRowToggleIcon",n.default=function(){var e=u((0,o.useColorMode)(),1)[0],n=u((0,o.useColorStyle)({colorMode:e}),1)[0],t=(0,i.useMemo)(function(){return[{id:"toggle-expanded",header:function(){return null},cell:function(e){var n=e.row,t=n.getCanExpand(),r=n.getIsExpanded();return t?i.createElement(m,{isExpanded:r,onClick:n.getToggleExpandedHandler()}):null},size:48},{header:"Logged",accessorKey:"firstSeen",size:180,cell:function(e){var n,t=e.row;return i.createElement(o.Truncate,null,null===(n=t.original)||void 0===n?void 0:n.firstSeen)}},{id:"details",cell:function(e){var t=Object.entries(e.row.original);return i.createElement(o.Truncate,{as:"pre",fontFamily:"mono",m:0,sx:{"--truncate-line-clamp":3,wordBreak:"break-all",whiteSpace:"normal",display:"-webkit-box",WebkitBoxOrient:"vertical",WebkitLineClamp:"var(--truncate-line-clamp)"}},t.map(function(e,r){var l=u(e,2),a=l[0],s=l[1];return i.createElement(o.Box,{key:a,display:"inline"},a,": ",i.createElement(o.Text,{display:"inline",color:n.color.tertiary},Array.isArray(s)?s.join(","):s),r<t.length-1&&i.createElement(o.Divider,{display:"inline",orientation:"vertical",mx:"2x"}))}))},size:"auto"}]},[e,n]),a=(0,i.useMemo)(function(){return{defaultColumn:{minSize:48},getExpandedRowModel:(0,r.rV)(),getRowCanExpand:function(){return!0}}},[]),s=(0,i.useRef)(null);return(0,i.useEffect)(function(){s.current&&s.current.toggleAllRowsExpanded(!0)},[]),i.createElement(l.Z,{layout:"flexbox",variant:"default",columns:t,data:p,tableOptions:a,tableRef:s})}},40899:function(e,n,t){"use strict";t.r(n);var r,o,l=t(98922),a=t(22498),i=t(28606),s=t(2784);function c(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||d(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e){return function(e){if(Array.isArray(e))return p(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||d(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,n){if(e){if("string"==typeof e)return p(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return p(e,n)}}function p(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var m=(r=[{id:"all",label:"All"}].concat(u(Array.from({length:10},function(e,n){return{id:String(n+1),label:"Option ".concat(n+1)}}))),o=new Map,r.forEach(function(e){var n=String(e.id);o.set(n,e)}),o),f=u(m.keys()),x=u(f.slice(0,4)),h=u(f.slice(1)),b=function(e){var n=m.get(e);return null==n?void 0:n.label},v=function(e){var n=b(e);return s.createElement(s.Fragment,null,s.createElement(l.TextLabel,{mr:"2x"},"Label:"),s.createElement(l.OverflowTooltip,{label:n},n))},g=function(e){var n=m.get(e);return null==n?void 0:n.label},T=function(e){var n=e.length,t=n===h.length;if(0===n){var r="Select";return s.createElement(s.Fragment,null,s.createElement(l.TextLabel,{mr:"2x"},"Label:"),s.createElement(l.OverflowTooltip,{label:r},r))}if(t)return s.createElement(s.Fragment,null,s.createElement(l.TextLabel,{mr:"2x"},"Label:"),s.createElement(l.OverflowTooltip,{label:"All"},"All"));var o=e.map(g).join(", ");return s.createElement(s.Fragment,null,s.createElement(l.TextLabel,{mr:"2x"},"Label:"),s.createElement(l.OverflowTooltip,{label:o},o),s.createElement(l.Text,{ml:"1x"},"(".concat(n,")")))};n.default=function(){var e=c((0,s.useState)(x[0]),2),n=e[0],t=e[1],r=c((0,s.useState)(h),2),o=r[0],u=r[1],d=c((0,s.useState)(""),2),p=d[0],m=d[1],f=c((0,s.useState)(0),1)[0],y=(0,s.useCallback)(function(){t(x[0]),u(h),m("")},[]);return s.createElement(l.Flex,{alignItems:"flex-start",justifyContent:"space-between",columnGap:"10x"},s.createElement(l.Flex,{flexWrap:"wrap",alignItems:"center",columnGap:"2x",rowGap:"3x"},s.createElement(l.Button,{variant:"primary"},"Primary Action"),s.createElement(l.Divider,{orientation:"vertical"}),s.createElement(a.Z,{value:n,onChange:t,items:x,renderItem:b,renderLabel:v}),s.createElement(i.Z,{isSearchable:!0,value:o,onChange:u,items:h,renderItem:g,renderLabel:T,width:240}),s.createElement(l.SearchInput,{placeholder:"Search",onChange:function(e){m(e.target.value)},onClearInput:function(){m("")},value:p}),s.createElement(l.LinkButton,{columnGap:"1x",mr:"3x",onClick:function(){return y()}},s.createElement(l.Icon,{icon:"close-s"})," ",s.createElement(l.Text,null,"Reset")),s.createElement(l.Flex,{columnGap:"1x"},s.createElement(l.TextLabel,null,"Matched results:"),f)),s.createElement(l.Flex,{flexWrap:"nowrap",alignItems:"center",columnGap:"2x",rowGap:"3x"},s.createElement(l.Tooltip,{label:"Export"},s.createElement(l.Button,{variant:"ghost"},s.createElement(l.Icon,{icon:"export"}))),s.createElement(l.Tooltip,{label:"Refresh"},s.createElement(l.Button,{variant:"ghost"},s.createElement(l.Icon,{icon:"refresh"})))))}},18502:function(e,n,t){"use strict";t.r(n);var r=t(52322),o=t(45392),l=t(57673),a=t(44508),i=t(40899),s=t(6638),c=t(98922);function u(e){var n=Object.assign({div:"div",h1:"h1",h2:"h2",a:"a",svg:"svg",use:"use",p:"p",ul:"ul",li:"li",h3:"h3"},(0,o.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n",(0,r.jsx)(n.h1,{id:"table-display",children:"Table Display"}),"\n",(0,r.jsxs)(n.h2,{id:"overview",children:["Overview",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overview",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.p,{children:"Table display is used for presenting data in a structured manner and typically consists of three main parts:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Toolbar"}),"\n",(0,r.jsx)(n.li,{children:"Data"}),"\n",(0,r.jsx)(n.li,{children:"Footer"}),"\n"]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  Flex,\n  Icon,\n  LinkButton,\n  OverflowTooltip,\n  SearchInput,\n  Text,\n  TextLabel,\n  Tooltip,\n  Truncate,\n} from '@tonic-ui/react';\nimport BaseTable from '@tonic-ui/react-docs/components/BaseTable';\nimport Dropdown from '@tonic-ui/react-docs/components/Dropdown';\nimport Multiselect from '@tonic-ui/react-docs/components/Multiselect';\nimport React, { forwardRef, useCallback, useMemo, useRef, useState } from 'react';\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n];\n\nconst App = () => {\n  const layout = 'flexbox'; // One of: 'flexbox', 'table'\n  const variant = 'default'; // One of: 'default', 'outline'\n  const columns = useMemo(() => [\n    {\n      id: 'selection',\n      header: ({ table }) => (\n        <Checkbox\n          checked={table.getIsAllRowsSelected()}\n          indeterminate={table.getIsSomeRowsSelected()}\n          onChange={table.getToggleAllRowsSelectedHandler()}\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          disabled={!row.getCanSelect()}\n          indeterminate={row.getIsSomeSelected()}\n          onChange={row.getToggleSelectedHandler()}\n        />\n      ),\n      size: 48,\n    },\n    {\n      accessorKey: 'eventType',\n      header: 'Event Type',\n      cell: ({ getValue }) => (\n        <Truncate>{getValue()}</Truncate>\n      ),\n      size: 'auto',\n    },\n    {\n      accessorKey: 'affectedDevices',\n      header: 'Affected Devices',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      accessorKey: 'detections',\n      header: 'Detections',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n  const [rowSelection, setRowSelection] = useState({});\n  const tableOptions = useMemo(() => ({\n    defaultColumn: {\n      minSize: 48,\n    },\n    state: {\n      rowSelection,\n    },\n    enableRowSelection: true, // enable row selection for all rows\n    //enableRowSelection: row => row.original.detections > 0, // or enable row selection conditionally per row\n    onRowSelectionChange: setRowSelection,\n  }), [rowSelection]);\n  const tableRef = useRef();\n\n  return (\n    <>\n      <Box mb=\"2x\">\n        <Toolbar />\n      </Box>\n      <Box minHeight={500}>\n        <BaseTable\n          layout={layout}\n          variant={variant}\n          columns={columns}\n          data={data}\n          tableOptions={tableOptions}\n          tableRef={tableRef}\n        />\n      </Box>\n    </>\n  );\n};\n\nconst filterMap = (() => {\n  const filterData = [\n    { id: 'all', label: 'All' },\n    ...Array.from({ length: 10 }, (_, i) => ({\n      id: String(i + 1),\n      label: `Option ${i + 1}`,\n    })),\n  ];\n\n  const map = new Map();\n  filterData.forEach((filter) => {\n    // Use the policy ID as the key and ensure it's a string rather than a number\n    const key = String(filter.id);\n    map.set(key, filter);\n  });\n  return map;\n})();\n\nconst filterItems = [...filterMap.keys()];\n\nconst dropdownItems = [\n  ...filterItems.slice(0, 4),\n];\n\nconst multiselectItems = [\n  ...filterItems.slice(1),\n];\n\nconst renderDropdownItem = (value) => {\n  const filter = filterMap.get(value);\n  return filter?.label;\n};\n\nconst renderDropdownLabel = (value) => {\n  const selectionText = renderDropdownItem(value);\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Label:'}\n      </TextLabel>\n      <OverflowTooltip label={selectionText}>\n        {selectionText}\n      </OverflowTooltip>\n    </>\n  );\n};\n\nconst renderMultiselectItem = (value) => {\n  const filter = filterMap.get(value);\n  return filter?.label;\n};\n\nconst renderMultiselectLabel = (value) => {\n  const selectionCount = value.length;\n  const isNoneSelected = selectionCount === 0;\n  const isAllSelected = selectionCount === multiselectItems.length;\n\n  if (isNoneSelected) {\n    const selectionText = 'Select';\n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Label:'}\n        </TextLabel>\n        <OverflowTooltip label={selectionText}>\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  if (isAllSelected) {\n    const selectionText = 'All'; \n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Label:'}\n        </TextLabel>\n        <OverflowTooltip label={selectionText}>\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  const selectionText = value.map(renderMultiselectItem).join(', ');\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Label:'}\n      </TextLabel>\n      <OverflowTooltip label={selectionText}>\n        {selectionText}\n      </OverflowTooltip>\n      <Text ml=\"1x\">\n        {`(${selectionCount})`}\n      </Text>\n    </>\n  );\n};\n\nconst Toolbar = forwardRef((props, ref) => {\n  const [dropdownValue, setDropdownValue] = useState(dropdownItems[0]);\n  const [multiselectValue, setMultiselectValue] = useState(multiselectItems);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [matchedResults] = useState(0);\n\n  const reset = useCallback(() => {\n    setDropdownValue(dropdownItems[0]);\n    setMultiselectValue(multiselectItems);\n    setSearchInputValue('');\n  }, []);\n\n  return (\n    <Flex\n      ref={ref}\n      alignItems=\"flex-start\"\n      justifyContent=\"space-between\"\n      columnGap=\"10x\"\n      {...props}\n    >\n      <Flex\n        flexWrap=\"wrap\"\n        alignItems=\"center\"\n        columnGap=\"2x\"\n        rowGap=\"3x\"\n      >\n        <Button variant=\"primary\">\n          Primary Action\n        </Button>\n        <Divider orientation=\"vertical\" />\n        <Dropdown\n          value={dropdownValue}\n          onChange={setDropdownValue}\n          items={dropdownItems}\n          renderItem={renderDropdownItem}\n          renderLabel={renderDropdownLabel}\n        />\n        <Multiselect\n          isSearchable={true}\n          value={multiselectValue}\n          onChange={setMultiselectValue}\n          items={multiselectItems}\n          renderItem={renderMultiselectItem}\n          renderLabel={renderMultiselectLabel}\n          width={240}\n        />\n        <SearchInput\n          placeholder=\"Search\"\n          onChange={(event) => {\n            const { value } = event.target;\n            setSearchInputValue(value);\n          }}\n          onClearInput={() => {\n            setSearchInputValue('');\n          }}\n          value={searchInputValue}\n        />\n        <LinkButton\n          columnGap=\"1x\"\n          mr=\"3x\"\n          onClick={() => reset()}\n        >\n          <Icon icon=\"close-s\" /> <Text>Reset</Text>\n        </LinkButton>\n        <Flex columnGap=\"1x\">\n          <TextLabel>\n            Matched results:\n          </TextLabel>\n          {matchedResults}\n        </Flex>\n      </Flex>\n      <Flex\n        flexWrap=\"nowrap\"\n        alignItems=\"center\"\n        columnGap=\"2x\"\n        rowGap=\"3x\"\n      >\n        <Tooltip label=\"Export\">\n          <Button variant=\"ghost\">\n            <Icon icon=\"export\" />\n          </Button>\n        </Tooltip>\n        <Tooltip label=\"Refresh\">\n          <Button variant=\"ghost\">\n            <Icon icon=\"refresh\" />\n          </Button>\n        </Tooltip>\n      </Flex>\n    </Flex>\n  );\n});\n\nToolbar.displayName = 'Toolbar';\n\nexport default App;",component:s.default}),"\n",(0,r.jsxs)(n.h2,{id:"how-it-works",children:["How It Works",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-it-works",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"toolbar",children:["Toolbar",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toolbar",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.p,{children:"The table toolbar provides a set of actions that users can perform on the table. The available actions may vary depending on the data type. The toolbar items are displayed from left to right."}),"\n",(0,r.jsx)(n.p,{children:"The toolbar should never display a vertical scrollbar. The position and width of the right-sided toolbar are fixed."}),"\n",(0,r.jsx)(n.p,{children:"In cases where the screen width is limited, the left-sided toolbar items can wrap to another row. These items may include, but are not limited to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Primary action"}),"\n",(0,r.jsx)(n.li,{children:"Filter"}),"\n",(0,r.jsx)(n.li,{children:"Search input"}),"\n",(0,r.jsx)(n.li,{children:"Reset (optional)"}),"\n",(0,r.jsx)(n.li,{children:"Matched results (optional)"}),"\n"]}),"\n",(0,r.jsx)(l.Z,{code:'import {\n  Button,\n  Divider,\n  Flex,\n  Icon,\n  LinkButton,\n  OverflowTooltip,\n  SearchInput,\n  Text,\n  TextLabel,\n  Tooltip,\n} from \'@tonic-ui/react\';\nimport Dropdown from \'@tonic-ui/react-docs/components/Dropdown\';\nimport Multiselect from \'@tonic-ui/react-docs/components/Multiselect\';\nimport React, { useCallback, useState } from \'react\';\n\nconst filterMap = (() => {\n  const filterData = [\n    { id: \'all\', label: \'All\' },\n    ...Array.from({ length: 10 }, (_, i) => ({\n      id: String(i + 1),\n      label: `Option ${i + 1}`,\n    })),\n  ];\n\n  const map = new Map();\n  filterData.forEach((filter) => {\n    // Use the policy ID as the key and ensure it\'s a string rather than a number\n    const key = String(filter.id);\n    map.set(key, filter);\n  });\n  return map;\n})();\n\nconst filterItems = [...filterMap.keys()];\n\nconst dropdownItems = [\n  ...filterItems.slice(0, 4),\n];\n\nconst multiselectItems = [\n  ...filterItems.slice(1),\n];\n\nconst renderDropdownItem = (value) => {\n  const filter = filterMap.get(value);\n  return filter?.label;\n};\n\nconst renderDropdownLabel = (value) => {\n  const selectionText = renderDropdownItem(value);\n  return (\n    <>\n      <TextLabel mr="2x">\n        {\'Label:\'}\n      </TextLabel>\n      <OverflowTooltip label={selectionText}>\n        {selectionText}\n      </OverflowTooltip>\n    </>\n  );\n};\n\nconst renderMultiselectItem = (value) => {\n  const filter = filterMap.get(value);\n  return filter?.label;\n};\n\nconst renderMultiselectLabel = (value) => {\n  const selectionCount = value.length;\n  const isNoneSelected = selectionCount === 0;\n  const isAllSelected = selectionCount === multiselectItems.length;\n\n  if (isNoneSelected) {\n    const selectionText = \'Select\';\n    return (\n      <>\n        <TextLabel mr="2x">\n          {\'Label:\'}\n        </TextLabel>\n        <OverflowTooltip label={selectionText}>\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  if (isAllSelected) {\n    const selectionText = \'All\'; \n    return (\n      <>\n        <TextLabel mr="2x">\n          {\'Label:\'}\n        </TextLabel>\n        <OverflowTooltip label={selectionText}>\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  const selectionText = value.map(renderMultiselectItem).join(\', \');\n  return (\n    <>\n      <TextLabel mr="2x">\n        {\'Label:\'}\n      </TextLabel>\n      <OverflowTooltip label={selectionText}>\n        {selectionText}\n      </OverflowTooltip>\n      <Text ml="1x">\n        {`(${selectionCount})`}\n      </Text>\n    </>\n  );\n};\n\nconst App = () => {\n  const [dropdownValue, setDropdownValue] = useState(dropdownItems[0]);\n  const [multiselectValue, setMultiselectValue] = useState(multiselectItems);\n  const [searchInputValue, setSearchInputValue] = useState(\'\');\n  const [matchedResults] = useState(0);\n\n  const reset = useCallback(() => {\n    setDropdownValue(dropdownItems[0]);\n    setMultiselectValue(multiselectItems);\n    setSearchInputValue(\'\');\n  }, []);\n\n  return (\n    <Flex\n      alignItems="flex-start"\n      justifyContent="space-between"\n      columnGap="10x"\n    >\n      <Flex\n        flexWrap="wrap"\n        alignItems="center"\n        columnGap="2x"\n        rowGap="3x"\n      >\n        <Button variant="primary">\n          Primary Action\n        </Button>\n        <Divider orientation="vertical" />\n        <Dropdown\n          value={dropdownValue}\n          onChange={setDropdownValue}\n          items={dropdownItems}\n          renderItem={renderDropdownItem}\n          renderLabel={renderDropdownLabel}\n        />\n        <Multiselect\n          isSearchable={true}\n          value={multiselectValue}\n          onChange={setMultiselectValue}\n          items={multiselectItems}\n          renderItem={renderMultiselectItem}\n          renderLabel={renderMultiselectLabel}\n          width={240}\n        />\n        <SearchInput\n          placeholder="Search"\n          onChange={(event) => {\n            const { value } = event.target;\n            setSearchInputValue(value);\n          }}\n          onClearInput={() => {\n            setSearchInputValue(\'\');\n          }}\n          value={searchInputValue}\n        />\n        <LinkButton\n          columnGap="1x"\n          mr="3x"\n          onClick={() => reset()}\n        >\n          <Icon icon="close-s" /> <Text>Reset</Text>\n        </LinkButton>\n        <Flex columnGap="1x">\n          <TextLabel>\n            Matched results:\n          </TextLabel>\n          {matchedResults}\n        </Flex>\n      </Flex>\n      <Flex\n        flexWrap="nowrap"\n        alignItems="center"\n        columnGap="2x"\n        rowGap="3x"\n      >\n        <Tooltip label="Export">\n          <Button variant="ghost">\n            <Icon icon="export" />\n          </Button>\n        </Tooltip>\n        <Tooltip label="Refresh">\n          <Button variant="ghost">\n            <Icon icon="refresh" />\n          </Button>\n        </Tooltip>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default App;',component:i.default}),"\n",(0,r.jsx)(n.p,{children:'When there are more than 5 filters, consider using an "Advanced filter" option. The filter options can be modified by clicking the corresponding icon. Stacked filter tags should be used when the screen width is limited.'}),"\n",(0,r.jsxs)(n.h3,{id:"data",children:["Data",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#data",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.p,{children:"It is recommended to display all columns of the table. However, in certain scenarios, vertical scrolling may be necessary. For tables with rich data columns, you can utilize expandable table rows to accommodate the additional content."}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  getExpandedRowModel,\n} from '@tanstack/react-table';\nimport {\n  Box,\n  ButtonBase,\n  Divider,\n  Icon,\n  Text,\n  Truncate,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport BaseTable from '@tonic-ui/react-docs/components/BaseTable';\nimport {\n  createTransitionStyle,\n  getEnterTransitionProps,\n  getExitTransitionProps,\n  transitionEasing,\n} from '@tonic-ui/utils';\nimport React, { forwardRef, useEffect, useMemo, useRef } from 'react';\n\nconst data = [\n  {\n    endpointId: '0d4523d9-ceed-4a9a-b3d0-056814ee8811',\n    endpointHostname: 'endpoint-1',\n    endpointIPs: ['fe80::c5a0:6dd9:1002:5760','10.1.136.130'],\n    endpointMAC: '00:50:56:9c:3c:5a',\n    eventId: 1,\n    eventSourceType: 1,\n    firstSeen: '2023-06-07T02:31:48Z',\n    lastSeen: '2023-06-07T02:31:48Z',\n    objectFirstSeen: '2023-06-07T02:27:34Z',\n    objectLastSeen: '2023-06-07T02:32:04Z',\n    objectIPs: [\n      '192.8.82.3',\n      '199.7.83.46',\n      '192.113.5.32',\n    ],\n    osDescription: 'Windows 10 Enterprise (64-bit) build 19044',\n    osType: '0x00000007',\n    osVer: '10.0.19044',\n    processCmd: 'C:\\\\Windows\\\\System32\\\\svchost.exe -k NetworkService -p -s NlaSvc',\n    processFileCreation: '2023-06-05T10:07:28Z',\n    processFileHashMD5: 'b7f884c1b74a263f746ee12a5f7c9f6a',\n    processFileHashSHA1: '1bc5066ddf693fc034d6514618854e26a84fd0d1',\n    processFileHashSHA256: 'add683a6910abbbf0e28b557fad0ba998166394932ae2aca069d9aa19ea8fe88',\n    processFileModifiedTime: '2023-06-05T10:07:28Z',\n    processFileSize: 55320,\n    processLaunchTime: '2023-06-06T09:42:15Z',\n    processName: 'C:\\\\Windows\\\\System32\\\\svchost.exe',\n    processId: 1408,\n    processSigner: 'Microsoft Windows Publisher',\n    processSignerValid: true,\n    processUser: 'NETWORK SERVICE',\n    processUserDomain: 'NT AUTHORITY',\n    productCode: 'dummy',\n    productVersion: 'x.y.z',\n    sessionId: 0,\n    timezone: 'Pacific Standard Time',\n  },\n];\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const layout = 'flexbox'; // One of: 'flexbox', 'table'\n  const variant = 'default'; // One of: 'default', 'outline'\n  const columns = useMemo(() => [\n    {\n      id: 'toggle-expanded',\n      header: () => null,\n      cell: ({ row }) => {\n        const canExpand = row.getCanExpand();\n        const isExpanded = row.getIsExpanded();\n\n        if (!canExpand) {\n          return null;\n        }\n\n        return (\n          <TableRowToggleIcon\n            isExpanded={isExpanded}\n            onClick={row.getToggleExpandedHandler()}\n          />\n        );\n      },\n      size: 48,\n    },\n    {\n      header: 'Logged',\n      accessorKey: 'firstSeen',\n      size: 180,\n      cell: ({ row }) => {\n        return (\n          <Truncate>\n            {row.original?.firstSeen}\n          </Truncate>\n        );\n      },\n    },\n    {\n      id: 'details',\n      cell: ({ row }) => {\n        const entries = Object.entries(row.original);\n\n        return (\n          <Truncate\n            as=\"pre\"\n            fontFamily=\"mono\"\n            m={0}\n            sx={{\n              '--truncate-line-clamp': 3,\n              wordBreak: 'break-all',\n              whiteSpace: 'normal',\n              display: '-webkit-box',\n              WebkitBoxOrient: 'vertical',\n              WebkitLineClamp: 'var(--truncate-line-clamp)',\n            }}\n          >\n            {entries.map((item, index) => {\n              const [key, value] = item;\n              return (\n                <Box\n                  key={key}\n                  display=\"inline\"\n                >\n                  {key}: <Text display=\"inline\" color={colorStyle.color.tertiary}>{Array.isArray(value) ? value.join(',') : value}</Text>\n                  {(index < entries.length - 1) && (\n                    <Divider display=\"inline\" orientation=\"vertical\" mx=\"2x\" />\n                  )}\n                </Box>\n              );\n            })}\n          </Truncate>\n        );\n      },\n      size: 'auto',\n    },\n  ], [colorMode, colorStyle]); // Include both colorMode and colorStyle as dependencies to prevent memoization when the color mode changes\n  const tableOptions = useMemo(() => ({\n    defaultColumn: {\n      minSize: 48,\n    },\n    getExpandedRowModel: getExpandedRowModel(),\n    getRowCanExpand: () => true,\n  }), []);\n  const tableRef = useRef(null);\n\n  useEffect(() => {\n    if (tableRef.current) {\n      // Toggles the expanded state for all rows\n      tableRef.current.toggleAllRowsExpanded(true);\n    }\n  }, []);\n\n  return (\n    <BaseTable\n      layout={layout}\n      variant={variant}\n      columns={columns}\n      data={data}\n      tableOptions={tableOptions}\n      tableRef={tableRef}\n    />\n  );\n};\n\nconst TableRowToggleIcon = forwardRef((\n  {\n    isExpanded,\n    ...rest\n  },\n  ref,\n) => {\n  const timeout = isExpanded\n    ? Math.floor(133 * 0.7) // exit\n    : 133; // enter\n  const easing = transitionEasing.easeOut;\n  const transitionProps = isExpanded\n    ? getEnterTransitionProps({ timeout, easing })\n    : getExitTransitionProps({ timeout, easing });\n  const styleProps = {\n    transform: isExpanded ? 'rotate(90deg)' : 'rotate(0deg)',\n    transition: createTransitionStyle('transform', transitionProps),\n  };\n\n  return (\n    <ButtonBase {...rest}>\n      <Icon icon=\"angle-right\" size=\"4x\" {...styleProps} />\n    </ButtonBase>\n  );\n});\nTableRowToggleIcon.displayName = 'TableRowToggleIcon';\n\nexport default App;",component:a.default}),"\n",(0,r.jsxs)(n.h3,{id:"footer",children:["Footer",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#footer",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.p,{children:"The footer should be fixed at the bottom of the screen to ensure consistent positioning."}),"\n",(0,r.jsxs)(n.h2,{id:"see-also",children:["See Also",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#see-also",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(c.Flex,{children:(0,r.jsxs)(c.Grid,{templateColumns:"1fr",columnGap:"18x",rowGap:"4x",children:[(0,r.jsx)(c.TextLabel,{children:"React Components"}),(0,r.jsx)(c.Box,{children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../components/table",children:"Table"})}),"\n"]})})]})})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(u,e)})):u(e)}},24274:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/patterns/table-display",function(){return t(18502)}])}},function(e){e.O(0,[5412,1374,6638,9774,2888,179],function(){return e(e.s=24274)}),_N_E=e.O()}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6316],{89889:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return T}});var t=e(7896),l=e(59740),o=(e(2784),e(30876)),r=["components"],b={};function T(n){var a=n.components,e=(0,l.Z)(n,r);return(0,o.kt)("wrapper",(0,t.Z)({},b,e,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"Tabs"),(0,o.kt)("p",null,"Tabs is used to group and display a set of related elements."),(0,o.kt)("h2",null,"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n} from '@tonic-ui/react';\n")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("h3",null,"Basic tabs"),(0,o.kt)("p",null,"Here is a basic example of tabs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tabs>\n  <TabList>\n    <Tab>TAB 1</Tab>\n    <Tab>TAB 2</Tab>\n    <Tab>TAB 3</Tab>\n  </TabList>\n  <TabPanels px="3x" py="2x">\n    <TabPanel>\n      Tab Panel 1\n    </TabPanel>\n    <TabPanel>\n      Tab Panel 2\n    </TabPanel>\n    <TabPanel>\n      Tab Panel 3\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"TabList")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"TabPanels")," are used to group the tabs and tab panels. If you don't need the tabs to be grouped, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"Tab")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"TabPanel")," directly.",(0,o.kt)("br",null),(0,o.kt)("br",null)),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"disabled",disabled:!0},"<Tabs>\n  <Tab>TAB 1</Tab>\n  <Tab>TAB 2</Tab>\n  <Tab>TAB 3</Tab>\n  <TabPanel>Tab Panel 1</TabPanel>\n  <TabPanel>Tab Panel 2</TabPanel>\n  <TabPanel>Tab Panel 3</TabPanel>\n</Tabs>\n"))),(0,o.kt)("h3",null,"Indexed tabs"),(0,o.kt)("p",null,"You can explicitly set the index of the tab. The index is used to determine which tab is active. Set ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultIndex")," to the index of the tab you want to be active by default."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tabs defaultIndex="tab1">\n  <TabList>\n    <Tab index="tab1">TAB 1</Tab>\n    <Tab index="tab2">TAB 2</Tab>\n    <Tab index="tab3">TAB 3</Tab>\n  </TabList>\n  <TabPanels px="3x" py="2x">\n    <TabPanel index="tab1">\n      Tab Panel 1\n    </TabPanel>\n    <TabPanel index="tab2">\n      Tab Panel 2\n    </TabPanel>\n    <TabPanel index="tab3">\n      Tab Panel 3\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),(0,o.kt)("p",null,"To programmatically change the active tab, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"index")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"onChange")," props to change the index of the selected tab in controlled mode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [index, setIndex] = React.useState(\'tab1\');\n\n  return (\n    <Tabs\n      index={index}\n      onChange={index => setIndex(index)}\n    >\n      <TabList>\n        <Tab index="tab1">TAB 1</Tab>\n        <Tab index="tab2">TAB 2</Tab>\n        <Tab index="tab3">TAB 3</Tab>\n      </TabList>\n      <TabPanels px="3x" py="2x">\n        <TabPanel index="tab1">\n          Tab Panel 1\n        </TabPanel>\n        <TabPanel index="tab2">\n          Tab Panel 2\n        </TabPanel>\n        <TabPanel index="tab3">\n          Tab Panel 3\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n')),(0,o.kt)("h3",null,"Variants"),(0,o.kt)("p",null,"Tabs comes in 3 variants: ",(0,o.kt)("inlineCode",{parentName:"p"},"default"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"filled"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"unstyled"),". Pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"variant")," prop and set it to either of these values."),(0,o.kt)("h4",null,(0,o.kt)("inlineCode",{parentName:"h4"},"default")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="default">\n  <TabList>\n    <Tab>TAB 1</Tab>\n    <Tab>TAB 2</Tab>\n    <Tab>TAB 3</Tab>\n  </TabList>\n</Tabs>\n')),(0,o.kt)("h4",null,(0,o.kt)("inlineCode",{parentName:"h4"},"filled")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="filled">\n  <TabList>\n    <Tab>TAB 1</Tab>\n    <Tab>TAB 2</Tab>\n    <Tab>TAB 3</Tab>\n  </TabList>\n</Tabs>\n')),(0,o.kt)("h4",null,(0,o.kt)("inlineCode",{parentName:"h4"},"unstyled")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="unstyled">\n  <TabList columnGap="3x">\n    <Tab>TAB 1</Tab>\n    <Tab>TAB 2</Tab>\n    <Tab>TAB 3</Tab>\n  </TabList>\n</Tabs>\n')),(0,o.kt)("h3",null,"Decorate tabs with a bottom border"),(0,o.kt)("p",null,"To decorate tabs with a bottom border, you can pass ",(0,o.kt)("inlineCode",{parentName:"p"},"__after")," prop to ",(0,o.kt)("inlineCode",{parentName:"p"},"TabList")," to render a bottom border."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const MyTabGroup = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <TabList\n      position="relative"\n      __after={{\n        content: \'""\',\n        borderBottom: 1,\n        borderBottomColor: colorStyle.divider,\n        position: \'absolute\',\n        bottom: 0,\n        width: \'100%\',\n        ...props.__after,\n      }}\n      {...props}\n    />\n  );\n};\n\nfunction Example() {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <Flex flexDirection="column" rowGap="4x">\n      <Box>\n        <Text fontSize="lg" lineHeight="lg" mb="2x">\n          Left-aligned tabs\n        </Text>\n        <Box backgroundColor={colorStyle.background.secondary} p="4x">\n          <Tabs>\n            <MyTabGroup justifyContent="flex-start">\n              <Tab>TAB 1</Tab>\n              <Tab>TAB 2</Tab>\n              <Tab>TAB 3</Tab>\n            </MyTabGroup>\n          </Tabs>\n        </Box>\n      </Box>\n      <Box>\n        <Text fontSize="lg" lineHeight="lg" mb="2x">\n          Centered tabs\n        </Text>\n        <Box backgroundColor={colorStyle.background.secondary} p="4x">\n          <Tabs>\n            <MyTabGroup justifyContent="center">\n              <Tab>TAB 1</Tab>\n              <Tab>TAB 2</Tab>\n              <Tab>TAB 3</Tab>\n            </MyTabGroup>\n          </Tabs>\n        </Box>\n      </Box>\n      <Box>\n        <Text fontSize="lg" lineHeight="lg" mb="2x">\n          Right-aligned tabs\n        </Text>\n        <Box backgroundColor={colorStyle.background.secondary} p="4x">\n          <Tabs>\n            <MyTabGroup justifyContent="flex-end">\n              <Tab>TAB 1</Tab>\n              <Tab>TAB 2</Tab>\n              <Tab>TAB 3</Tab>\n            </MyTabGroup>\n          </Tabs>\n        </Box>\n      </Box>\n      <Box>\n        <Text fontSize="lg" lineHeight="lg" mb="2x">\n          Full-width tabs\n        </Text>\n        <Box backgroundColor={colorStyle.background.secondary} p="4x">\n          <Tabs>\n            <MyTabGroup>\n              <Tab width="100%">TAB 1</Tab>\n              <Tab width="100%">TAB 2</Tab>\n              <Tab width="100%">TAB 3</Tab>\n            </MyTabGroup>\n          </Tabs>\n        </Box>\n      </Box>\n      <Box>\n        <Text fontSize="lg" lineHeight="lg" mb="2x">\n          Auto-sizing tabs\n        </Text>\n        <Box backgroundColor={colorStyle.background.secondary} p="4x">\n          <Tabs>\n            <MyTabGroup display="inline-flex">\n              <Tab>TAB 1</Tab>\n              <Tab>TAB 2</Tab>\n              <Tab>TAB 3</Tab>\n            </MyTabGroup>\n          </Tabs>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nrender(<Example />);\n')),(0,o.kt)("h3",null,"Customization"),(0,o.kt)("p",null,"Tabs also come with an ",(0,o.kt)("inlineCode",{parentName:"p"},"unstyled")," variant. It's useful for doing customizations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const CustomTabList = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const styleProps = {\n    position: \'relative\',\n    __after: {\n      content: \'""\',\n      borderBottom: 3,\n      borderBottomColor: colorStyle.background.tertiary,\n      position: \'absolute\',\n      bottom: 0,\n      width: \'100%\',\n    },\n  };\n\n  return (\n    <TabList\n      {...styleProps}\n      {...props}\n    />\n  );\n};\nconst CustomTab = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const styleProps = {\n    backgroundColor: colorStyle.background.primary,\n    border: 1,\n    borderColor: \'transparent\',\n    color: colorStyle.color.secondary,\n    px: \'3x\',\n    py: \'3x\',\n    _disabled: {\n      color: colorStyle.color.disabled,\n      cursor: \'not-allowed\',\n    },\n    _selected: {\n      backgroundColor: colorStyle.background.tertiary,\n      borderColor: colorStyle.background.tertiary,\n      borderTopLeftRadius: \'sm\',\n      borderTopRightRadius: \'sm\',\n      color: colorStyle.color.primary,\n    },\n  };\n\n  return (\n    <Tab\n      variant="unstyled"\n      {...styleProps}\n      {...props}\n    />\n  );\n};\n\nfunction Example() {\n  return (\n    <Tabs>\n      <CustomTabList>\n        <CustomTab>\n          TAB 1\n        </CustomTab>\n        <Divider orientation="vertical" alignSelf="center" height="6x" mx="1x" />\n        <CustomTab>\n          TAB 2\n        </CustomTab>\n        <Divider orientation="vertical" alignSelf="center" height="6x" mx="1x" />\n        <CustomTab>\n          TAB 3\n        </CustomTab>\n        <Divider orientation="vertical" alignSelf="center" height="6x" mx="1x" />\n      </CustomTabList>\n      <TabPanels px="3x" py="2x">\n        <TabPanel>\n          Tab Panel 1\n        </TabPanel>\n        <TabPanel>\n          Tab Panel 2 \n        </TabPanel>\n        <TabPanel>\n          Tab Panel 3\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nrender(<Example />);\n')),(0,o.kt)("h2",null,"Props"),(0,o.kt)("h3",null,"Tab"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,o.kt)("h3",null,"Tabs"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,o.kt)("h3",null,"TabList"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,o.kt)("h3",null,"TabPanel"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,o.kt)("h3",null,"TabPanels"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description")))))}T.isMDXComponent=!0},39072:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tabs",function(){return e(89889)}])}},function(n){n.O(0,[9774,2888,179],(function(){return a=39072,n(n.s=a);var a}));var a=n.O();_N_E=a}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4289],{47642:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return l}});var o=t(7896),u=t(59740),c=(t(2784),t(30876)),a=["components"],s={};function l(e){var n=e.components,t=(0,u.Z)(e,a);return(0,c.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",null,"useEffectOnce"),(0,c.kt)("p",null,"A modified version of the ",(0,c.kt)("inlineCode",{parentName:"p"},"useEffect")," Hook that runs an effect only once."),(0,c.kt)("h2",null,"Import"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import { useEffectOnce } from '@tonic-ui/react-hooks';\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import { useEffect } from 'react';\n\nconst useEffectOnce = (effect) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, []);\n};\n")),(0,c.kt)("h2",null,"Usage"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    console.log('useEffect is triggered when value changes', { value });\n  }, [value]);\n\n  useEffectOnce(() => {\n    console.log('useEffectOnce is triggered only once', { value });\n  });\n\n  return (\n    <>\n      <Box mb=\"2x\">\n        {value}\n      </Box>\n      <Button onClick={() => setValue(value => value + 1)}>\n        Click Me\n      </Button>\n    </>\n  );\n}\n")))}l.isMDXComponent=!0},20370:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-effect-once",function(){return t(47642)}])}},function(e){e.O(0,[9774,2888,179],(function(){return n=20370,e(e.s=n);var n}));var n=e.O();_N_E=n}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8372],{8274:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return u}});var l=a(7896),t=a(59740),o=(a(2784),a(30876)),s=["components"],r={};function u(e){var n=e.components,a=(0,t.Z)(e,s);return(0,o.kt)("wrapper",(0,l.Z)({},r,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"useMediaQuery"),(0,o.kt)("p",null,"A cusom Hook that listens for matches to a CSS media query. It allows the rendering of components based on whether the media query matches or not."),(0,o.kt)("h2",null,"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useMediaQuery } from '@tonic-ui/react-hooks';\n")),(0,o.kt)("h3",null,"useMediaQuery"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useEffect, useState } from 'react';\n\nconst noop = () => {};\n\nconst getInitialState = (query, defaultValue) => {\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function') {\n    return window.matchMedia(query)?.matches;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('[useMediaQuery] The default value should be defined for server-side rendering.');\n  }\n\n  return false;\n};\n\nconst useMediaQuery = (query, defaultValue) => {\n  const [matches, setMatches] = useState(getInitialState(query, defaultValue));\n\n  useEffect(() => {\n    let mounted = true;\n    const mql = window?.matchMedia?.(query);\n    const onChange = () => {\n      if (!mounted) {\n        return;\n      }\n      setMatches(!!mql.matches);\n    };\n\n    if (!mql) {\n      return noop;\n    }\n\n    mql.addEventListener('change', onChange);\n    setMatches(!!mql.matches);\n\n    return () => {\n      mounted = false;\n      mql.removeEventListener('change', onChange);\n    };\n  }, [query]);\n\n  return matches;\n};\n")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const x = (value) => JSON.stringify(value);\n  const isDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const notLessThan320 = useMediaQuery('(min-width: 320px)');\n  const notLessThan640 = useMediaQuery('(min-width: 640px)');\n  const notLessThan1024 = useMediaQuery('(min-width: 1024px)');\n  const notLessThan1280 = useMediaQuery('(min-width: 1280px)');\n  const notLessThan1680 = useMediaQuery('(min-width: 1680px)');\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableHeaderRow>\n          <TableHeaderCell width={240}>\n            Media Query\n          </TableHeaderCell>\n          <TableHeaderCell>\n            Match Result\n          </TableHeaderCell>\n        </TableHeaderRow>\n      </TableHeader>\n      <TableBody>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(prefers-color-scheme: dark)</Tag>\n          </TableCell>\n          <TableCell>{x(isDarkMode)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:320px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan320)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:640px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan640)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1024px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1024)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1280px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1280)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1680px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1680)}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n")))}u.isMDXComponent=!0},74790:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useMediaQuery",function(){return a(8274)}])}},function(e){e.O(0,[9774,2888,179],(function(){return n=74790,e(e.s=n);var n}));var n=e.O();_N_E=n}]);
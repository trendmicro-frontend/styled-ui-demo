(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7322],{82715:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return s}});var o=e(7896),i=e(59740),u=(e(2784),e(30876)),a=["components"],r={};function s(n){var t=n.components,e=(0,i.Z)(n,a);return(0,u.kt)("wrapper",(0,o.Z)({},r,e,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",null,"useCopyToClipboard"),(0,u.kt)("p",null,"A custom Hook that provides a ",(0,u.kt)("inlineCode",{parentName:"p"},"copy")," method to copy text to the clipboard. If anything does not work, it will output an error message and the value will be set to ",(0,u.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,u.kt)("h2",null,"Import"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-js"},"import { useCopyToClipboard } from '@tonic-ui/react-hooks';\n")),(0,u.kt)("h3",null,"useCopyToClipboard"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-js"},"import { useState } from 'react';\n\nconst useCopyToClipboard = () => {\n  const [value, setValue] = useState();\n  const copy = async (text) => {\n    if (!(navigator?.clipboard)) {\n      console.error('Clipboard API is not supported in this environment.');\n      return false;\n    }\n    try {\n      await navigator.clipboard.writeText(text);\n      setValue(text);\n      return true;\n    } catch (error) {\n      console.error('Clipboard write failed: ', error);\n      setValue();\n      return false;\n    }\n  };\n\n  return [value, copy];\n};\n")),(0,u.kt)("h2",null,"Usage"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const [buttonIsCopied, setButtonIsCopied] = React.useState(null);\n  const [linkIsCopied, setLinkIsCopied] = React.useState(null);\n  const [value, copy] = useCopyToClipboard();\n\n  return (\n    <>\n      <Flex columnGap=\"2x\" mb=\"2x\">\n        <Button\n          minWidth={120}\n          onClick={async function () {\n            const ok = await copy('https://github.com/trendmicro-frontend/tonic-ui')\n            setButtonIsCopied(!!ok);\n            setTimeout(() => setButtonIsCopied(null), 1000);\n          }}\n        >\n          {buttonIsCopied === null && 'Click to copy'}\n          {buttonIsCopied === true && 'Copied'}\n          {buttonIsCopied === false && 'Copy failed'}\n        </Button>\n        <LinkButton\n          onClick={async function () {\n            const ok = await copy('https://github.com/trendmicro-frontend/tonic-ui')\n            setLinkIsCopied(!!ok);\n            setTimeout(() => setLinkIsCopied(null), 1000);\n          }}\n        >\n          {linkIsCopied === null && 'Click to copy'}\n          {linkIsCopied === true && 'Copied'}\n          {linkIsCopied === false && 'Copy failed'}\n        </LinkButton>\n      </Flex>\n      <Text>Copied value: {value}</Text>\n    </>\n  );\n}\n")))}s.isMDXComponent=!0},30780:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useCopyToClipboard",function(){return e(82715)}])}},function(n){n.O(0,[9774,2888,179],(function(){return t=30780,n(n.s=t);var t}));var t=n.O();_N_E=t}]);
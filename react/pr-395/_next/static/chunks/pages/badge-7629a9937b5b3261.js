(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9283],{49334:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return g}});var a=t(7896),o=t(59740),r=(t(2784),t(30876)),d=["components"],l={};function g(e){var n=e.components,t=(0,o.Z)(e,d);return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"Badge"),(0,r.kt)("p",null,"Badges are used to highlight an item's status for quick recognition."),(0,r.kt)("h2",null,"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { Badge } from '@trendmicro/react-styled-ui';\n")),(0,r.kt)("h2",null,"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Grid\n  columnGap="8x"\n  justifyItems="center"\n  rowGap="8x"\n  templateColumns="repeat(5,1fr)"\n  width="min-content"\n>\n  <Badge />\n  <Badge badgeContent="2" />\n  <Badge badgeContent="24" />\n  <Badge badgeContent="99+" />\n  <Badge badgeContent={<Text fontFamily="mono" fontSize="xs">999+</Text>} />\n  <Badge>\n    <Icon icon="alert" />\n  </Badge>\n  <Badge badgeContent="2">\n    <Icon icon="alert" />\n  </Badge>\n  <Badge badgeContent="24">\n    <Icon icon="alert" />\n  </Badge>\n  <Badge badgeContent="99+">\n    <Icon icon="alert" />\n  </Badge>\n  <Badge\n    badgeContent={<Text fontFamily="mono" fontSize="xs">999+</Text>}\n  >\n    <Icon icon="alert" mt="1x" mr="2x" />\n  </Badge>\n  <Badge>\n    <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n  </Badge>\n  <Badge badgeContent="2">\n    <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n  </Badge>\n  <Badge badgeContent="24">\n    <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n  </Badge>\n  <Badge badgeContent="99+">\n    <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n  </Badge>\n  <Badge\n    badgeContent={<Text fontFamily="mono" fontSize="xs">999+</Text>}\n  >\n    <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n  </Badge>\n</Grid>\n')),(0,r.kt)("h3",null,"Customize badge style"),(0,r.kt)("p",null,"You can customize the badge style by passing style props. See the following example to learn how to create a outline badge."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},'const OutlineBadge = React.forwardRef((props, ref) => {\n  const [colorMode] = useColorMode();\n  const backgroundColor = {\n    dark: \'gray:100\',\n    light: \'white\',\n  }[colorMode];\n  const borderColor = {\n    dark: \'red:60\',\n    light: \'red:60\',\n  }[colorMode];\n  const borderWidth = \'2q\'; // \'2q\' is equal to \'2px\'\n  const boxShadow = { // \'boxShadow\' is used to create the outline effect\n    dark: \'0 0 0 1px #151515\',\n    light: \'0 0 0 1px white\',\n  }[colorMode];\n  const color = {\n    dark: \'white:primary\',\n    light: \'black:primary\',\n  }[colorMode];\n\n  return (\n    <Badge\n      ref={ref}\n      backgroundColor={backgroundColor}\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      boxShadow={boxShadow}\n      color={color}\n      {...props}\n    />\n  );\n});\n\nfunction Example() {\n  return (\n    <Grid\n      columnGap="8x"\n      justifyItems="center"\n      rowGap="8x"\n      templateColumns="repeat(5,1fr)"\n      width="min-content"\n    >\n      <OutlineBadge>\n        <Icon icon="alert" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="2">\n        <Icon icon="alert" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="24">\n        <Icon icon="alert" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="99+">\n        <Icon icon="alert" />\n      </OutlineBadge>\n      <OutlineBadge\n        badgeContent={<Text fontFamily="mono" fontSize="xs">999+</Text>}\n      >\n        <Icon icon="alert" mt="1x" mr="2x" />\n      </OutlineBadge>\n      <OutlineBadge>\n        <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="2">\n        <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="24">\n        <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n      </OutlineBadge>\n      <OutlineBadge badgeContent="99+">\n        <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n      </OutlineBadge>\n      <OutlineBadge\n        badgeContent={<Text fontFamily="mono" fontSize="xs">999+</Text>}\n      >\n        <Skeleton variant="rect" borderRadius="sm" width="8x" height="8x" />\n      </OutlineBadge>\n    </Grid>\n  );\n}\n\nrender(<Example />);\n')),(0,r.kt)("h3",null,"Change badge color"),(0,r.kt)("p",null,"The color of the badge can be changed by passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"backgroundColor")," prop. See the ",(0,r.kt)("a",{parentName:"p",href:"./colors"},"colors")," section to learn more about colors."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Grid\n  columnGap="6x"\n  justifyItems="center"\n  rowGap="6x"\n  templateColumns="repeat(5,1fr)"\n  width="fit-content"\n>\n  <Box><Badge backgroundColor="red:60" badgeContent="red:60" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="orange:50" badgeContent="orange:50" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="yellow:50" badgeContent="yellow:50" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="green:60" badgeContent="green:60" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="blue:60" badgeContent="blue:60" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="gray:60" badgeContent="gray:60" px="4x" py="1h"/></Box>\n  <Box><Badge backgroundColor="magenta:60" badgeContent="magenta:60" px="4x" py="1h"/></Box>\n  <Box><Badge backgroundColor="purple:60" badgeContent="purple:60" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="teal:60" badgeContent="teal:60" px="4x" py="1h" /></Box>\n  <Box><Badge backgroundColor="cyan:60" badgeContent="cyan:60" px="4x" py="1h" /></Box>\n</Grid>\n')),(0,r.kt)("h2",null,"Props"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"variant"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'solid'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"One of: 'solid', 'dot'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"badgeContent"),(0,r.kt)("td",{parentName:"tr",align:"left"},"node ","|"," string"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The badge content.")))))}g.isMDXComponent=!0},11289:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/badge",function(){return t(49334)}])}},function(e){e.O(0,[9774,2888,179],(function(){return n=11289,e(e.s=n);var n}));var n=e.O();_N_E=n}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1321],{88640:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return R}});var r=t(52322),a=t(45392),i=t(15882),l=t(27216),o=t(49857),s=t(95719),c=t(61619),u=t(67622),d=t(73645),x=t(53860),m=t(10525),h=t(56818),f=t(2784),p=t(98827),g=t(93757),v=t(52903),b=["size","aria-label","aria-labelledby","color","min","max","value","variant"],y=(0,f.forwardRef)(function(e,n){var t=(0,p.Z)({props:e,name:"LinearProgress"}),r=t.size,a=t["aria-label"],i=t["aria-labelledby"],l=t.color,s=t.min,c=void 0===s?0:s,u=t.max,d=void 0===u?100:u,f=t.value,j=void 0===f?0:f,B=t.variant,E=void 0===B?"indeterminate":B,Z=(0,x.Kd)(t,b),k=(0,g.ol)(),T=(0,g.Vg)({color:void 0===l?"blue:60":l,variant:E}),C={"aria-label":a,"aria-labelledby":i,role:"progressbar"},L={},S="".concat(y.displayName,":");if((0,m.Z)(function(){(0,h.TL)("size",{prefix:S,alternative:"height",willRemove:!0})},void 0!==r),r){var P,w=null!==(P=({xs:"1h",sm:"1x",md:"2x",lg:"3x"})[r])&&void 0!==P?P:r;k.height=w}if("determinate"===E){C["aria-valuemin"]=c,C["aria-valuemax"]=d,C["aria-valuenow"]=j;var z=(Math.max(c,Math.min(j,d))-c)/(d-c);L.style={clipPath:"inset(0 ".concat((1-z)*100,"% 0 0)")}}return(0,v.tZ)(o.Z,(0,x.Zj)((0,x.Zj)((0,x.Zj)((0,x.Zj)({ref:n},C),k),Z),{},{children:(0,v.tZ)(o.Z,(0,x.Zj)((0,x.Zj)({},L),T))}))});y.displayName="LinearProgress";var j=t(72448);function B(){return(B=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var E=function(e){var n,t,r=(0,l.u)(),a=[null===(n=r.colors)||void 0===n?void 0:n["blue:60"],null===(t=r.colors)||void 0===t?void 0:t["teal:40"]];return f.createElement(o.Z,null,f.createElement("svg",{width:0,height:0},f.createElement("defs",null,f.createElement("linearGradient",{id:"my_linear_gradient",x1:"0%",y1:"0%",x2:"0%",y2:"100%"},f.createElement("stop",{offset:"0%",stopColor:a[0]}),f.createElement("stop",{offset:"100%",stopColor:a[1]})))),f.createElement(s.Z,B({sx:{"svg circle:last-of-type":{stroke:"url(#my_linear_gradient)"}}},e)))},Z=function(){return f.createElement(o.Z,{width:320},f.createElement(c.Z,{spacing:"4x"},f.createElement(u.Z,null,"Indeterminate"),f.createElement(o.Z,{sx:{display:"inline-flex",columnGap:"5x"}},f.createElement(o.Z,{sx:{flex:"none",position:"relative"}},f.createElement(s.Z,{variant:"indeterminate",color:"blue:60",size:80,thickness:4})),f.createElement(o.Z,{sx:{flex:"none",position:"relative"}},f.createElement(s.Z,{variant:"indeterminate",color:"teal:40",size:80,thickness:4}))),f.createElement(o.Z,null,f.createElement(d.Z,{alignItems:"center",height:"5x"},f.createElement(y,{variant:"indeterminate",color:"blue:60",width:"100%"})),f.createElement(d.Z,{alignItems:"center",height:"5x"},f.createElement(y,{variant:"indeterminate",color:"teal:40",width:"100%"})))),f.createElement(j.Z,{my:"4x"}),f.createElement(c.Z,{spacing:"4x"},f.createElement(u.Z,null,"Determinate"),f.createElement(o.Z,{sx:{display:"inline-flex",columnGap:"5x"}},f.createElement(o.Z,{sx:{flex:"none",position:"relative"}},f.createElement(s.Z,{variant:"determinate",color:"blue:60",value:40,size:80}),f.createElement(o.Z,{sx:{inset:0,position:"absolute",display:"flex",alignItems:"center",justifyContent:"center"}},f.createElement(u.Z,null,"40%"))),f.createElement(o.Z,{sx:{flex:"none",position:"relative"}},f.createElement(s.Z,{variant:"determinate",color:"teal:40",value:60,size:80}),f.createElement(o.Z,{sx:{inset:0,position:"absolute",display:"flex",alignItems:"center",justifyContent:"center"}},f.createElement(u.Z,null,"60%")))),f.createElement(o.Z,null,f.createElement(d.Z,{alignItems:"center",columnGap:"3x"},f.createElement(y,{variant:"determinate",color:"blue:60",value:40,width:"100%"}),f.createElement(u.Z,null,"40%")),f.createElement(d.Z,{alignItems:"center",columnGap:"3x"},f.createElement(y,{variant:"determinate",color:"teal:40",value:60,width:"100%"}),f.createElement(u.Z,null,"60%")))),f.createElement(j.Z,{my:"4x"}),f.createElement(c.Z,{spacing:"4x"},f.createElement(u.Z,null,"Gradient"),f.createElement(o.Z,null,f.createElement(E,{size:80})),f.createElement(d.Z,{alignItems:"center",height:"5x"},f.createElement(y,{variant:"determinate",color:["blue:60","teal:40"],value:100,width:"100%"}))))},k=t(70758),T=t(39256),C=t(62080);function L(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,l,o=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(o.push(r.value),o.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw a}}return o}}(e,n)||function(e,n){if(e){if("string"==typeof e)return S(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return S(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function P(){return(P=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var w=[2,4,8,12],z=function(e){return f.createElement(o.Z,P({mb:"4x"},e))},G=function(e){var n=L(f.useState(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},F=function(){var e=L(G("indeterminate"),2),n=e[0],t=e[1],r=L(G(4),2),a=r[0],i=r[1],l=L((0,f.useState)(0),2),s=l[0],c=l[1],x=(0,f.useCallback)(function(){return c(0)},[]);return(0,f.useEffect)(function(){var e=setInterval(function(){c(function(e){return 100===e?0:Math.min(e+(5+Math.round(5*Math.random())),100)})},200);return function(){clearInterval(e)}},[]),f.createElement(f.Fragment,null,f.createElement(o.Z,{mb:"4x"},f.createElement(k.Z,{fontSize:"lg",lineHeight:"lg"},"LinearProgress props")),f.createElement(z,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"variant")),f.createElement(T.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["indeterminate","determinate"].map(function(e){return f.createElement(C.Z,{key:e,selected:e===n,onClick:(0,h.PP)(t(e),x),minWidth:"15x"},e)}))),f.createElement(z,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"height")),f.createElement(T.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},w.map(function(e){return f.createElement(C.Z,{key:e,selected:e===a,onClick:i(e),minWidth:"15x"},e)}))),f.createElement(j.Z,{mb:"4x"}),f.createElement(d.Z,{alignItems:"center",columnGap:"3x",minHeight:"5x"},f.createElement(o.Z,{width:320},f.createElement(y,{variant:n,height:a,value:"determinate"===n?s:void 0})),"determinate"===n&&f.createElement(u.Z,null,s,"%")))};function I(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,l,o=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(o.push(r.value),o.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw a}}return o}}(e,n)||function(e,n){if(e){if("string"==typeof e)return A(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return A(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function A(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function O(){return(O=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var M=[16,32,48,64,80],H=[2,4,8,12],_=function(e){return f.createElement(o.Z,O({mb:"4x"},e))},V=function(e){var n=I(f.useState(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},D=function(){var e=I(V("indeterminate"),2),n=e[0],t=e[1],r=I(V(48),2),a=r[0],i=r[1],l=I(V(4),2),c=l[0],x=l[1],m=I((0,f.useState)(1),2),p=m[0],g=m[1],v=I((0,f.useState)(0),2),b=v[0],y=v[1],B=(0,f.useCallback)(function(){return y(0)},[]);return(0,f.useEffect)(function(){var e=!1,n=setInterval(function(){e||y(function(n){return n>=100?(e=!0,setTimeout(function(){e=!1},250),0):Math.min(n+(1+Math.round(1*Math.random())),100)})},100);return function(){clearInterval(n)}},[]),f.createElement(f.Fragment,null,f.createElement(o.Z,{mb:"4x"},f.createElement(k.Z,{fontSize:"lg",lineHeight:"lg"},"CircularProgress props")),f.createElement(_,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"variant")),f.createElement(T.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["indeterminate","determinate"].map(function(e){return f.createElement(C.Z,{key:e,selected:e===n,onClick:(0,h.PP)(t(e),B),minWidth:"15x"},e)}))),f.createElement(_,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"size")),f.createElement(T.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},M.map(function(e){return f.createElement(C.Z,{key:e,selected:e===a,onClick:i(e),minWidth:"15x"},e)}))),f.createElement(_,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"thickness")),f.createElement(T.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},H.map(function(e){return f.createElement(C.Z,{key:e,selected:e===c,onClick:x(e),minWidth:"15x"},e)}))),f.createElement(j.Z,{mb:"4x"}),f.createElement(o.Z,{mb:"4x"},f.createElement(k.Z,{fontSize:"lg",lineHeight:"lg"},"Advanced adjustments")),f.createElement(_,null,f.createElement(o.Z,{mb:"2x"},f.createElement(u.Z,null,"Scaling the circular progress")),f.createElement(d.Z,{columnGap:"4x",mb:"2x"},f.createElement("input",{type:"range",name:"scale",min:.5,max:4,step:.1,value:p,onChange:function(e){return g(Number(e.target.value))}})),f.createElement(o.Z,{as:"ul",pl:"6x"},f.createElement(k.Z,{as:"li",display:"list-item"},"Current scale: ",p,"x"),f.createElement(k.Z,{as:"li",display:"list-item"},"Current dimension: ",Math.floor(p*a),"px (W) x ",Math.floor(p*a),"px (H)"))),f.createElement(j.Z,{mb:"4x"}),f.createElement(o.Z,{mb:"2x"},f.createElement(s.Z,{variant:n,size:a,thickness:c,value:"determinate"===n?b:void 0,width:Math.floor(a*p),height:Math.floor(a*p)})),"determinate"===n&&f.createElement(o.Z,{textAlign:"center",width:Math.floor(a*p)},f.createElement(u.Z,null,b,"%")))};function N(e){var n=Object.assign({div:"div",h1:"h1",p:"p",ul:"ul",li:"li",strong:"strong",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,a.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n","\n",(0,r.jsx)(n.h1,{id:"progress",children:"Progress"}),"\n",(0,r.jsx)(n.p,{children:"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Determinate"})," indicators display how long an operation will take."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Indeterminate"})," indicators visualize an unspecified wait time."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"import",children:["Import",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {\n  CircularProgress,\n  LinearProgress,\n} from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"usage",children:["Usage",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"circularprogress",children:["CircularProgress",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#circularprogress",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:D,file:{data:'import {\n  Box,\n  Button,\n  ButtonGroup,\n  CircularProgress,\n  Divider,\n  Flex,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst sizeOptions = [16, 32, 48, 64, 80];\nconst thicknessOptions = [2, 4, 8, 12];\nconst defaultSize = 48;\nconst defaultThickness = 4;\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [size, changeSizeBy] = useSelection(defaultSize);\n  const [thickness, changeThicknessBy] = useSelection(defaultThickness);\n  const [scale, setScale] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    let waitForAnimationEnd = false;\n    const timer = setInterval(() => {\n      if (waitForAnimationEnd) {\n        return;\n      }\n      setProgress((oldProgress) => {\n        if (oldProgress >= 100) {\n          waitForAnimationEnd = true;\n          setTimeout(() => {\n            waitForAnimationEnd = false;\n          }, 250);\n          return 0;\n        }\n        const diff = 1 + Math.round(Math.random() * 1);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          CircularProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            thickness\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {thicknessOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === thickness}\n              onClick={changeThicknessBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Advanced adjustments\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            Scaling the circular progress\n          </TextLabel>\n        </Box>\n        <Flex columnGap="4x" mb="2x">\n          <input\n            type="range"\n            name="scale"\n            min={0.5}\n            max={4}\n            step={0.1}\n            value={scale}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </Flex>\n        <Box as="ul" pl="6x">\n          <Text as="li" display="list-item">\n            Current scale: {scale}x\n          </Text>\n          <Text as="li" display="list-item">\n            Current dimension: {Math.floor(scale * size)}px (W) x {Math.floor(scale * size)}px (H)\n          </Text>\n        </Box>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Box mb="2x">\n        <CircularProgress\n          variant={variant}\n          size={size}\n          thickness={thickness}\n          value={variant === \'determinate\' ? progress : undefined}\n          width={Math.floor(size * scale)}\n          height={Math.floor(size * scale)}\n        />\n      </Box>\n      {variant === \'determinate\' && (\n        <Box\n          textAlign="center"\n          width={Math.floor(size * scale)}\n        >\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  ButtonGroup,\n  CircularProgress,\n  Divider,\n  Flex,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst sizeOptions = [16, 32, 48, 64, 80];\nconst thicknessOptions = [2, 4, 8, 12];\nconst defaultSize = 48;\nconst defaultThickness = 4;\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [size, changeSizeBy] = useSelection(defaultSize);\n  const [thickness, changeThicknessBy] = useSelection(defaultThickness);\n  const [scale, setScale] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    let waitForAnimationEnd = false;\n    const timer = setInterval(() => {\n      if (waitForAnimationEnd) {\n        return;\n      }\n      setProgress((oldProgress) => {\n        if (oldProgress >= 100) {\n          waitForAnimationEnd = true;\n          setTimeout(() => {\n            waitForAnimationEnd = false;\n          }, 250);\n          return 0;\n        }\n        const diff = 1 + Math.round(Math.random() * 1);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          CircularProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            thickness\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {thicknessOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === thickness}\n              onClick={changeThicknessBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Advanced adjustments\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            Scaling the circular progress\n          </TextLabel>\n        </Box>\n        <Flex columnGap="4x" mb="2x">\n          <input\n            type="range"\n            name="scale"\n            min={0.5}\n            max={4}\n            step={0.1}\n            value={scale}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </Flex>\n        <Box as="ul" pl="6x">\n          <Text as="li" display="list-item">\n            Current scale: {scale}x\n          </Text>\n          <Text as="li" display="list-item">\n            Current dimension: {Math.floor(scale * size)}px (W) x {Math.floor(scale * size)}px (H)\n          </Text>\n        </Box>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Box mb="2x">\n        <CircularProgress\n          variant={variant}\n          size={size}\n          thickness={thickness}\n          value={variant === \'determinate\' ? progress : undefined}\n          width={Math.floor(size * scale)}\n          height={Math.floor(size * scale)}\n        />\n      </Box>\n      {variant === \'determinate\' && (\n        <Box\n          textAlign="center"\n          width={Math.floor(size * scale)}\n        >\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"linearprogress",children:["LinearProgress",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#linearprogress",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:F,file:{data:'import { Box, Button, ButtonGroup, Divider, Flex, LinearProgress, Text, TextLabel } from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst heightOptions = [2, 4, 8, 12];\nconst defaultHeight = 4; \n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [height, changeHeightBy] = useSelection(defaultHeight);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          LinearProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            height\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {heightOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === height}\n              onClick={changeHeightBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Flex alignItems="center" columnGap="3x" minHeight="5x">\n        <Box width={320}>\n          <LinearProgress\n            variant={variant}\n            height={height}\n            value={variant === \'determinate\' ? progress : undefined}\n          />\n        </Box>\n        {variant === \'determinate\' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Button, ButtonGroup, Divider, Flex, LinearProgress, Text, TextLabel } from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst heightOptions = [2, 4, 8, 12];\nconst defaultHeight = 4; \n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [height, changeHeightBy] = useSelection(defaultHeight);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          LinearProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            height\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {heightOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === height}\n              onClick={changeHeightBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Flex alignItems="center" columnGap="3x" minHeight="5x">\n        <Box width={320}>\n          <LinearProgress\n            variant={variant}\n            height={height}\n            value={variant === \'determinate\' ? progress : undefined}\n          />\n        </Box>\n        {variant === \'determinate\' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"customization",children:["Customization",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#customization",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"color"})," prop allows you to customize the progress bar's color. You can choose from default or custom theme colors."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:Z,file:{data:'import {\n  Box,\n  CircularProgress,\n  Divider,\n  Flex,\n  LinearProgress,\n  Stack,\n  TextLabel,\n  useTheme,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst GradientCircularProgress = (props) => {\n  const theme = useTheme();\n  const stopColors = [\n    theme.colors?.[\'blue:60\'],\n    theme.colors?.[\'teal:40\'],\n  ];\n\n  return (\n    <Box>\n      <svg width={0} height={0}>\n        <defs>\n          <linearGradient id="my_linear_gradient" x1="0%" y1="0%" x2="0%" y2="100%">\n            <stop offset="0%" stopColor={stopColors[0]} />\n            <stop offset="100%" stopColor={stopColors[1]} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <CircularProgress\n        sx={{\n          \'svg circle:last-of-type\': {\n            stroke: \'url(#my_linear_gradient)\',\n          },\n        }}\n        {...props}\n      />\n    </Box>\n  );\n}\n\nconst App = () => {\n  const width = 320;\n\n  return (\n    <Box width={width}>\n      <Stack spacing="4x">\n        <TextLabel>Indeterminate</TextLabel>\n        <Box\n          sx={{\n            display: \'inline-flex\',\n            columnGap: \'5x\',\n          }}\n        >\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="indeterminate"\n              color="blue:60"\n              size={80}\n              thickness={4}\n            />\n          </Box>\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="indeterminate"\n              color="teal:40"\n              size={80}\n              thickness={4}\n            />\n          </Box>\n        </Box>\n        <Box>\n          <Flex alignItems="center" height="5x">\n            <LinearProgress\n              variant="indeterminate"\n              color="blue:60"\n              width="100%"\n            />\n          </Flex>\n          <Flex alignItems="center" height="5x">\n            <LinearProgress\n              variant="indeterminate"\n              color="teal:40"\n              width="100%"\n            />\n          </Flex>\n        </Box>\n      </Stack>\n      <Divider my="4x" />\n      <Stack spacing="4x">\n        <TextLabel>Determinate</TextLabel>\n        <Box\n          sx={{\n            display: \'inline-flex\',\n            columnGap: \'5x\',\n          }}\n        >\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="determinate"\n              color="blue:60"\n              value={40}\n              size={80}\n            />\n            <Box\n              sx={{\n                inset: 0,\n                position: \'absolute\',\n                display: \'flex\',\n                alignItems: \'center\',\n                justifyContent: \'center\',\n              }}\n            >\n              <TextLabel>40%</TextLabel>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="determinate"\n              color="teal:40"\n              value={60}\n              size={80}\n            />\n            <Box\n              sx={{\n                inset: 0,\n                position: \'absolute\',\n                display: \'flex\',\n                alignItems: \'center\',\n                justifyContent: \'center\',\n              }}\n            >\n              <TextLabel>60%</TextLabel>\n            </Box>\n          </Box>\n        </Box>\n        <Box>\n          <Flex alignItems="center" columnGap="3x">\n            <LinearProgress\n              variant="determinate"\n              color="blue:60"\n              value={40}\n              width="100%"\n            />\n            <TextLabel>40%</TextLabel>\n          </Flex>\n          <Flex alignItems="center" columnGap="3x">\n            <LinearProgress\n              variant="determinate"\n              color="teal:40"\n              value={60}\n              width="100%"\n            />\n            <TextLabel>60%</TextLabel>\n          </Flex>\n        </Box>\n      </Stack>\n      <Divider my="4x" />\n      <Stack spacing="4x">\n        <TextLabel>Gradient</TextLabel>\n        <Box>\n          <GradientCircularProgress size={80} />\n        </Box>\n        <Flex alignItems="center" height="5x">\n          <LinearProgress\n            variant="determinate"\n            color={[\'blue:60\', \'teal:40\']}\n            value={100}\n            width="100%"\n          />\n        </Flex>\n      </Stack>\n    </Box>\n  );\n  };\n\n  export default App;',path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  CircularProgress,\n  Divider,\n  Flex,\n  LinearProgress,\n  Stack,\n  TextLabel,\n  useTheme,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst GradientCircularProgress = (props) => {\n  const theme = useTheme();\n  const stopColors = [\n    theme.colors?.[\'blue:60\'],\n    theme.colors?.[\'teal:40\'],\n  ];\n\n  return (\n    <Box>\n      <svg width={0} height={0}>\n        <defs>\n          <linearGradient id="my_linear_gradient" x1="0%" y1="0%" x2="0%" y2="100%">\n            <stop offset="0%" stopColor={stopColors[0]} />\n            <stop offset="100%" stopColor={stopColors[1]} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <CircularProgress\n        sx={{\n          \'svg circle:last-of-type\': {\n            stroke: \'url(#my_linear_gradient)\',\n          },\n        }}\n        {...props}\n      />\n    </Box>\n  );\n}\n\nconst App = () => {\n  const width = 320;\n\n  return (\n    <Box width={width}>\n      <Stack spacing="4x">\n        <TextLabel>Indeterminate</TextLabel>\n        <Box\n          sx={{\n            display: \'inline-flex\',\n            columnGap: \'5x\',\n          }}\n        >\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="indeterminate"\n              color="blue:60"\n              size={80}\n              thickness={4}\n            />\n          </Box>\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="indeterminate"\n              color="teal:40"\n              size={80}\n              thickness={4}\n            />\n          </Box>\n        </Box>\n        <Box>\n          <Flex alignItems="center" height="5x">\n            <LinearProgress\n              variant="indeterminate"\n              color="blue:60"\n              width="100%"\n            />\n          </Flex>\n          <Flex alignItems="center" height="5x">\n            <LinearProgress\n              variant="indeterminate"\n              color="teal:40"\n              width="100%"\n            />\n          </Flex>\n        </Box>\n      </Stack>\n      <Divider my="4x" />\n      <Stack spacing="4x">\n        <TextLabel>Determinate</TextLabel>\n        <Box\n          sx={{\n            display: \'inline-flex\',\n            columnGap: \'5x\',\n          }}\n        >\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="determinate"\n              color="blue:60"\n              value={40}\n              size={80}\n            />\n            <Box\n              sx={{\n                inset: 0,\n                position: \'absolute\',\n                display: \'flex\',\n                alignItems: \'center\',\n                justifyContent: \'center\',\n              }}\n            >\n              <TextLabel>40%</TextLabel>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              flex: \'none\',\n              position: \'relative\',\n            }}\n          >\n            <CircularProgress\n              variant="determinate"\n              color="teal:40"\n              value={60}\n              size={80}\n            />\n            <Box\n              sx={{\n                inset: 0,\n                position: \'absolute\',\n                display: \'flex\',\n                alignItems: \'center\',\n                justifyContent: \'center\',\n              }}\n            >\n              <TextLabel>60%</TextLabel>\n            </Box>\n          </Box>\n        </Box>\n        <Box>\n          <Flex alignItems="center" columnGap="3x">\n            <LinearProgress\n              variant="determinate"\n              color="blue:60"\n              value={40}\n              width="100%"\n            />\n            <TextLabel>40%</TextLabel>\n          </Flex>\n          <Flex alignItems="center" columnGap="3x">\n            <LinearProgress\n              variant="determinate"\n              color="teal:40"\n              value={60}\n              width="100%"\n            />\n            <TextLabel>60%</TextLabel>\n          </Flex>\n        </Box>\n      </Stack>\n      <Divider my="4x" />\n      <Stack spacing="4x">\n        <TextLabel>Gradient</TextLabel>\n        <Box>\n          <GradientCircularProgress size={80} />\n        </Box>\n        <Flex alignItems="center" height="5x">\n          <LinearProgress\n            variant="determinate"\n            color={[\'blue:60\', \'teal:40\']}\n            value={100}\n            width="100%"\n          />\n        </Flex>\n      </Stack>\n    </Box>\n  );\n  };\n\n  export default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h2,{id:"props",children:["Props",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"circularprogress-1",children:["CircularProgress",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#circularprogress-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"color"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'blue:60'"}),(0,r.jsx)(n.td,{align:"left",children:"The color of the circular progress. It supports both default and custom theme colors."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"height"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Optionally scales the circular progress to match the height.",(0,r.jsx)("br",{}),"⚠️ When scaling is required, both ",(0,r.jsx)(n.code,{children:"width"})," and ",(0,r.jsx)(n.code,{children:"height"})," props must be passed with identical values."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"min"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum value of the progress indicator."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"max"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"100"}),(0,r.jsx)(n.td,{align:"left",children:"The maximum value of the progress indicator."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"size"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"48"}),(0,r.jsx)(n.td,{align:"left",children:"The diameter of the circular progress, in pixels."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"thickness"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"4"}),(0,r.jsx)(n.td,{align:"left",children:"The thickness of the circular progress, in pixels."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"trackColor"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsxs)(n.td,{align:"left",children:["Dark mode:",(0,r.jsx)("br",{}),"'rgba(255, 255, 255, .12)'",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Light mode:",(0,r.jsx)("br",{}),"'rgba(0, 0, 0, .12)'"]}),(0,r.jsx)(n.td,{align:"left",children:"The color of the circular track."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"value"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsxs)(n.td,{align:"left",children:["The value of the progress indicator for the determinate variant. Value between ",(0,r.jsx)(n.code,{children:"min"})," and ",(0,r.jsx)(n.code,{children:"max"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"variant"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'indeterminate'"}),(0,r.jsxs)(n.td,{align:"left",children:["The variant to use. One of: 'indeterminate', 'determinate'",(0,r.jsx)("br",{}),"• Use 'indeterminate' when there is no progress value.",(0,r.jsx)("br",{}),"• Use 'determinate' when a progress value is defined."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"width"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Optionally scales the circular progress to match the width.",(0,r.jsx)("br",{}),"⚠️ When scaling is required, both ",(0,r.jsx)(n.code,{children:"width"})," and ",(0,r.jsx)(n.code,{children:"height"})," props must be passed with identical values."]})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"linearprogress-1",children:["LinearProgress",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#linearprogress-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"color"}),(0,r.jsx)(n.td,{align:"left",children:"string | string[]"}),(0,r.jsx)(n.td,{align:"left",children:"'blue:60'"}),(0,r.jsx)(n.td,{align:"left",children:"The color of the progress bar. It supports both default and custom theme colors."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"height"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"4"}),(0,r.jsx)(n.td,{align:"left",children:"The height of the progress bar, in pixels."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"min"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum value of the progress indicator."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"max"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"100"}),(0,r.jsx)(n.td,{align:"left",children:"The maximum value of the progress indicator."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"value"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsxs)(n.td,{align:"left",children:["The value of the progress indicator for the determinate variant. Value between ",(0,r.jsx)(n.code,{children:"min"})," and ",(0,r.jsx)(n.code,{children:"max"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"variant"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'indeterminate'"}),(0,r.jsxs)(n.td,{align:"left",children:["The variant to use. One of: 'indeterminate', 'determinate'",(0,r.jsx)("br",{}),"• Use 'indeterminate' when there is no progress value.",(0,r.jsx)("br",{}),"• Use 'determinate' when a progress value is defined."]})]})]})]})]})}var R=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,a.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(N,e)})):N(e)}},15882:function(e,n,t){"use strict";t.d(n,{Z:function(){return S}});var r=t(27216),a=t(40596),i=t(49857),l=t(73645),o=t(99870),s=t(62272),c=t(14594),u=t(65019),d=t(37384),x=t(99554),m=t(69111),h=t(5632),f=t(2784),p=t(65245);function g(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var v=function(e){var n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy"),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))},b=function(e){var n,t=function(e){if(Array.isArray(e))return e}(n=(0,f.useState)(!1))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,l,o=[],s=!0,c=!1;try{for(i=(t=t.call(e)).next;!(s=(r=i.call(t)).done)&&(o.push(r.value),2!==o.length);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw a}}return o}}(n,2)||function(e,n){if(e){if("string"==typeof e)return g(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return g(e,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=t[0],a=t[1];return{value:e,onCopy:function(){v(e),a(!0),setTimeout(function(){return a(!1)},1500)},hasCopied:r}},y=t(63675),j=t(89658),B=t(92727),E=t(27899),Z=t(4779),k=["component","defaultExpanded","expanded","file","sandbox"];function T(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,l,o=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(o.push(r.value),o.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw a}}return o}}(e,n)||function(e,n){if(e){if("string"==typeof e)return C(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return C(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var L=function(e){var n,t=e.component,g=e.defaultExpanded,v=e.expanded,C=e.file,L=e.sandbox;!function(e,n){if(null!=e){var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}}}(e,k);var S=(0,h.useRouter)(),P=T((0,f.useReducer)(function(e){return!e},!1),2),w=P[0],z=P[1],G=(0,r.u)(),F=T((0,a.Z)(),1)[0],I={dark:j.y,light:j.q}[F],A=T((0,u.Z)(null!=v?v:void 0!==g&&g),2),O=A[0],M=A[1],H=b(null==C?void 0:C.data),_=H.onCopy,V=H.hasCopied,D=(0,f.useCallback)(function(){_()},[_]),N=(0,f.useCallback)(function(){(0,B.b)(L)},[L]),R=(0,f.useCallback)(function(){z(),M(!1)},[z,M]);return((0,f.useEffect)(function(){void 0!==v&&v!==O&&M(v)},[v,O,M]),t)?f.createElement(p.nu,{code:null==C?void 0:C.data,disabled:!0,language:"jsx",theme:I},f.createElement(i.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[F],p:"4x"},f.createElement(i.Z,{fontSize:"sm",lineHeight:"sm"},f.createElement(f.Fragment,{key:w},f.createElement(t,null)))),f.createElement(l.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},f.createElement(Z.Z,{"data-track":O?"Code|hide_source|".concat((0,E.Z)({path:S.pathname})):"Code|show_source|".concat((0,E.Z)({path:S.pathname})),onClick:M},f.createElement(o.Z,{label:O?"Hide the source":"Show the source"},f.createElement(d.Z,null))),f.createElement(Z.Z,{"data-track":"Code|copy_source|".concat((0,E.Z)({path:S.pathname})),onClick:D},f.createElement(o.Z,{label:V?"Copied":"Copy the source"},f.createElement(x.Z,null))),f.createElement(Z.Z,{"data-track":"Code|edit_in_codesandbox|".concat(S.pathname),onClick:N},f.createElement(o.Z,{label:"Edit in CodeSandbox"},f.createElement(y.Z,null))),f.createElement(Z.Z,{"data-track":"Code|reset|".concat(S.pathname),onClick:R},f.createElement(o.Z,{label:"Reset the demo"},f.createElement(m.Z,null)))),f.createElement(s.Z,{in:O},f.createElement(c.Z,{in:O,unmountOnExit:!0},f.createElement(i.Z,{as:p.uz,sx:{fontFamily:"mono",fontSize:"md",lineHeight:"md",mb:"4x","& > .prism-code":{padding:"".concat(null==G?void 0:null===(n=G.space)||void 0===n?void 0:n["4x"]," !important"),overflowX:"auto"}}})))):f.createElement(p.nu,{code:null==C?void 0:C.data,disabled:!0,language:"jsx",theme:I},f.createElement(i.Z,{as:p.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))};L.displayName="Demo";var S=L},13476:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/progress",function(){return t(88640)}])},99554:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}}),t(2784);var r=t(75928),a=t(52903),i=(0,r.Z)((0,a.tZ)("path",{d:"M12 0h-6c-0.5 0-1 0.5-1 1v3h-3c-0.5 0-1 0.5-1 1v10c0 0.5 0.5 1 1 1h8c0.5 0 1-0.5 1-1v-3h3c0.5 0 1-0.5 1-1v-8l-3-3zM12 1.4l1.6 1.6h-1.6v-1.6zM10 15h-8v-10h5v3h3v7zM8 7v-1.6l1.6 1.6h-1.6zM14 11h-3v-4l-3-3h-2v-3h5v3h3v7z"}),"FileCopyOIcon")},69111:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}}),t(2784);var r=t(75928),a=t(52903),i=(0,r.Z)((0,a.tZ)("path",{d:"M10 7l1.995-1.995c-0.921-1.215-2.365-1.992-3.99-1.992-2.758 0-4.993 2.235-4.993 4.993s2.235 4.993 4.993 4.993c1.839 0 3.446-0.995 4.313-2.475l0.013-0.024 1.732 1c-1.233 2.111-3.487 3.507-6.068 3.507-3.867 0-7.003-3.135-7.003-7.003s3.135-7.003 7.003-7.003c2.183 0 4.133 0.999 5.417 2.565l0.010 0.012 1.579-1.579v5z"}),"RedoIcon")},39256:function(e,n,t){"use strict";t.d(n,{Z:function(){return p}});var r=t(53860),a=t(56818),i=t(92307),l=t.n(i),o=t(2784),s=t(98827),c=t(12711),u=t(17705),d=t(52903),x=t(49857),m=["children","disabled","orientation","size","variant"],h=l()(function(e){return(0,r.Zj)({},e)}),f=(0,o.forwardRef)(function(e,n){var t=(0,s.Z)({props:e,name:"ButtonGroup"}),i=t.children,l=t.disabled,o=t.orientation,f=void 0===o?"horizontal":o,p=t.size,g=t.variant,v=(0,r.Kd)(t,m),b=(0,u.K7)({orientation:f}),y=h({disabled:l,orientation:f,size:void 0===p?"md":p,variant:void 0===g?"default":g});return(0,d.tZ)(c.u.Provider,{value:y,children:(0,d.tZ)(x.Z,(0,r.Zj)((0,r.Zj)((0,r.Zj)({ref:n},b),v),{},{children:(0,a.Pu)(i,y)}))})});f.displayName="ButtonGroup";var p=f},67622:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var r=t(53860),a=t(2784),i=t(98827),l=t(70758),o=t(91334),s=t(52903),c=["size"],u=(0,a.forwardRef)(function(e,n){var t=(0,i.Z)({props:e,name:"TextLabel"}),a=t.size,u=(0,r.Kd)(t,c),d=(0,o.w)({size:a});return(0,s.tZ)(l.Z,(0,r.Zj)((0,r.Zj)({as:"label",ref:n},d),u))});u.displayName="TextLabel";var d=u}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=13476)}),_N_E=e.O()}]);
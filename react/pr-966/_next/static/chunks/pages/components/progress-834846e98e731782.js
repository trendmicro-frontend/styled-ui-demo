(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1321],{21341:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return ea}});var r,a,i,o=t(52322),l=t(45392),s=t(15882),c=t(61619),u=t(67622),d=t(53860),m=t(5081),x=t(2784),f=t(98827),p=t(28165),h=t(27216),g=t(83377),v=t(40596),b=(0,p.F4)(r||(r=(0,d.AI)(["\n  0% {\n    left: -40%;\n    right: 100%;\n  }\n  60% {\n    left: 100%;\n    right: -40%;\n  }\n  100% {\n    left: 100%;\n    right: -40%;\n  }\n"]))),y=(0,p.F4)(a||(a=(0,d.AI)(["\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n"]))),j=(0,p.F4)(i||(i=(0,d.AI)(["\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: -126px;\n  }\n"]))),k=function(e){var n,t=e.size,r=(0,v.Z)();return{position:"relative",overflow:"hidden",backgroundColor:({dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"})[(0,d.ZQ)(r,1)[0]],height:null!==(n=({xs:"1h",sm:"1x",md:"2x",lg:"3x"})[t])&&void 0!==n?n:t}},Z=function(e){var n=e.variant,t=e.color,r=(0,h.u)(),a=(0,m.rY)(t).map(function(e){var n,t;return null!==(n=null==r?void 0:null===(t=r.colors)||void 0===t?void 0:t[e])&&void 0!==n?n:e});return"determinate"===n?{position:"absolute",inset:0,background:a.length>1?"linear-gradient(90deg,".concat(a.join(","),")"):a[0],transition:(0,g.zx)("all",{duration:200,easing:"linear"})}:"indeterminate"===n?{position:"absolute",inset:0,animation:"".concat(b," 1.6s linear .5s infinite"),background:a.length>1?"linear-gradient(90deg,".concat(a.join(","),")"):a[0],transition:(0,g.zx)("all",{duration:200,easing:"linear"})}:{}},B=function(e){var n=e.color,t=e.size,r=e.variant,a={color:n,display:"inline-block",width:t,height:t};return"determinate"===r?(0,d.Zj)((0,d.Zj)({},a),{},{transform:"rotate(-90deg)",transition:(0,g.zx)("transform")}):"indeterminate"===r?(0,d.Zj)((0,d.Zj)({},a),{},{animation:"".concat(y," 1.4s linear infinite")}):a},E=function(e){var n=e.thickness,t=e.value,r=e.variant,a={stroke:"currentColor"};if("determinate"===r){var i=2*Math.PI*((44-n)/2);return(0,d.Zj)((0,d.Zj)({},a),{},{strokeDasharray:i.toFixed(3),strokeDashoffset:"".concat(((100-t)/100*i).toFixed(3),"px"),transition:(0,g.zx)("stroke-dashoffset")})}return"indeterminate"===r?(0,d.Zj)((0,d.Zj)({},a),{},{strokeDasharray:"80px, 200px",strokeDashoffset:0,animation:"".concat(j," 1.4s ease-in-out infinite")}):a},L=t(52903),T=t(49857),z=["aria-label","aria-labelledby","color","min","max","size","value","variant"],P=(0,x.forwardRef)(function(e,n){var t=(0,f.Z)({props:e,name:"LinearProgress"}),r=t["aria-label"],a=t["aria-labelledby"],i=t.color,o=t.min,l=void 0===o?0:o,s=t.max,c=void 0===s?100:s,u=t.size,x=t.value,p=t.variant,h=void 0===p?"indeterminate":p,g=(0,d.Kd)(t,z),v=k({size:void 0===u?"sm":u}),b=Z({color:void 0===i?"blue:60":i,variant:h}),y={"aria-label":r,"aria-labelledby":a,role:"progressbar"},j={};if("determinate"===h){y["aria-valuemin"]=l,y["aria-valuemax"]=c,y["aria-valuenow"]=x;var B=((0,m.Nu)(x)-l)/(c-l);j.style={clipPath:"inset(0 ".concat((1-B)*100,"% 0 0)")}}return(0,L.tZ)(T.Z,(0,d.Zj)((0,d.Zj)((0,d.Zj)((0,d.Zj)({ref:n},y),v),g),{},{children:(0,L.tZ)(T.Z,(0,d.Zj)((0,d.Zj)({},j),b))}))});P.displayName="LinearProgress";var C=t(72448),S=t(73645),w=function(){return x.createElement(c.Z,{spacing:"4x"},x.createElement(u.Z,null,"Indeterminate"),x.createElement(P,{size:"md",variant:"indeterminate",color:"blue:60",width:320}),x.createElement(P,{size:"md",variant:"indeterminate",color:"teal:40",width:320}),x.createElement(C.Z,null),x.createElement(u.Z,null,"Determinate"),x.createElement(S.Z,{alignItems:"center",columnGap:"3x"},x.createElement(P,{size:"md",variant:"determinate",value:40,color:"blue:60",width:320}),x.createElement(u.Z,null,"40%")),x.createElement(S.Z,{alignItems:"center",columnGap:"3x"},x.createElement(P,{size:"md",variant:"determinate",value:60,color:"teal:40",width:320}),x.createElement(u.Z,null,"60%")),x.createElement(C.Z,null),x.createElement(u.Z,null,"Linear gradient"),x.createElement(S.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:320},x.createElement(T.Z,{backgroundColor:"blue:60",px:"2x",py:"1x",color:"white:primary"},"blue:60"),x.createElement(T.Z,{backgroundColor:"teal:40",px:"2x",py:"1x",color:"black:primary"},"teal:40")),x.createElement(S.Z,{alignItems:"center",columnGap:"3x"},x.createElement(P,{size:"md",variant:"determinate",value:100,color:["blue:60","teal:40"],width:320}),x.createElement(u.Z,null,"100%")),x.createElement(C.Z,null),x.createElement(u.Z,null,"Linear gradient with wave light"),x.createElement(S.Z,{alignItems:"center",columnGap:"3x"},x.createElement(P,{size:"md",variant:"determinate",value:100,color:"linear-gradient(90deg, rgba(255, 255, 255, 0) 6.03%, rgba(255, 255, 255, 0.12) 16.32%, rgba(255, 255, 255, 0.12) 42.22%, rgba(255, 255, 255, 0) 60.67%), linear-gradient(90deg, #1E5EDE, #04CAA1)",width:320}),x.createElement(u.Z,null,"100%")))},G=t(70758),I=t(39256),F=t(62080),A=t(56818);function O(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,o,l=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(l.push(r.value),l.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return D(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return D(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function M(){return(M=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var V=["xs","sm","md","lg",16],H=function(e){return x.createElement(T.Z,M({mb:"4x"},e))},N=function(e){var n=O(x.useState(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},R=function(){var e=O(N("indeterminate"),2),n=e[0],t=e[1],r=O(N("sm"),2),a=r[0],i=r[1],o=O((0,x.useState)(0),2),l=o[0],s=o[1],c=(0,x.useCallback)(function(){return s(0)},[]);return(0,x.useEffect)(function(){var e=setInterval(function(){s(function(e){return 100===e?0:Math.min(e+(5+Math.round(5*Math.random())),100)})},200);return function(){clearInterval(e)}},[]),x.createElement(x.Fragment,null,x.createElement(T.Z,{mb:"4x"},x.createElement(G.Z,{fontSize:"lg",lineHeight:"lg"},"LinearProgress props")),x.createElement(H,null,x.createElement(T.Z,{mb:"2x"},x.createElement(u.Z,null,"variant")),x.createElement(I.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["indeterminate","determinate"].map(function(e){return x.createElement(F.Z,{key:e,selected:e===n,onClick:(0,A.PP)(t(e),c),minWidth:"15x"},e)}))),x.createElement(H,null,x.createElement(T.Z,{mb:"2x"},x.createElement(u.Z,null,"size")),x.createElement(I.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},V.map(function(e){return x.createElement(F.Z,{key:e,selected:e===a,onClick:i(e),minWidth:"15x"},e)}))),x.createElement(C.Z,{mb:"4x"}),x.createElement(S.Z,{alignItems:"center",columnGap:"3x",minHeight:"5x"},x.createElement(T.Z,{width:320},x.createElement(P,{variant:n,size:a,value:"determinate"===n?l:void 0})),"determinate"===n&&x.createElement(u.Z,null,l,"%")))},_=["aria-label","aria-labelledby","color","min","max","size","thickness","value","variant"],W=function(e){return(0,L.tZ)(T.Z,(0,d.Zj)({},e))},U=function(e){return(0,L.tZ)(T.Z,(0,d.Zj)({as:"svg"},e))},K=function(e){return(0,L.tZ)(T.Z,(0,d.Zj)({as:"circle"},e))},X=(0,x.forwardRef)(function(e,n){var t=(0,f.Z)({props:e,name:"CircularProgress"}),r=t["aria-label"],a=t["aria-labelledby"],i=t.color,o=t.min,l=t.max,s=t.size,c=t.thickness,u=void 0===c?3.6:c,m=t.value,x=t.variant,p=void 0===x?"indeterminate":x,h=(0,d.Kd)(t,_),g=B({color:void 0===i?"blue:60":i,size:void 0===s?48:s,variant:p}),v=E({thickness:u,value:m,variant:p}),b={"aria-label":r,"aria-labelledby":a,role:"progressbar"};return"determinate"===p&&(b["aria-valuemin"]=void 0===o?0:o,b["aria-valuemax"]=void 0===l?100:l,b["aria-valuenow"]=m),(0,L.tZ)(W,(0,d.Zj)((0,d.Zj)((0,d.Zj)((0,d.Zj)({ref:n,role:"progressbar"},b),g),h),{},{children:(0,L.tZ)(U,(0,d.Zj)((0,d.Zj)({viewBox:"".concat(22," ").concat(22," ").concat(44," ").concat(44)},{display:"block"}),{},{children:(0,L.tZ)(K,(0,d.Zj)({cx:44,cy:44,r:(44-u)/2,fill:"none",strokeWidth:u},v))}))}))});function $(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,o,l=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(l.push(r.value),l.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Y(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Y(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Y(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function q(){return(q=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}X.displayName="CircularProgress";var Q=[16,32,48,64,80],J=[1.2,2.4,3.6],ee=function(e){return x.createElement(T.Z,q({mb:"4x"},e))},en=function(e){var n=$(x.useState(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},et=function(){var e=$(en("indeterminate"),2),n=e[0],t=e[1],r=$(en(48),2),a=r[0],i=r[1],o=$(en(3.6),2),l=o[0],s=o[1],c=$((0,x.useState)(0),2),d=c[0],m=c[1],f=(0,x.useCallback)(function(){return m(0)},[]);return(0,x.useEffect)(function(){var e=setInterval(function(){m(function(e){return 100===e?0:Math.min(e+(5+Math.round(5*Math.random())),100)})},200);return function(){clearInterval(e)}},[]),x.createElement(x.Fragment,null,x.createElement(T.Z,{mb:"4x"},x.createElement(G.Z,{fontSize:"lg",lineHeight:"lg"},"CircularProgress props")),x.createElement(ee,null,x.createElement(T.Z,{mb:"2x"},x.createElement(u.Z,null,"variant")),x.createElement(I.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["indeterminate","determinate"].map(function(e){return x.createElement(F.Z,{key:e,selected:e===n,onClick:(0,A.PP)(t(e),f),minWidth:"15x"},e)}))),x.createElement(ee,null,x.createElement(T.Z,{mb:"2x"},x.createElement(u.Z,null,"size")),x.createElement(I.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},Q.map(function(e){return x.createElement(F.Z,{key:e,selected:e===a,onClick:i(e),minWidth:"15x"},e)}))),x.createElement(C.Z,{mb:"4x"}),x.createElement(ee,null,x.createElement(T.Z,{mb:"2x"},x.createElement(u.Z,null,"thickness")),x.createElement(I.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},J.map(function(e){return x.createElement(F.Z,{key:e,selected:e===l,onClick:s(e),minWidth:"15x"},e)}))),x.createElement(C.Z,{mb:"4x"}),x.createElement(S.Z,{display:"inline-flex",flexDirection:"column",alignItems:"center",rowGap:"3x",minHeight:"5x"},x.createElement(T.Z,null,x.createElement(X,{variant:n,size:a,thickness:l,value:"determinate"===n?d:void 0})),"determinate"===n&&x.createElement(u.Z,null,d,"%")))};function er(e){var n=Object.assign({div:"div",h1:"h1",p:"p",ul:"ul",li:"li",strong:"strong",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,l.ah)(),e.components);return(0,o.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n","\n",(0,o.jsx)(n.h1,{id:"progress",children:"Progress"}),"\n",(0,o.jsx)(n.p,{children:"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Determinate"})," indicators display how long an operation will take."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Indeterminate"})," indicators visualize an unspecified wait time."]}),"\n"]}),"\n",(0,o.jsxs)(n.h2,{id:"import",children:["Import",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import {\n  CircularProgress,\n  LinearProgress,\n} from '@tonic-ui/react';\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"usage",children:["Usage",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h3,{id:"circularprogress",children:["CircularProgress",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#circularprogress",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(s.Z,Object.assign({},{component:et,file:{data:'import { Box, Button, ButtonGroup, Divider, Flex, CircularProgress, Text, TextLabel } from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst sizeOptions = [16, 32, 48, 64, 80];\nconst thicknessOptions = [1.2, 2.4, 3.6];\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [size, changeSizeBy] = useSelection(48);\n  const [thickness, changeThicknessBy] = useSelection(3.6);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          CircularProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            thickness\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {thicknessOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === thickness}\n              onClick={changeThicknessBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Flex\n        display="inline-flex"\n        flexDirection="column"\n        alignItems="center"\n        rowGap="3x"\n        minHeight="5x"\n      >\n        <Box>\n          <CircularProgress\n            variant={variant}\n            size={size}\n            thickness={thickness}\n            value={variant === \'determinate\' ? progress : undefined}\n          />\n        </Box>\n        {variant === \'determinate\' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Button, ButtonGroup, Divider, Flex, CircularProgress, Text, TextLabel } from \'@tonic-ui/react\';\nimport { callAll } from \'@tonic-ui/utils\';\nimport React, { useCallback, useEffect, useState } from \'react\';\n\nconst sizeOptions = [16, 32, 48, 64, 80];\nconst thicknessOptions = [1.2, 2.4, 3.6];\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection(\'indeterminate\');\n  const [size, changeSizeBy] = useSelection(48);\n  const [thickness, changeThicknessBy] = useSelection(3.6);\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          CircularProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'indeterminate\', \'determinate\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            thickness\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          sx={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {thicknessOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === thickness}\n              onClick={changeThicknessBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Flex\n        display="inline-flex"\n        flexDirection="column"\n        alignItems="center"\n        rowGap="3x"\n        minHeight="5x"\n      >\n        <Box>\n          <CircularProgress\n            variant={variant}\n            size={size}\n            thickness={thickness}\n            value={variant === \'determinate\' ? progress : undefined}\n          />\n        </Box>\n        {variant === \'determinate\' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h3,{id:"linearprogress",children:["LinearProgress",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#linearprogress",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(s.Z,Object.assign({},{component:R,file:{data:"import { Box, Button, ButtonGroup, Divider, Flex, LinearProgress, Text, TextLabel } from '@tonic-ui/react';\nimport { callAll } from '@tonic-ui/utils';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nconst sizeOptions = ['xs', 'sm', 'md', 'lg', 16];\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection('indeterminate');\n  const [size, changeSizeBy] = useSelection('sm');\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          LinearProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          sx={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['indeterminate', 'determinate'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          sx={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb=\"4x\" />\n      <Flex alignItems=\"center\" columnGap=\"3x\" minHeight=\"5x\">\n        <Box width={320}>\n          <LinearProgress\n            variant={variant}\n            size={size}\n            value={variant === 'determinate' ? progress : undefined}\n          />\n        </Box>\n        {variant === 'determinate' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Button, ButtonGroup, Divider, Flex, LinearProgress, Text, TextLabel } from '@tonic-ui/react';\nimport { callAll } from '@tonic-ui/utils';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nconst sizeOptions = ['xs', 'sm', 'md', 'lg', 16];\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = React.useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [variant, changeVariantBy] = useSelection('indeterminate');\n  const [size, changeSizeBy] = useSelection('sm');\n  const [progress, setProgress] = useState(0);\n  const resetProgress = useCallback(() => setProgress(0), []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n        const diff = 5 + Math.round(Math.random() * 5);\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 200);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          LinearProgress props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          sx={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['indeterminate', 'determinate'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={callAll(\n                changeVariantBy(value),\n                resetProgress,\n              )}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          sx={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {sizeOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb=\"4x\" />\n      <Flex alignItems=\"center\" columnGap=\"3x\" minHeight=\"5x\">\n        <Box width={320}>\n          <LinearProgress\n            variant={variant}\n            size={size}\n            value={variant === 'determinate' ? progress : undefined}\n          />\n        </Box>\n        {variant === 'determinate' && (\n          <TextLabel>\n            {progress}%\n          </TextLabel>\n        )}\n      </Flex>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h3,{id:"customization",children:["Customization",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#customization",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["You can use the ",(0,o.jsx)(n.code,{children:"color"})," prop to change the color of the progress bar. The default color is ",(0,o.jsx)(n.code,{children:"blue:60"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"It accepts a valid CSS background color/image, a color token from the theme, or an array of colors to create a linear gradient."}),"\n",(0,o.jsx)(s.Z,Object.assign({},{component:w,file:{data:'import { Box, Divider, Flex, LinearProgress, Stack, TextLabel } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <TextLabel>Indeterminate</TextLabel>\n    <LinearProgress size="md" variant="indeterminate" color="blue:60" width={320} />\n    <LinearProgress size="md" variant="indeterminate" color="teal:40" width={320} />\n    <Divider />\n    <TextLabel>Determinate</TextLabel>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress size="md" variant="determinate" value={40} color="blue:60" width={320}/>\n      <TextLabel>40%</TextLabel>\n    </Flex>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress size="md" variant="determinate" value={60} color="teal:40" width={320} />\n      <TextLabel>60%</TextLabel>\n    </Flex>\n    <Divider />\n    <TextLabel>Linear gradient</TextLabel>\n    <Flex\n      alignItems="center"\n      columnGap="2x"\n      justifyContent="space-between"\n      width={320}\n    >\n      <Box backgroundColor="blue:60" px="2x" py="1x" color="white:primary">\n        blue:60\n      </Box>\n      <Box backgroundColor="teal:40" px="2x" py="1x" color="black:primary">\n        teal:40\n      </Box>\n    </Flex>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress\n        size="md"\n        variant="determinate"\n        value={100}\n        color={[\'blue:60\', \'teal:40\']}\n        width={320}\n      />\n      <TextLabel>100%</TextLabel>\n    </Flex>\n    <Divider />\n    <TextLabel>Linear gradient with wave light</TextLabel>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress\n        size="md"\n        variant="determinate"\n        value={100}\n        color="linear-gradient(90deg, rgba(255, 255, 255, 0) 6.03%, rgba(255, 255, 255, 0.12) 16.32%, rgba(255, 255, 255, 0.12) 42.22%, rgba(255, 255, 255, 0) 60.67%), linear-gradient(90deg, #1E5EDE, #04CAA1)"\n        width={320}\n      />\n      <TextLabel>100%</TextLabel>\n    </Flex>\n  </Stack>\n);\n\nexport default App;',path:"pages/components/progress/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Divider, Flex, LinearProgress, Stack, TextLabel } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <TextLabel>Indeterminate</TextLabel>\n    <LinearProgress size="md" variant="indeterminate" color="blue:60" width={320} />\n    <LinearProgress size="md" variant="indeterminate" color="teal:40" width={320} />\n    <Divider />\n    <TextLabel>Determinate</TextLabel>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress size="md" variant="determinate" value={40} color="blue:60" width={320}/>\n      <TextLabel>40%</TextLabel>\n    </Flex>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress size="md" variant="determinate" value={60} color="teal:40" width={320} />\n      <TextLabel>60%</TextLabel>\n    </Flex>\n    <Divider />\n    <TextLabel>Linear gradient</TextLabel>\n    <Flex\n      alignItems="center"\n      columnGap="2x"\n      justifyContent="space-between"\n      width={320}\n    >\n      <Box backgroundColor="blue:60" px="2x" py="1x" color="white:primary">\n        blue:60\n      </Box>\n      <Box backgroundColor="teal:40" px="2x" py="1x" color="black:primary">\n        teal:40\n      </Box>\n    </Flex>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress\n        size="md"\n        variant="determinate"\n        value={100}\n        color={[\'blue:60\', \'teal:40\']}\n        width={320}\n      />\n      <TextLabel>100%</TextLabel>\n    </Flex>\n    <Divider />\n    <TextLabel>Linear gradient with wave light</TextLabel>\n    <Flex alignItems="center" columnGap="3x">\n      <LinearProgress\n        size="md"\n        variant="determinate"\n        value={100}\n        color="linear-gradient(90deg, rgba(255, 255, 255, 0) 6.03%, rgba(255, 255, 255, 0.12) 16.32%, rgba(255, 255, 255, 0.12) 42.22%, rgba(255, 255, 255, 0) 60.67%), linear-gradient(90deg, #1E5EDE, #04CAA1)"\n        width={320}\n      />\n      <TextLabel>100%</TextLabel>\n    </Flex>\n  </Stack>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h2,{id:"props",children:["Props",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h3,{id:"circularprogress-1",children:["CircularProgress",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#circularprogress-1",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.p,{children:"TBD"}),"\n",(0,o.jsxs)(n.h3,{id:"linearprogress-1",children:["LinearProgress",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#linearprogress-1",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"color"}),(0,o.jsx)(n.td,{align:"left",children:"string | string[]"}),(0,o.jsx)(n.td,{align:"left",children:"'blue:60'"}),(0,o.jsx)(n.td,{align:"left",children:"The color of the progress bar. It accepts a valid CSS background color/image, a color token from the theme, or an array of colors to create a linear gradient."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"min"}),(0,o.jsx)(n.td,{align:"left",children:"numbner"}),(0,o.jsx)(n.td,{align:"left",children:"0"}),(0,o.jsx)(n.td,{align:"left",children:"The minimum value of the progress."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"max"}),(0,o.jsx)(n.td,{align:"left",children:"number"}),(0,o.jsx)(n.td,{align:"left",children:"100"}),(0,o.jsx)(n.td,{align:"left",children:"The maximum value of the progress."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"size"}),(0,o.jsx)(n.td,{align:"left",children:"string"}),(0,o.jsx)(n.td,{align:"left",children:"'sm'"}),(0,o.jsx)(n.td,{align:"left",children:"The size of the progress bar. One of: 'xs', 'sm', 'md', 'lg'"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"variant"}),(0,o.jsx)(n.td,{align:"left",children:"string"}),(0,o.jsx)(n.td,{align:"left",children:"'indeterminate'"}),(0,o.jsxs)(n.td,{align:"left",children:["The variant to use. One of: 'indeterminate', 'determinate'",(0,o.jsx)("br",{}),"• Use indeterminate when there is no progress value.",(0,o.jsx)("br",{}),"• Use determinate when a progress value is defined."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"value"}),(0,o.jsx)(n.td,{align:"left",children:"number"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"The value of the progress indicator for the determinate variant."})]})]})]})]})}var ea=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.ah)(),e.components).wrapper;return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(er,e)})):er(e)}},15882:function(e,n,t){"use strict";t.d(n,{Z:function(){return P}});var r=t(27216),a=t(40596),i=t(49857),o=t(73645),l=t(99870),s=t(62272),c=t(14594),u=t(65019),d=t(37384),m=t(99554),x=t(69111),f=t(5632),p=t(2784),h=t(65245);function g(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var v=function(e){var n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy"),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))},b=function(e){var n,t=function(e){if(Array.isArray(e))return e}(n=(0,p.useState)(!1))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,o,l=[],s=!0,c=!1;try{for(i=(t=t.call(e)).next;!(s=(r=i.call(t)).done)&&(l.push(r.value),2!==l.length);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return l}}(n,2)||function(e,n){if(e){if("string"==typeof e)return g(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return g(e,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=t[0],a=t[1];return{value:e,onCopy:function(){v(e),a(!0),setTimeout(function(){return a(!1)},1500)},hasCopied:r}},y=t(63675),j=t(89658),k=t(92727),Z=t(27899),B=t(4779),E=["component","defaultExpanded","expanded","file","sandbox"];function L(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,i,o,l=[],s=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(l.push(r.value),l.length!==n);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return T(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return T(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var z=function(e){var n,t=e.component,g=e.defaultExpanded,v=e.expanded,T=e.file,z=e.sandbox;!function(e,n){if(null!=e){var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}}}(e,E);var P=(0,f.useRouter)(),C=L((0,p.useReducer)(function(e){return!e},!1),2),S=C[0],w=C[1],G=(0,r.u)(),I=L((0,a.Z)(),1)[0],F={dark:j.y,light:j.q}[I],A=L((0,u.Z)(null!=v?v:void 0!==g&&g),2),O=A[0],D=A[1],M=b(null==T?void 0:T.data),V=M.onCopy,H=M.hasCopied,N=(0,p.useCallback)(function(){V()},[V]),R=(0,p.useCallback)(function(){(0,k.b)(z)},[z]),_=(0,p.useCallback)(function(){w(),D(!1)},[w,D]);return((0,p.useEffect)(function(){void 0!==v&&v!==O&&D(v)},[v,O,D]),t)?p.createElement(h.nu,{code:null==T?void 0:T.data,disabled:!0,language:"jsx",theme:F},p.createElement(i.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[I],p:"4x"},p.createElement(i.Z,{fontSize:"sm",lineHeight:"sm"},p.createElement(p.Fragment,{key:S},p.createElement(t,null)))),p.createElement(o.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},p.createElement(B.Z,{"data-track":O?"Code|hide_source|".concat((0,Z.Z)({path:P.pathname})):"Code|show_source|".concat((0,Z.Z)({path:P.pathname})),onClick:D},p.createElement(l.Z,{label:O?"Hide the source":"Show the source"},p.createElement(d.Z,null))),p.createElement(B.Z,{"data-track":"Code|copy_source|".concat((0,Z.Z)({path:P.pathname})),onClick:N},p.createElement(l.Z,{label:H?"Copied":"Copy the source"},p.createElement(m.Z,null))),p.createElement(B.Z,{"data-track":"Code|edit_in_codesandbox|".concat(P.pathname),onClick:R},p.createElement(l.Z,{label:"Edit in CodeSandbox"},p.createElement(y.Z,null))),p.createElement(B.Z,{"data-track":"Code|reset|".concat(P.pathname),onClick:_},p.createElement(l.Z,{label:"Reset the demo"},p.createElement(x.Z,null)))),p.createElement(s.Z,{in:O},p.createElement(c.Z,{in:O,unmountOnExit:!0},p.createElement(i.Z,{as:h.uz,sx:{fontFamily:"mono",fontSize:"md",lineHeight:"md",mb:"4x","& > .prism-code":{padding:"".concat(null==G?void 0:null===(n=G.space)||void 0===n?void 0:n["4x"]," !important"),overflowX:"auto"}}})))):p.createElement(h.nu,{code:null==T?void 0:T.data,disabled:!0,language:"jsx",theme:F},p.createElement(i.Z,{as:h.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))};z.displayName="Demo";var P=z},13476:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/progress",function(){return t(21341)}])},99554:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}}),t(2784);var r=t(75928),a=t(52903),i=(0,r.Z)((0,a.tZ)("path",{d:"M12 0h-6c-0.5 0-1 0.5-1 1v3h-3c-0.5 0-1 0.5-1 1v10c0 0.5 0.5 1 1 1h8c0.5 0 1-0.5 1-1v-3h3c0.5 0 1-0.5 1-1v-8l-3-3zM12 1.4l1.6 1.6h-1.6v-1.6zM10 15h-8v-10h5v3h3v7zM8 7v-1.6l1.6 1.6h-1.6zM14 11h-3v-4l-3-3h-2v-3h5v3h3v7z"}),"FileCopyOIcon")},69111:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}}),t(2784);var r=t(75928),a=t(52903),i=(0,r.Z)((0,a.tZ)("path",{d:"M10 7l1.995-1.995c-0.921-1.215-2.365-1.992-3.99-1.992-2.758 0-4.993 2.235-4.993 4.993s2.235 4.993 4.993 4.993c1.839 0 3.446-0.995 4.313-2.475l0.013-0.024 1.732 1c-1.233 2.111-3.487 3.507-6.068 3.507-3.867 0-7.003-3.135-7.003-7.003s3.135-7.003 7.003-7.003c2.183 0 4.133 0.999 5.417 2.565l0.010 0.012 1.579-1.579v5z"}),"RedoIcon")},39256:function(e,n,t){"use strict";t.d(n,{Z:function(){return h}});var r=t(53860),a=t(56818),i=t(92307),o=t.n(i),l=t(2784),s=t(98827),c=t(12711),u=t(17705),d=t(52903),m=t(49857),x=["children","disabled","orientation","size","variant"],f=o()(function(e){return(0,r.Zj)({},e)}),p=(0,l.forwardRef)(function(e,n){var t=(0,s.Z)({props:e,name:"ButtonGroup"}),i=t.children,o=t.disabled,l=t.orientation,p=void 0===l?"horizontal":l,h=t.size,g=t.variant,v=(0,r.Kd)(t,x),b=(0,u.K7)({orientation:p}),y=f({disabled:o,orientation:p,size:void 0===h?"md":h,variant:void 0===g?"default":g});return(0,d.tZ)(c.u.Provider,{value:y,children:(0,d.tZ)(m.Z,(0,r.Zj)((0,r.Zj)((0,r.Zj)({ref:n},b),v),{},{children:(0,a.Pu)(i,y)}))})});p.displayName="ButtonGroup";var h=p},67622:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var r=t(53860),a=t(2784),i=t(98827),o=t(70758),l=t(91334),s=t(52903),c=["size"],u=(0,a.forwardRef)(function(e,n){var t=(0,i.Z)({props:e,name:"TextLabel"}),a=t.size,u=(0,r.Kd)(t,c),d=(0,l.w)({size:a});return(0,s.tZ)(o.Z,(0,r.Zj)((0,r.Zj)({as:"label",ref:n},d),u))});u.displayName="TextLabel";var d=u}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=13476)}),_N_E=e.O()}]);
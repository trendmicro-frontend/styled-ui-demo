(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3731],{4105:function(e,n,t){"use strict";t.r(n);var s=t(2322),c=t(5392);function l(e){var n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"useEffectOnceWhen"}),"\n",(0,s.jsxs)(n.p,{children:["A custom Hook similar to ",(0,s.jsx)(n.code,{children:"useEffectOnce"}),", but only runs once when a condition is met."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// import\nimport { useEffectOnceWhen } from '@tonic-ui/react-hooks';\n\n// usage\nuseEffectOnceWhen(effect, when);\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{align:"left",children:"Name"}),(0,s.jsx)(n.th,{align:"left",children:"Type"}),(0,s.jsx)(n.th,{align:"left",children:"Default"}),(0,s.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{align:"left",children:"effect"}),(0,s.jsx)(n.td,{align:"left",children:(0,s.jsx)(n.code,{children:"() => void"})}),(0,s.jsx)(n.td,{align:"left"}),(0,s.jsx)(n.td,{align:"left",children:"The effect to run."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{align:"left",children:"when"}),(0,s.jsx)(n.td,{align:"left",children:"boolean"}),(0,s.jsx)(n.td,{align:"left",children:"false"}),(0,s.jsx)(n.td,{align:"left",children:"The condition to run the effect."})]})]})]}),"\n",(0,s.jsx)(n.h3,{children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function Component() {\n  const [state, setState] = React.useState('idle');\n\n  useEffectOnceWhen(() => {\n    setTimeout(() => {\n      setState('loaded');\n    }, 3000); // Countdown for 3 seconds\n  }, (state === 'loading'));\n\n  return (\n    <>\n      {state === 'idle' && (\n        <Button onClick={() => setState('loading')}>\n          Click To Run\n        </Button>\n      )}\n      {state === 'loading' && 'Loading component (will be gone in 3 seconds)...'}\n      {state === 'loaded' && 'Component loaded!'}\n    </>\n  );\n}\n"})})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,c.ah)(),e.components).wrapper;return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l(e)}},2676:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useEffectOnceWhen",function(){return t(4105)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=2676)}),_N_E=e.O()}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5836],{11673:function(e,r,o){"use strict";o.r(r),o.d(r,{default:function(){return index_page}});var t=o(52322),n=o(45392),l=o(83449),d=o(40596),a=o(85017),i=o(73645),c=o(35398),s=o(67622),u=o(68010),b=o(61619),h=o(55459),m=o(70758),x=o(6194),p=o(2784);function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}function _slicedToArray(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o,t,n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l=[],d=!0,a=!1;try{for(n=n.call(e);!(d=(o=n.next()).done)&&(l.push(o.value),!r||l.length!==r);d=!0);}catch(e){a=!0,t=e}finally{try{d||null==n.return||n.return()}finally{if(a)throw t}}return l}}(e,r)||function(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return _arrayLikeToArray(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var Block=function(e){var r=_slicedToArray((0,d.Z)(),1)[0],o=_slicedToArray((0,a.Z)({colorMode:r}),1)[0];return p.createElement(i.Z,_extends({px:"4x",py:"3x",alignItems:"flex-start",justifyContent:"center",flexDirection:"column",backgroundColor:o.background.secondary},e))},borders_keyword=function(){var e=(0,c.u)(),r={dark:"gray:60",light:"gray:30"}[_slicedToArray((0,d.Z)(),1)[0]],o="solid",t=["thin","medium","thick"],n=_slicedToArray((0,p.useState)(t[0]),2),l=n[0],a=n[1],y=e.borders[l]||l,f=e.colors[r]||r;return p.createElement(p.Fragment,null,p.createElement(i.Z,{alignItems:"center",mb:"5x"},p.createElement(s.Z,null,"border ="),p.createElement(u.Z,{width:"2x"}),p.createElement(b.Z,{direction:"row",spacing:"2x"},t.map(function(e){return p.createElement(h.Z,{key:e,onClick:function(){return a(e)},variant:e===l?"primary":"secondary"},p.createElement(m.Z,{fontFamily:"mono"},e))}))),p.createElement(x.Z,{templateColumns:"repeat(auto-fill, minmax(240px, 1fr))",columnGap:"6x",rowGap:"6x"},p.createElement(Block,{border:l,borderColor:r,borderStyle:o},p.createElement(m.Z,null,'border="',y,'"'),p.createElement(m.Z,null,'borderColor="',f,'"'),p.createElement(m.Z,null,'borderStyle="',o,'"')),p.createElement(Block,{borderTop:l,borderTopColor:r,borderTopStyle:o},p.createElement(m.Z,null,'borderTop="',y,'"'),p.createElement(m.Z,null,'borderTopColor="',f,'"'),p.createElement(m.Z,null,'borderTopStyle="',o,'"')),p.createElement(Block,{borderRight:l,borderRightColor:r,borderRightStyle:o},p.createElement(m.Z,null,'borderRight="',y,'"'),p.createElement(m.Z,null,'borderRightColor="',f,'"'),p.createElement(m.Z,null,'borderRightStyle="',o,'"')),p.createElement(Block,{borderBottom:l,borderBottomColor:r,borderBottomStyle:o},p.createElement(m.Z,null,'borderBottom="',y,'"'),p.createElement(m.Z,null,'borderBottomColor="',f,'"'),p.createElement(m.Z,null,'borderBottomStyle="',o,'"')),p.createElement(Block,{borderLeft:l,borderLeftColor:r,borderLeftStyle:o},p.createElement(m.Z,null,'borderLeft="',y,'"'),p.createElement(m.Z,null,'borderLeftColor="',f,'"'),p.createElement(m.Z,null,'borderLeftStyle="',o,'"'))))};function borders_numeric_value_extends(){return(borders_numeric_value_extends=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}function borders_numeric_value_slicedToArray(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o,t,n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l=[],d=!0,a=!1;try{for(n=n.call(e);!(d=(o=n.next()).done)&&(l.push(o.value),!r||l.length!==r);d=!0);}catch(e){a=!0,t=e}finally{try{d||null==n.return||n.return()}finally{if(a)throw t}}return l}}(e,r)||function(e,r){if(e){if("string"==typeof e)return borders_numeric_value_arrayLikeToArray(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return borders_numeric_value_arrayLikeToArray(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function borders_numeric_value_arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var borders_numeric_value_Block=function(e){var r=borders_numeric_value_slicedToArray((0,d.Z)(),1)[0],o=borders_numeric_value_slicedToArray((0,a.Z)({colorMode:r}),1)[0];return p.createElement(i.Z,borders_numeric_value_extends({px:"4x",py:"3x",alignItems:"flex-start",justifyContent:"center",flexDirection:"column",backgroundColor:o.background.secondary},e))},borders_numeric_value=function(){var e=(0,c.u)(),r={dark:"gray:60",light:"gray:30"}[borders_numeric_value_slicedToArray((0,d.Z)(),1)[0]],o=[1,2,3,4,5],t=borders_numeric_value_slicedToArray((0,p.useState)(o[0]),2),n=t[0],l=t[1],a=e.borders[n]||n,y=e.colors[r]||r;return p.createElement(p.Fragment,null,p.createElement(i.Z,{alignItems:"center",mb:"5x"},p.createElement(s.Z,null,"border ="),p.createElement(u.Z,{width:"2x"}),p.createElement(b.Z,{direction:"row",spacing:"2x"},o.map(function(e){return p.createElement(h.Z,{key:e,onClick:function(){return l(e)},variant:e===n?"primary":"secondary"},p.createElement(m.Z,{fontFamily:"mono"},e))}))),p.createElement(x.Z,{templateColumns:"repeat(auto-fill, minmax(240px, 1fr))",columnGap:"6x",rowGap:"6x"},p.createElement(borders_numeric_value_Block,{border:n,borderColor:r},p.createElement(m.Z,null,'border="',a,'"'),p.createElement(m.Z,null,'borderColor="',y,'"')),p.createElement(borders_numeric_value_Block,{borderTop:n,borderTopColor:r},p.createElement(m.Z,null,'borderTop="',a,'"'),p.createElement(m.Z,null,'borderTopColor="',y,'"')),p.createElement(borders_numeric_value_Block,{borderRight:n,borderRightColor:r},p.createElement(m.Z,null,'borderRight="',a,'"'),p.createElement(m.Z,null,'borderRightColor="',y,'"')),p.createElement(borders_numeric_value_Block,{borderBottom:n,borderBottomColor:r},p.createElement(m.Z,null,'borderBottom="',a,'"'),p.createElement(m.Z,null,'borderBottomColor="',y,'"')),p.createElement(borders_numeric_value_Block,{borderLeft:n,borderLeftColor:r},p.createElement(m.Z,null,'borderLeft="',a,'"'),p.createElement(m.Z,null,'borderLeftColor="',y,'"'))))},y=o(401);function _createMdxContent(e){var r=Object.assign({div:"div",h1:"h1",h2:"h2",a:"a",svg:"svg",use:"use",p:"p",pre:"pre",code:"code",h3:"h3",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,t.jsxs)(r.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n",(0,t.jsx)(r.h1,{id:"borders",children:"Borders"}),"\n",(0,t.jsxs)(r.h2,{id:"design-tokens",children:["Design Tokens",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#design-tokens",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsx)(y.Z,{theme:"borders"}),"\n",(0,t.jsxs)(r.h2,{id:"examples",children:["Examples",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#examples",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsx)(r.p,{children:"The border shorthand property sets all the border properties in one declaration."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'/* style */\nborder="solid"\n\n/* width | style */\nborder="2px dotted"\n\n/* style | color */\nborder="outset #f33"\n\n/* width | style | color */\nborder="medium dashed green"\n\n/* Global values */\nborder="inherit"\nborder="initial"\nborder="unset"\n'})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"border"})," property may be specified using one, two, or three of the values listed below. The order of the value does not matter. See ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/border",children:"border"})," in MDN for more details."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: The border will be invisible if its style is not defined. This is because the style defaults to ",(0,t.jsx)(r.code,{children:"none"}),"."]}),"\n",(0,t.jsxs)(r.h3,{id:"values",children:["Values",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#values",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-color>"}),"\nSets the color of the border. Defaults to ",(0,t.jsx)(r.code,{children:"currentcolor"})," if absent."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-style>"}),"\nSets the style of the border. Defaults to ",(0,t.jsx)(r.code,{children:"none"})," if absent."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-width>"}),"\nSets the thickness of the border. Defaults to ",(0,t.jsx)(r.code,{children:"medium"})," if absent."]}),"\n",(0,t.jsxs)(r.h3,{id:"nonnegative-length",children:["Nonnegative length",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#nonnegative-length",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:["If the border is a numeric value defined in the theme, the ",(0,t.jsx)(r.code,{children:"solid"})," border style will be applied as a shorthand for the ",(0,t.jsx)(r.code,{children:"borderWidth"})," and ",(0,t.jsx)(r.code,{children:"borderStyle"})," properties."]}),"\n",(0,t.jsx)(l.Z,Object.assign({},{component:borders_numeric_value,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderWidths = [1, 2, 3, 4, 5];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/theme/borders/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderWidths = [1, 2, 3, 4, 5];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,t.jsxs)(r.h3,{id:"keyword",children:["Keyword",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#keyword",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"thin"}),", ",(0,t.jsx)(r.code,{children:"medium"}),", and ",(0,t.jsx)(r.code,{children:"thick"})," are keywords that indicate the border width. You can use them in the ",(0,t.jsx)(r.code,{children:"border"})," property, but you have to set the ",(0,t.jsx)(r.code,{children:"borderStyle"})," property to ",(0,t.jsx)(r.code,{children:"solid"})," as well."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: Because the specification doesn't define the exact thickness denoted by each keyword, the precise result when using one of them is implementation-specific. Nevertheless, they always follow the pattern ",(0,t.jsx)(r.code,{children:"thin ≤ medium ≤ thick"}),", and the values are constant within a single document."]}),"\n",(0,t.jsx)(l.Z,Object.assign({},{component:borders_keyword,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderStyle = \'solid\';\n  const borderWidths = [\'thin\', \'medium\', \'thick\'];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n          borderStyle={borderStyle}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n          <Text>borderStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n          borderTopStyle={borderStyle}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n          <Text>borderTopStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n          borderRightStyle={borderStyle}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n          <Text>borderRightStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n          borderBottomStyle={borderStyle}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n          <Text>borderBottomStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n          borderLeftStyle={borderStyle}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n          <Text>borderLeftStyle="{borderStyle}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/theme/borders/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderStyle = \'solid\';\n  const borderWidths = [\'thin\', \'medium\', \'thick\'];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n          borderStyle={borderStyle}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n          <Text>borderStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n          borderTopStyle={borderStyle}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n          <Text>borderTopStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n          borderRightStyle={borderStyle}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n          <Text>borderRightStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n          borderBottomStyle={borderStyle}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n          <Text>borderBottomStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n          borderLeftStyle={borderStyle}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n          <Text>borderLeftStyle="{borderStyle}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,t.jsxs)(r.h2,{id:"borders-vs-outlines",children:["Borders vs. Outlines",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#borders-vs-outlines",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:["Borders and ",(0,t.jsx)(r.a,{href:"./outlines",children:"outlines"})," are very similar. However, outlines differ from borders in the following ways:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Outlines never take up space, as they are drawn outside of an element's content."}),"\n",(0,t.jsx)(r.li,{children:"According to the spec, outlines don't have to be rectangular, although they usually are."}),"\n"]})]})}var index_page=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},(0,n.ah)(),e.components).wrapper;return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},83449:function(e,r,o){"use strict";o.d(r,{Z:function(){return S}});var t=o(40596),n=o(49857),l=o(73645),d=o(82139),a=o(62368),i=o(62272),c=o(14594),s=o(65019),u=o(5632),b=o(2784),h=o(65245),m=o(82821),x=o(90622),p=o(52057),y=o(63651),f=o(95530),T=["size"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}var C=(0,b.forwardRef)(function(e,r){var o=e.size,t=function(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)o=l[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)o=l[t],!(r.indexOf(o)>=0)&&Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}(e,T);return b.createElement(f.Z,_extends({size:o,viewBox:"0 0 1024 1024"},t),b.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});C.displayName="CodeSandboxIcon";var g=o(94981),k=["component","defaultExpanded","expanded","file","sandbox"];function _slicedToArray(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o,t,n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l=[],d=!0,a=!1;try{for(n=n.call(e);!(d=(o=n.next()).done)&&(l.push(o.value),!r||l.length!==r);d=!0);}catch(e){a=!0,t=e}finally{try{d||null==n.return||n.return()}finally{if(a)throw t}}return l}}(e,r)||function(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return _arrayLikeToArray(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var Demo=function(e){var r=e.component,o=e.defaultExpanded,f=void 0!==o&&o,T=e.expanded,S=e.file,v=e.sandbox;!function(e,r){if(null!=e){var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)o=l[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)o=l[t],!(r.indexOf(o)>=0)&&Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}}}(e,k);var B=(0,u.useRouter)(),j=_slicedToArray((0,b.useReducer)(function(e){return!e},!1),2),_=j[0],E=j[1],w=_slicedToArray((0,t.Z)(),1)[0],Z={dark:x.y,light:x.q}[w],L=_slicedToArray((0,s.Z)(null!=T?T:f),2),A=L[0],W=L[1],V=(0,m.Z)(null==S?void 0:S.data),O=V.onCopy,M=V.hasCopied,R=(0,b.useCallback)(function(){O()},[O]),I=(0,b.useCallback)(function(){(0,p.b)(v)},[v]),F=(0,b.useCallback)(function(){E(),W(!1)},[E,W]);return(0,b.useEffect)(function(){void 0!==T&&T!==A&&W(T)},[T,A,W]),b.createElement(h.nu,{code:null==S?void 0:S.data,disabled:!0,language:"jsx",theme:Z},b.createElement(n.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[w],p:"4x"},b.createElement(n.Z,{fontSize:"sm",lineHeight:"sm"},b.createElement(b.Fragment,{key:_},b.createElement(r,null)))),b.createElement(l.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},b.createElement(g.Z,{"data-track":A?"CodeBlock|hide_source|".concat((0,y.Z)({path:B.pathname})):"CodeBlock|show_source|".concat((0,y.Z)({path:B.pathname})),onClick:W},b.createElement(d.Z,{label:A?"Hide the source":"Show the source"},b.createElement(a.Z,{icon:"code"}))),b.createElement(g.Z,{"data-track":"CodeBlock|copy_source|".concat((0,y.Z)({path:B.pathname})),onClick:R},b.createElement(d.Z,{label:M?"Copied":"Copy the source"},b.createElement(a.Z,{icon:"file-copy-o"}))),b.createElement(g.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(B.pathname),onClick:I},b.createElement(d.Z,{label:"Edit in CodeSandbox"},b.createElement(C,null))),b.createElement(g.Z,{"data-track":"CodeBlock|reset|".concat(B.pathname),onClick:F},b.createElement(d.Z,{label:"Reset the demo"},b.createElement(a.Z,{icon:"redo"})))),b.createElement(i.Z,{in:A},b.createElement(c.Z,{in:A,unmountOnExit:!0},b.createElement(n.Z,{as:h.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))))};Demo.displayName="Demo";var S=Demo},401:function(e,r,o){"use strict";var t=o(35398),n=o(40596),l=o(85017),d=o(49857),a=o(2784),i=o(95681),c=o(53733);function _slicedToArray(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o,t,n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l=[],d=!0,a=!1;try{for(n=n.call(e);!(d=(o=n.next()).done)&&(l.push(o.value),!r||l.length!==r);d=!0);}catch(e){a=!0,t=e}finally{try{d||null==n.return||n.return()}finally{if(a)throw t}}return l}}(e,r)||function(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return _arrayLikeToArray(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}r.Z=function(e){var r,o=e.theme,s=(0,t.u)(),u=_slicedToArray((0,n.Z)(),1)[0],b=null!==(r=_slicedToArray((0,l.Z)({colorMode:u}),1)[0][o])&&void 0!==r?r:s[o];return b?(("space"===o||"sizes"===o)&&(b=Object.keys(b).filter(function(e){return!e.toString().match(/[qh]$/)}).reduce(function(e,r){return e[r]=b[r],e},{})),a.createElement(d.Z,{mb:"6x"},a.createElement(i.Z,null,a.createElement("div",{className:"js"},"const ".concat(o," = ").concat((0,c.Z)(b,!1)))))):"Theme field not found"}},53733:function(e,r){"use strict";r.Z=function(e){return JSON.stringify(e,null,2).replace(/"/g,"'").replace(/'(\d+|[a-z]+)':/g,"$1:")}},43057:function(e,r,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/theme/borders",function(){return o(11673)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=43057)}),_N_E=e.O()}]);
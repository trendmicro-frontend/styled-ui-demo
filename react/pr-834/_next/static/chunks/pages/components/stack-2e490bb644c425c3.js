(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5690],{56654:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return index_page}});var r=t(52322),o=t(45392),a=t(83449),l=t(28165),c=t(40596),i=t(85017),s=t(73645),d=t(49857),u=t(70758),p=t(67622),h=t(39256),x=t(55459),m=t(96007),f=t(68010),g=t(72448),y=t(61619),b=t(65019),v=t(2784);function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function _slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var a=[],l=!0,c=!1;try{for(o=o.call(e);!(l=(t=o.next()).done)&&(a.push(t.value),!n||a.length!==n);l=!0);}catch(e){c=!0,r=e}finally{try{l||null==o.return||o.return()}finally{if(c)throw r}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var Item=function(e){var n=_slicedToArray((0,c.Z)(),1)[0],t=_slicedToArray((0,i.Z)({colorMode:n}),1)[0].shadow.thin;return v.createElement(s.Z,_extends({boxShadow:t,border:1,borderColor:"dark"===n?"gray:70":"gray:20",alignItems:"center",justifyContent:"center",p:"2x"},e))},FormGroup=function(e){return v.createElement(d.Z,_extends({mb:"4x"},e))},Note=function(e){var n=_slicedToArray((0,c.Z)(),1)[0],t=_slicedToArray((0,i.Z)({colorMode:n}),1)[0];return v.createElement(u.Z,_extends({color:t.color.tertiary},e))},useSelection=function(e){var n=_slicedToArray((0,v.useState)(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},usage=function(){var e=_slicedToArray(useSelection("column"),2),n=e[0],t=e[1],r=_slicedToArray(useSelection("nowrap"),2),o=r[0],a=r[1],c=_slicedToArray((0,b.Z)(!1),2),i=c[0],w=c[1],j=_slicedToArray((0,b.Z)(!1),2),k=j[0],S=j[1];return v.createElement(v.Fragment,null,v.createElement(FormGroup,null,v.createElement(d.Z,{mb:"2x"},v.createElement(p.Z,null,"direction")),v.createElement(h.Z,{variant:"secondary",css:(0,l.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["column","column-reverse","row","row-reverse"].map(function(e){return v.createElement(x.Z,{key:e,selected:e===n,onClick:t(e),minWidth:"15x"},e)}))),v.createElement(FormGroup,null,v.createElement(d.Z,{mb:"2x"},v.createElement(p.Z,null,"flexWrap")),v.createElement(h.Z,{variant:"secondary",css:(0,l.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["nowrap","wrap","wrap-reverse"].map(function(e){return v.createElement(x.Z,{key:e,selected:e===o,onClick:a(e),minWidth:"15x"},e)}))),v.createElement(FormGroup,null,v.createElement(p.Z,null,v.createElement(s.Z,{alignItems:"center"},v.createElement(m.Z,{checked:i,onChange:function(){return w()}}),v.createElement(f.Z,{width:"2x"}),v.createElement(u.Z,{fontFamily:"mono",whiteSpace:"nowrap"},'gap="4x"'))),v.createElement(Note,{pl:"6x",pt:"1x"},"Set 'direction=\"row\"' and 'flexWrap=\"wrap\"' to see the gap between rows.")),v.createElement(FormGroup,null,v.createElement(p.Z,{display:"flex",alignItems:"center"},v.createElement(m.Z,{checked:k,onChange:function(){return S()}}),v.createElement(f.Z,{width:"2x"}),v.createElement(u.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"shouldWrapChildren"))),v.createElement(g.Z,{mb:"4x"}),v.createElement(y.Z,{direction:n,flexWrap:o,shouldWrapChildren:k,gap:i?"4x":void 0,spacing:"4x"},Array.from({length:10}).map(function(e,n){return v.createElement(Item,{key:n,width:150},"Stack Item ",n+1)})))};function _createMdxContent(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n",(0,r.jsx)(n.h1,{id:"stack",children:"Stack"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Stack"})," is a layout utility component that makes it easy to stack items together and apply a space between them."]}),"\n",(0,r.jsxs)(n.h2,{id:"import",children:["Import",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { Stack } from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"usage",children:["Usage",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Try resizing the browser window width as small as possible to see how ",(0,r.jsx)(n.code,{children:"Stack"})," adapts to the available space."]}),"\n",(0,r.jsx)(a.Z,{component:usage,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Divider,\n  Flex,\n  Space,\n  Stack,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React, { useState } from \'react\';\n\nconst Item = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n  const borderColor = colorMode === \'dark\' ? \'gray:70\' : \'gray:20\';\n  return (\n    <Flex\n      boxShadow={boxShadow}\n      border={1}\n      borderColor={borderColor}\n      alignItems="center"\n      justifyContent="center"\n      p="2x"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst Note = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <Text color={colorStyle.color.tertiary} {...props} />\n  );\n};\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [direction, changeDirectionBy] = useSelection(\'column\');\n  const [flexWrap, changeFlexWrapBy] = useSelection(\'nowrap\');\n  const [gap, toggleGap] = useToggle(false);\n  const [shouldWrapChildren, toggleShouldWrapChildren] = useToggle(false);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            direction\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'column\', \'column-reverse\', \'row\', \'row-reverse\'].map(value => (\n            <Button\n              key={value}\n              selected={value === direction}\n              onClick={changeDirectionBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            flexWrap\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'nowrap\', \'wrap\', \'wrap-reverse\'].map(value => (\n            <Button\n              key={value}\n              selected={value === flexWrap}\n              onClick={changeFlexWrapBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel>\n          <Flex alignItems="center">\n            <Checkbox\n              checked={gap}\n              onChange={() => toggleGap()}\n            />\n            <Space width="2x" />\n            <Text fontFamily="mono" whiteSpace="nowrap">\n              gap="4x"\n            </Text>\n          </Flex>\n        </TextLabel>\n        <Note pl="6x" pt="1x">\n          Set \'direction="row"\' and \'flexWrap="wrap"\' to see the gap between rows.\n        </Note>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={shouldWrapChildren}\n            onChange={() => toggleShouldWrapChildren()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">\n            shouldWrapChildren\n          </Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Stack\n        direction={direction}\n        flexWrap={flexWrap}\n        shouldWrapChildren={shouldWrapChildren}\n        gap={gap ? \'4x\' : undefined}\n        spacing="4x"\n      >\n        {Array.from({ length: 10 }).map((_, index) => (\n          <Item key={index} width={150}>\n            Stack Item {index + 1}\n          </Item>\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/stack/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Divider,\n  Flex,\n  Space,\n  Stack,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React, { useState } from \'react\';\n\nconst Item = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n  const borderColor = colorMode === \'dark\' ? \'gray:70\' : \'gray:20\';\n  return (\n    <Flex\n      boxShadow={boxShadow}\n      border={1}\n      borderColor={borderColor}\n      alignItems="center"\n      justifyContent="center"\n      p="2x"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst Note = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <Text color={colorStyle.color.tertiary} {...props} />\n  );\n};\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [direction, changeDirectionBy] = useSelection(\'column\');\n  const [flexWrap, changeFlexWrapBy] = useSelection(\'nowrap\');\n  const [gap, toggleGap] = useToggle(false);\n  const [shouldWrapChildren, toggleShouldWrapChildren] = useToggle(false);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            direction\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'column\', \'column-reverse\', \'row\', \'row-reverse\'].map(value => (\n            <Button\n              key={value}\n              selected={value === direction}\n              onClick={changeDirectionBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            flexWrap\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'nowrap\', \'wrap\', \'wrap-reverse\'].map(value => (\n            <Button\n              key={value}\n              selected={value === flexWrap}\n              onClick={changeFlexWrapBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel>\n          <Flex alignItems="center">\n            <Checkbox\n              checked={gap}\n              onChange={() => toggleGap()}\n            />\n            <Space width="2x" />\n            <Text fontFamily="mono" whiteSpace="nowrap">\n              gap="4x"\n            </Text>\n          </Flex>\n        </TextLabel>\n        <Note pl="6x" pt="1x">\n          Set \'direction="row"\' and \'flexWrap="wrap"\' to see the gap between rows.\n        </Note>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={shouldWrapChildren}\n            onChange={() => toggleShouldWrapChildren()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">\n            shouldWrapChildren\n          </Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Stack\n        direction={direction}\n        flexWrap={flexWrap}\n        shouldWrapChildren={shouldWrapChildren}\n        gap={gap ? \'4x\' : undefined}\n        spacing="4x"\n      >\n        {Array.from({ length: 10 }).map((_, index) => (\n          <Item key={index} width={150}>\n            Stack Item {index + 1}\n          </Item>\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(n.h2,{id:"props",children:["Props",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"stack-1",children:["Stack",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#stack-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"direction"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'column'"}),(0,r.jsxs)(n.td,{align:"left",children:["The shorthand of ",(0,r.jsx)(n.code,{children:"flexDirection"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"flexDirection"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'column'"}),(0,r.jsx)(n.td,{align:"left",children:"The direction to stack the items. One of: 'column', 'column-reverse', 'row', 'row-reverse'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"flexWrap"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"Whether to wrap the items. One of: 'nowrap' (default), 'wrap', 'wrap-reverse'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"gap"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Set the gap between rows and columns. It is useful when ",(0,r.jsx)(n.code,{children:"flexWrap"})," is set to 'wrap' or 'wrap-reverse'."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"shouldWrapChildren"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"false"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", each child will be wrapped in a ",(0,r.jsx)(n.code,{children:"Box"})," with ",(0,r.jsx)(n.code,{children:"display: inline-flex"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"spacing"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsx)(n.td,{align:"left",children:"The space between items based on the direction."})]})]})]})]})}var index_page=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},83449:function(e,n,t){"use strict";t.d(n,{Z:function(){return k}});var r=t(40596),o=t(49857),a=t(73645),l=t(82139),c=t(62368),i=t(62272),s=t(14594),d=t(65019),u=t(5632),p=t(2784),h=t(65245),x=t(82821),m=t(90622),f=t(52057),g=t(63651),y=t(95530),b=["size"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var v=(0,p.forwardRef)(function(e,n){var t=e.size,r=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,b);return p.createElement(y.Z,_extends({size:t,viewBox:"0 0 1024 1024"},r),p.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});v.displayName="CodeSandboxIcon";var w=t(94981);function _slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var a=[],l=!0,c=!1;try{for(o=o.call(e);!(l=(t=o.next()).done)&&(a.push(t.value),!n||a.length!==n);l=!0);}catch(e){c=!0,r=e}finally{try{l||null==o.return||o.return()}finally{if(c)throw r}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var j={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},Demo=function(e){var n=e.component,t=e.file,y=e.sandbox,b=(0,u.useRouter)(),k=_slicedToArray((0,p.useReducer)(function(e){return!e},!1),2),S=k[0],C=k[1],T=_slicedToArray((0,r.Z)(),1)[0],E={dark:m.y,light:m.q}[T],Z=_slicedToArray((0,d.Z)(!1),2),_=Z[0],B=Z[1],F=(0,x.Z)(null==t?void 0:t.data),W=F.onCopy,A=F.hasCopied,L=(0,p.useCallback)(function(){W()},[W]),G=(0,p.useCallback)(function(){(0,f.b)(y)},[y]),I=(0,p.useCallback)(function(){C(),B(!1)},[C,B]);return p.createElement(h.nu,{code:null==t?void 0:t.data,disabled:!0,language:"jsx",theme:E},p.createElement(o.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[T],p:"4x"},p.createElement(o.Z,{fontSize:"sm",lineHeight:"sm"},p.createElement(p.Fragment,{key:S},p.createElement(n,null)))),p.createElement(a.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},p.createElement(w.Z,{"data-track":_?"CodeBlock|hide_source|".concat((0,g.Z)({path:b.pathname})):"CodeBlock|show_source|".concat((0,g.Z)({path:b.pathname})),onClick:B},p.createElement(l.Z,{label:_?"Hide the source":"Show the source"},p.createElement(c.Z,{icon:"code"}))),p.createElement(w.Z,{"data-track":"CodeBlock|copy_source|".concat((0,g.Z)({path:b.pathname})),onClick:L},p.createElement(l.Z,{label:A?"Copied":"Copy the source"},p.createElement(c.Z,{icon:"file-copy-o"}))),p.createElement(w.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(b.pathname),onClick:G},p.createElement(l.Z,{label:"Edit in CodeSandbox"},p.createElement(v,null))),p.createElement(w.Z,{"data-track":"CodeBlock|reset|".concat(b.pathname),onClick:I},p.createElement(l.Z,{label:"Reset the demo"},p.createElement(c.Z,{icon:"redo"})))),p.createElement(i.Z,{in:_},p.createElement(s.Z,{in:_,unmountOnExit:!0},p.createElement(h.uz,{style:j}))))};Demo.displayName="Demo";var k=Demo},84174:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/stack",function(){return t(56654)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=84174)}),_N_E=e.O()}]);
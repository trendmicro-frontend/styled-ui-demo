(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[891],{79999:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return index_page}});var r=n(52322),a=n(45392),o=n(68314),i=n(6194),l=n(61619),c=n(62080),u=n(49857),d=n(2784);function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var GridItem=function(e){return d.createElement(i.Z,_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_template_areas=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)('"a a a" "b c c" "b c c"'))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r('"a a a" "b c c" "b c c"')}},d.createElement(u.Z,{fontFamily:"mono",py:"1x"},d.createElement(u.Z,null,'"a a a"'),d.createElement(u.Z,null,'"b c c"'),d.createElement(u.Z,null,'"b c c"'))),d.createElement(c.Z,{variant:"outline",onClick:function(){return r('"b b a" "b b c" "b b c"')}},d.createElement(u.Z,{fontFamily:"mono",py:"1x"},d.createElement(u.Z,null,'"b b a"'),d.createElement(u.Z,null,'"b b c"'),d.createElement(u.Z,null,'"b b c"'))),d.createElement(c.Z,{variant:"outline",onClick:function(){return r('"a a ." "a a ." ". b c"')}},d.createElement(u.Z,{fontFamily:"mono",py:"1x"},d.createElement(u.Z,null,'"a a ."'),d.createElement(u.Z,null,'"a a ."'),d.createElement(u.Z,null,'". b c"')))),d.createElement("pre",null,"<Grid templateAreas=".concat(JSON.stringify(n),">")),d.createElement(i.Z,{templateAreas:n,templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(GridItem,{area:"a",bg:"blue:50",borderColor:"blue:60"},"One (a)"),d.createElement(GridItem,{area:"b",bg:"red:50",borderColor:"red:60"},"Two (b)"),d.createElement(GridItem,{area:"c",bg:"teal:50",borderColor:"teal:60"},"Three (c)")))};function grid_template_columns_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_template_columns_extends(){return(grid_template_columns_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_template_columns_GridItem=function(e){return d.createElement(i.Z,grid_template_columns_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_template_columns=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("4rem 4rem"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_template_columns_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_template_columns_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("4rem 4rem")}},"4rem 4rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1fr 4rem")}},"1fr 4rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1fr auto")}},"1fr auto"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1fr 2fr")}},"1fr 2fr")),d.createElement("pre",null,'<Grid templateColumns="'.concat(n,'">')),d.createElement(i.Z,{templateColumns:n,gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_template_columns_GridItem,null,"One"),d.createElement(grid_template_columns_GridItem,null,"Two"),d.createElement(grid_template_columns_GridItem,null,"Three"),d.createElement(grid_template_columns_GridItem,null,"Four"),d.createElement(grid_template_columns_GridItem,null,"Five")))};function grid_template_rows_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_template_rows_extends(){return(grid_template_rows_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_template_rows_GridItem=function(e){return d.createElement(i.Z,grid_template_rows_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_template_rows=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("auto"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_template_rows_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_template_rows_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("auto")}},"auto"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("3rem 4rem 3rem")}},"3rem 4rem 3rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1fr 2fr 1fr")}},"1fr 2fr 1fr"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("3rem auto minmax(3rem, 4rem)")}},"3rem auto minmax(3rem, 4rem)")),d.createElement("pre",null,'<Grid templateRows="'.concat(n,'">')),d.createElement(i.Z,{templateRows:n,templateColumns:"1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_template_rows_GridItem,null,"One"),d.createElement(grid_template_rows_GridItem,null,"Two"),d.createElement(grid_template_rows_GridItem,null,"Three"),d.createElement(grid_template_rows_GridItem,null,"Four"),d.createElement(grid_template_rows_GridItem,null,"Five")))};function grid_auto_columns_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_auto_columns_extends(){return(grid_auto_columns_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_auto_columns_GridItem=function(e){return d.createElement(i.Z,grid_auto_columns_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_auto_columns=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("auto"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_auto_columns_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_auto_columns_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("auto")}},"auto"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1fr")}},"1fr"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("min-content")}},"min-content"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("minmax(3rem, auto)")}},"minmax(3rem, auto)")),d.createElement("pre",null,'<Grid autoColumns="'.concat(n,'">')),d.createElement(i.Z,{autoColumns:n,gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_auto_columns_GridItem,{column:"1/3"},"One"),d.createElement(grid_auto_columns_GridItem,{column:"2"},"Two"),d.createElement(grid_auto_columns_GridItem,null,"Three"),d.createElement(grid_auto_columns_GridItem,null,"Four"),d.createElement(grid_auto_columns_GridItem,null,"Five")))};function grid_auto_rows_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_auto_rows_extends(){return(grid_auto_rows_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_auto_rows_GridItem=function(e){return d.createElement(i.Z,grid_auto_rows_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_auto_rows=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("auto"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_auto_rows_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_auto_rows_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("auto")}},"auto"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("3rem")}},"3rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("min-content")}},"min-content"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("minmax(2rem, auto)")}},"minmax(2rem, auto)")),d.createElement("pre",null,'<Grid autoRows="'.concat(n,'">')),d.createElement(i.Z,{autoRows:n,templateColumns:"1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_auto_rows_GridItem,null,"One"),d.createElement(grid_auto_rows_GridItem,null,"Two"),d.createElement(grid_auto_rows_GridItem,null,"Three"),d.createElement(grid_auto_rows_GridItem,null,"Four"),d.createElement(grid_auto_rows_GridItem,null)))};function grid_auto_flow_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_auto_flow_extends(){return(grid_auto_flow_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_auto_flow_GridItem=function(e){return d.createElement(i.Z,grid_auto_flow_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_auto_flow=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("row"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_auto_flow_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_auto_flow_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("row")}},"row"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("column")}},"column"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("row dense")}},"row dense")),d.createElement("pre",null,'<Grid autoFlow="'.concat(n,'">')),d.createElement(i.Z,{autoFlow:n,templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_auto_flow_GridItem,{column:"auto/span 2"},"One"),d.createElement(grid_auto_flow_GridItem,{column:"auto/span 2"},"Two"),d.createElement(grid_auto_flow_GridItem,null,"Three"),d.createElement(grid_auto_flow_GridItem,null,"Four"),d.createElement(grid_auto_flow_GridItem,null,"Five")))};function grid_area_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_area_extends(){return(grid_area_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_area_GridItem=function(e){return d.createElement(i.Z,grid_area_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_area=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("a"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_area_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_area_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("a")}},"a"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("b")}},"b"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("c")}},"c"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("2 / 1 / 2 / 4")}},"2 / 1 / 2 / 4")),d.createElement(i.Z,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",templateAreas:'\n          "a a a"\n          "b c c"\n          "b c c"\n        ',gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_area_GridItem,{area:n},"Example")))};function grid_column_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_column_extends(){return(grid_column_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_column_GridItem=function(e){return d.createElement(i.Z,grid_column_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_column=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("1"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_column_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_column_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1")}},"1"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1 / 3")}},"1 / 3"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("2 / -1")}},"2 / -1"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1 / span 2")}},"1 / span 2")),d.createElement(i.Z,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1.5fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_column_GridItem,{column:n,bg:"blue:50",borderColor:"blue:60"},"One"),d.createElement(grid_column_GridItem,null,"Two"),d.createElement(grid_column_GridItem,null,"Three")))};function grid_row_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_row_extends(){return(grid_row_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_row_GridItem=function(e){return d.createElement(i.Z,grid_row_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_row=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("1"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_row_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_row_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1")}},"1"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1 / 3")}},"1 / 3"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("2 / -1")}},"2 / -1"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1 / span 2")}},"1 / span 2")),d.createElement(i.Z,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1.5fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},d.createElement(grid_row_GridItem,{row:n,bg:"blue:50",borderColor:"blue:60"},"One"),d.createElement(grid_row_GridItem,null,"Two"),d.createElement(grid_row_GridItem,null,"Three")))};function grid_column_gap_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_column_gap_extends(){return(grid_column_gap_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_column_gap_GridItem=function(e){return d.createElement(i.Z,grid_column_gap_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_column_gap=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("0"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_column_gap_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_column_gap_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("0")}},"0"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("10%")}},"10%"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("20px")}},"20px")),d.createElement("pre",null,'<Grid columnGap="'.concat(n,'">')),d.createElement(i.Z,{columnGap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},d.createElement(grid_column_gap_GridItem,null,"One"),d.createElement(grid_column_gap_GridItem,null,"Two"),d.createElement(grid_column_gap_GridItem,null,"Three"),d.createElement(grid_column_gap_GridItem,null,"Four"),d.createElement(grid_column_gap_GridItem,null,"Five")))};function grid_row_gap_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_row_gap_extends(){return(grid_row_gap_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_row_gap_GridItem=function(e){return d.createElement(i.Z,grid_row_gap_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_row_gap=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("0"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_row_gap_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_row_gap_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("0")}},"0"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("10%")}},"10%"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("20px")}},"20px")),d.createElement("pre",null,'<Grid rowGap="'.concat(n,'">')),d.createElement(i.Z,{rowGap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},d.createElement(grid_row_gap_GridItem,null,"One"),d.createElement(grid_row_gap_GridItem,null,"Two"),d.createElement(grid_row_gap_GridItem,null,"Three"),d.createElement(grid_row_gap_GridItem,null,"Four"),d.createElement(grid_row_gap_GridItem,null,"Five")))};function grid_gap_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function grid_gap_extends(){return(grid_gap_extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var grid_gap_GridItem=function(e){return d.createElement(i.Z,grid_gap_extends({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},grid_gap=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,d.useState)("0"))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,2)||function(e,t){if(e){if("string"==typeof e)return grid_gap_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return grid_gap_arrayLikeToArray(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return d.createElement(d.Fragment,null,d.createElement(l.Z,{direction:"row",spacing:"2x",mb:"4x"},d.createElement(c.Z,{variant:"outline",onClick:function(){return r("0")}},"0"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("10%")}},"10%"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("10px 20px")}},"10px 20px"),d.createElement(c.Z,{variant:"outline",onClick:function(){return r("calc(20px + 10%)")}},"calc(20px + 10%)")),d.createElement("pre",null,'<Grid gap="'.concat(n,'">')),d.createElement(i.Z,{gap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},d.createElement(grid_gap_GridItem,null,"One"),d.createElement(grid_gap_GridItem,null,"Two"),d.createElement(grid_gap_GridItem,null,"Three"),d.createElement(grid_gap_GridItem,null,"Four"),d.createElement(grid_gap_GridItem,null,"Five")))};function _createMdxContent(e){var t=Object.assign({div:"div",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",svg:"svg",use:"use",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3"},(0,a.ah)(),e.components);return(0,r.jsxs)(t.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,r.jsx)(t.h1,{id:"grid",children:"Grid"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Grid"})," is a ",(0,r.jsx)(t.a,{href:"box",children:(0,r.jsx)(t.code,{children:"Box"})})," with ",(0,r.jsx)(t.code,{children:"display: grid"})," and comes with helpful style shorthand props."]}),"\n",(0,r.jsxs)(t.h2,{id:"import",children:["Import",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { Grid } from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"usage",children:["Usage",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Grid provides the following style shorthand props:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{align:"left",children:"Shorthand Prop"}),(0,r.jsx)(t.th,{align:"left",children:"Style Prop"}),(0,r.jsx)(t.th,{align:"left",children:"CSS Property"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"gap"}),(0,r.jsx)(t.td,{align:"left",children:"gridGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/gap",children:"grid-gap"})}),(0,r.jsxs)(t.td,{children:["Sets the gaps (gutters) between rows and columns. It is a shorthand for ",(0,r.jsx)(t.code,{children:"row-gap"})," and ",(0,r.jsx)(t.code,{children:"column-gap"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"rowGap"}),(0,r.jsx)(t.td,{align:"left",children:"gridRowGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap",children:"grid-row-gap"})}),(0,r.jsx)(t.td,{children:"Sets the size of the gap (gutter) between an element's grid rows."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"columnGap"}),(0,r.jsx)(t.td,{align:"left",children:"gridColumnGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap",children:"grid-column-gap"})}),(0,r.jsx)(t.td,{children:"Sets the size of the gap (gutter) between an element's columns."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"row"}),(0,r.jsx)(t.td,{align:"left",children:"gridRow"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row",children:"grid-row"})}),(0,r.jsxs)(t.td,{children:["a shorthand property for ",(0,r.jsx)(t.code,{children:"grid-row-start"})," and ",(0,r.jsx)(t.code,{children:"grid-row-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"column"}),(0,r.jsx)(t.td,{align:"left",children:"gridColumn"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",children:"grid-column"})}),(0,r.jsxs)(t.td,{children:["A shorthand property for ",(0,r.jsx)(t.code,{children:"grid-column-start"})," and ",(0,r.jsx)(t.code,{children:"grid-column-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"area"}),(0,r.jsx)(t.td,{align:"left",children:"gridArea"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area",children:"grid-area"})}),(0,r.jsxs)(t.td,{children:["A shorthand property for ",(0,r.jsx)(t.code,{children:"grid-row-start"}),", ",(0,r.jsx)(t.code,{children:"grid-column-start"}),", ",(0,r.jsx)(t.code,{children:"grid-row-end"})," and ",(0,r.jsx)(t.code,{children:"grid-column-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoFlow"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoFlow"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow",children:"grid-auto-flow"})}),(0,r.jsx)(t.td,{children:"Controls how the auto-placement algorithm works."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoRows"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoRows"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows",children:"grid-auto-rows"})}),(0,r.jsx)(t.td,{children:"Specifies the size of an implicitly-created grid row track or pattern of tracks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoColumns"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoColumns"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-columns",children:"grid-auto-columns"})}),(0,r.jsx)(t.td,{children:"Specifies the size of an implicitly-created grid column track or pattern of tracks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateRows"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateRows"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows",children:"grid-template-rows"})}),(0,r.jsx)(t.td,{children:"Defines the line names and track sizing functions of the grid rows."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateColumns"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateColumns"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns",children:"grid-template-columns"})}),(0,r.jsx)(t.td,{children:"Defines the line names and track sizing functions of the grid columns."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateAreas"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateAreas"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas",children:"grid-template-areas"})}),(0,r.jsx)(t.td,{children:"Specifies named grid areas."})]})]})]}),"\n",(0,r.jsxs)(t.h3,{id:"the-gap-gridgap-property",children:["The ",(0,r.jsx)(t.code,{children:"gap"})," (",(0,r.jsx)(t.code,{children:"gridGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-gap-gridgap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_gap,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'10px 20px\')}>10px 20px</Button>\n        <Button variant="outline" onClick={() => setValue(\'calc(20px + 10%)\')}>calc(20px + 10%)</Button>\n      </Stack>\n      <pre>\n        {`<Grid gap="${value}">`}\n      </pre>\n      <Grid\n        gap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'10px 20px\')}>10px 20px</Button>\n        <Button variant="outline" onClick={() => setValue(\'calc(20px + 10%)\')}>calc(20px + 10%)</Button>\n      </Stack>\n      <pre>\n        {`<Grid gap="${value}">`}\n      </pre>\n      <Grid\n        gap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-rowgap-gridrowgap-property",children:["The ",(0,r.jsx)(t.code,{children:"rowGap"})," (",(0,r.jsx)(t.code,{children:"gridRowGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-rowgap-gridrowgap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_row_gap,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid rowGap="${value}">`}\n      </pre>\n      <Grid\n        rowGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid rowGap="${value}">`}\n      </pre>\n      <Grid\n        rowGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-columngap-gridcolumngap-property",children:["The ",(0,r.jsx)(t.code,{children:"columnGap"})," (",(0,r.jsx)(t.code,{children:"gridColumnGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-columngap-gridcolumngap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_column_gap,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid columnGap="${value}">`}\n      </pre>\n      <Grid\n        columnGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid columnGap="${value}">`}\n      </pre>\n      <Grid\n        columnGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-row-gridrow-property",children:["The ",(0,r.jsx)(t.code,{children:"row"})," (",(0,r.jsx)(t.code,{children:"gridRow"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-row-gridrow-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_row,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem row={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem row={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-column-gridcolumn-property",children:["The ",(0,r.jsx)(t.code,{children:"column"})," (",(0,r.jsx)(t.code,{children:"gridColumn"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-column-gridcolumn-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_column,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-area-gridarea-property",children:["The ",(0,r.jsx)(t.code,{children:"area"})," (",(0,r.jsx)(t.code,{children:"gridArea"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-area-gridarea-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_area,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'a\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'a\')}>a</Button>\n        <Button variant="outline" onClick={() => setValue(\'b\')}>b</Button>\n        <Button variant="outline" onClick={() => setValue(\'c\')}>c</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / 1 / 2 / 4\')}>2 / 1 / 2 / 4</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        templateAreas={`\n          "a a a"\n          "b c c"\n          "b c c"\n        `}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area={value}>Example</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'a\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'a\')}>a</Button>\n        <Button variant="outline" onClick={() => setValue(\'b\')}>b</Button>\n        <Button variant="outline" onClick={() => setValue(\'c\')}>c</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / 1 / 2 / 4\')}>2 / 1 / 2 / 4</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        templateAreas={`\n          "a a a"\n          "b c c"\n          "b c c"\n        `}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area={value}>Example</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-autoflow-gridautoflow-property",children:["The ",(0,r.jsx)(t.code,{children:"autoFlow"})," (",(0,r.jsx)(t.code,{children:"gridAutoFlow"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autoflow-gridautoflow-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_auto_flow,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'row\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'row\')}>row</Button>\n        <Button variant="outline" onClick={() => setValue(\'column\')}>column</Button>\n        <Button variant="outline" onClick={() => setValue(\'row dense\')}>row dense</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoFlow="${value}">`}\n      </pre>\n      <Grid\n        autoFlow={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="auto/span 2">One</GridItem>\n        <GridItem column="auto/span 2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'row\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'row\')}>row</Button>\n        <Button variant="outline" onClick={() => setValue(\'column\')}>column</Button>\n        <Button variant="outline" onClick={() => setValue(\'row dense\')}>row dense</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoFlow="${value}">`}\n      </pre>\n      <Grid\n        autoFlow={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="auto/span 2">One</GridItem>\n        <GridItem column="auto/span 2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-autorows-gridautorows-property",children:["The ",(0,r.jsx)(t.code,{children:"autoRows"})," (",(0,r.jsx)(t.code,{children:"gridAutoRows"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autorows-gridautorows-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_auto_rows,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem\')}>3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(2rem, auto)\')}>minmax(2rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoRows="${value}">`}\n      </pre>\n      <Grid\n        autoRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem></GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem\')}>3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(2rem, auto)\')}>minmax(2rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoRows="${value}">`}\n      </pre>\n      <Grid\n        autoRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem></GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-autocolumns-gridautocolumns-property",children:["The ",(0,r.jsx)(t.code,{children:"autoColumns"})," (",(0,r.jsx)(t.code,{children:"gridAutoColumns"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autocolumns-gridautocolumns-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_auto_columns,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr\')}>1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(3rem, auto)\')}>minmax(3rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoColumns="${value}">`}\n      </pre>\n      <Grid\n        autoColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="1/3">One</GridItem>\n        <GridItem column="2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr\')}>1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(3rem, auto)\')}>minmax(3rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoColumns="${value}">`}\n      </pre>\n      <Grid\n        autoColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="1/3">One</GridItem>\n        <GridItem column="2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-templaterows-gridtemplaterows-property",children:["The ",(0,r.jsx)(t.code,{children:"templateRows"})," (",(0,r.jsx)(t.code,{children:"gridTemplateRows"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templaterows-gridtemplaterows-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_template_rows,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem 4rem 3rem\')}>3rem 4rem 3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr 1fr\')}>1fr 2fr 1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem auto minmax(3rem, 4rem)\')}>3rem auto minmax(3rem, 4rem)</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateRows="${value}">`}\n      </pre>\n      <Grid\n        templateRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem 4rem 3rem\')}>3rem 4rem 3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr 1fr\')}>1fr 2fr 1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem auto minmax(3rem, 4rem)\')}>3rem auto minmax(3rem, 4rem)</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateRows="${value}">`}\n      </pre>\n      <Grid\n        templateRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-templatecolumns-gridtemplatecolumns-property",children:["The ",(0,r.jsx)(t.code,{children:"templateColumns"})," (",(0,r.jsx)(t.code,{children:"gridTemplateColumns"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templatecolumns-gridtemplatecolumns-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_template_columns,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'4rem 4rem\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'4rem 4rem\')}>4rem 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 4rem\')}>1fr 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr auto\')}>1fr auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr\')}>1fr 2fr</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateColumns="${value}">`}\n      </pre>\n      <Grid\n        templateColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'4rem 4rem\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'4rem 4rem\')}>4rem 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 4rem\')}>1fr 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr auto\')}>1fr auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr\')}>1fr 2fr</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateColumns="${value}">`}\n      </pre>\n      <Grid\n        templateColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h3,{id:"the-templateareas-gridtemplateareas-property",children:["The ",(0,r.jsx)(t.code,{children:"templateAreas"})," (",(0,r.jsx)(t.code,{children:"gridTemplateAreas"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templateareas-gridtemplateareas-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(o.Z,Object.assign({},{component:grid_template_areas,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Box, Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'"a a a" "b c c" "b c c"\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'"a a a" "b c c" "b c c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a a"</Box>\n            <Box>"b c c"</Box>\n            <Box>"b c c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"b b a" "b b c" "b b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"b b a"</Box>\n            <Box>"b b c"</Box>\n            <Box>"b b c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"a a ." "a a ." ". b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a ."</Box>\n            <Box>"a a ."</Box>\n            <Box>". b c"</Box>\n          </Box>\n        </Button>\n      </Stack>\n      <pre>\n        {`<Grid templateAreas=${JSON.stringify(value)}>`}\n      </pre>\n      <Grid\n        templateAreas={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area="a" bg="blue:50" borderColor="blue:60">One (a)</GridItem>\n        <GridItem area="b" bg="red:50" borderColor="red:60">Two (b)</GridItem>\n        <GridItem area="c" bg="teal:50" borderColor="teal:60">Three (c)</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Box, Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'"a a a" "b c c" "b c c"\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'"a a a" "b c c" "b c c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a a"</Box>\n            <Box>"b c c"</Box>\n            <Box>"b c c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"b b a" "b b c" "b b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"b b a"</Box>\n            <Box>"b b c"</Box>\n            <Box>"b b c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"a a ." "a a ." ". b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a ."</Box>\n            <Box>"a a ."</Box>\n            <Box>". b c"</Box>\n          </Box>\n        </Button>\n      </Stack>\n      <pre>\n        {`<Grid templateAreas=${JSON.stringify(value)}>`}\n      </pre>\n      <Grid\n        templateAreas={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area="a" bg="blue:50" borderColor="blue:60">One (a)</GridItem>\n        <GridItem area="b" bg="red:50" borderColor="red:60">Two (b)</GridItem>\n        <GridItem area="c" bg="teal:50" borderColor="teal:60">Three (c)</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(t.h2,{id:"props",children:["Props",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(t.h3,{id:"grid-1",children:["Grid",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#grid-1",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{align:"left",children:"Name"}),(0,r.jsx)(t.th,{align:"left",children:"Type"}),(0,r.jsx)(t.th,{align:"left",children:"Default"}),(0,r.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"children"}),(0,r.jsx)(t.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsx)(t.td,{align:"left"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"gap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridGap"})," property that sets the gaps (gutters) between rows and columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"rowGap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridRowGap"})," property that sets the size of the gap (gutter) between an element's grid rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"columnGap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridColumnGap"})," property that sets the size of the gap (gutter) between an element's columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"row"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridRow"})," property that specifies the grid items' location in terms of the grid's rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"column"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridColumn"})," property that specifies the grid items' location in terms of the grid's columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"area"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridArea"})," property that specifies a grid item's size and location within the grid by referencing a named grid area."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoFlow"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoFlow"})," property that controls how the auto-placement algorithm works."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoRows"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoRows"})," property that specifies the size of an implicitly-created grid row track or pattern of tracks."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoColumns"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoColumns"})," property that specifies the size of an implicitly-created grid column track or pattern of tracks."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateRows"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateRows"})," property that defines the line names and track sizing functions of the grid rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateColumns"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateColumns"})," property that defines the line names and track sizing functions of the grid columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateAreas"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateAreas"})," property that specifies named grid areas."]})]})]})]})]})}var index_page=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,a.ah)(),e.components).wrapper;return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},68314:function(e,t,n){"use strict";n.d(t,{Z:function(){return j}});var r=n(27216),a=n(40596),o=n(49857),i=n(73645),l=n(99870),c=n(62272),u=n(14594),d=n(65019),s=n(37384),m=n(99554),p=n(69111),g=n(5632),f=n(2784),h=n(65245);function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var copyToClipboard=function(e){var t=document.createElement("textarea");t.value=e,t.setAttribute("readonly",""),t.style.position="absolute",t.style.left="-9999px",document.body.appendChild(t);var n=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);t.select(),document.execCommand("copy"),document.body.removeChild(t),n&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(n))},hooks_useClipboard=function(e){var t,n=function(e){if(Array.isArray(e))return e}(t=(0,f.useState)(!1))||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(t,2)||function(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(e,t)}}(t,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=n[0],a=n[1];return{value:e,onCopy:function(){copyToClipboard(e),a(!0),setTimeout(function(){return a(!1)},1500)},hasCopied:r}},x=n(5198),b=n(90622),y=n(52057),v=n(63651),G=n(94981),_=["component","defaultExpanded","expanded","file","sandbox"];function Demo_slicedToArray(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o=[],i=!0,l=!1;try{for(a=a.call(e);!(i=(n=a.next()).done)&&(o.push(n.value),!t||o.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==a.return||a.return()}finally{if(l)throw r}}return o}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Demo_arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Demo_arrayLikeToArray(e,t)}}(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Demo_arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Demo=function(e){var t,n=e.component,j=e.defaultExpanded,w=void 0!==j&&j,I=e.expanded,k=e.file,C=e.sandbox;!function(e,t){if(null!=e){var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}}}(e,_);var B=(0,g.useRouter)(),S=Demo_slicedToArray((0,f.useReducer)(function(e){return!e},!1),2),A=S[0],E=S[1],T=(0,r.u)(),Z=Demo_slicedToArray((0,a.Z)(),1)[0],O={dark:b.y,light:b.q}[Z],V=Demo_slicedToArray((0,d.Z)(null!=I?I:w),2),R=V[0],F=V[1],L=hooks_useClipboard(null==k?void 0:k.data),U=L.onCopy,z=L.hasCopied,$=(0,f.useCallback)(function(){U()},[U]),N=(0,f.useCallback)(function(){(0,y.b)(C)},[C]),M=(0,f.useCallback)(function(){E(),F(!1)},[E,F]);return((0,f.useEffect)(function(){void 0!==I&&I!==R&&F(I)},[I,R,F]),n)?f.createElement(h.nu,{code:null==k?void 0:k.data,disabled:!0,language:"jsx",theme:O},f.createElement(o.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[Z],p:"4x"},f.createElement(o.Z,{fontSize:"sm",lineHeight:"sm"},f.createElement(f.Fragment,{key:A},f.createElement(n,null)))),f.createElement(i.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},f.createElement(G.Z,{"data-track":R?"CodeBlock|hide_source|".concat((0,v.Z)({path:B.pathname})):"CodeBlock|show_source|".concat((0,v.Z)({path:B.pathname})),onClick:F},f.createElement(l.Z,{label:R?"Hide the source":"Show the source"},f.createElement(s.Z,null))),f.createElement(G.Z,{"data-track":"CodeBlock|copy_source|".concat((0,v.Z)({path:B.pathname})),onClick:$},f.createElement(l.Z,{label:z?"Copied":"Copy the source"},f.createElement(m.Z,null))),f.createElement(G.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(B.pathname),onClick:N},f.createElement(l.Z,{label:"Edit in CodeSandbox"},f.createElement(x.Z,null))),f.createElement(G.Z,{"data-track":"CodeBlock|reset|".concat(B.pathname),onClick:M},f.createElement(l.Z,{label:"Reset the demo"},f.createElement(p.Z,null)))),f.createElement(c.Z,{in:R},f.createElement(u.Z,{in:R,unmountOnExit:!0},f.createElement(o.Z,{as:h.uz,sx:{fontFamily:"mono",fontSize:"md",lineHeight:"md",mb:"4x","& > .prism-code":{padding:"".concat(null==T?void 0:null===(t=T.space)||void 0===t?void 0:t["4x"]," !important"),overflowX:"auto"}}})))):f.createElement(h.nu,{code:null==k?void 0:k.data,disabled:!0,language:"jsx",theme:O},f.createElement(o.Z,{as:h.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))};Demo.displayName="Demo";var j=Demo},43096:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/grid",function(){return n(79999)}])},99554:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}}),n(2784);var r=n(75928),a=n(52903),o=(0,r.Z)((0,a.tZ)("path",{d:"M12 0h-6c-0.5 0-1 0.5-1 1v3h-3c-0.5 0-1 0.5-1 1v10c0 0.5 0.5 1 1 1h8c0.5 0 1-0.5 1-1v-3h3c0.5 0 1-0.5 1-1v-8l-3-3zM12 1.4l1.6 1.6h-1.6v-1.6zM10 15h-8v-10h5v3h3v7zM8 7v-1.6l1.6 1.6h-1.6zM14 11h-3v-4l-3-3h-2v-3h5v3h3v7z"}),"FileCopyOIcon")},69111:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}}),n(2784);var r=n(75928),a=n(52903),o=(0,r.Z)((0,a.tZ)("path",{d:"M10 7l1.995-1.995c-0.921-1.215-2.365-1.992-3.99-1.992-2.758 0-4.993 2.235-4.993 4.993s2.235 4.993 4.993 4.993c1.839 0 3.446-0.995 4.313-2.475l0.013-0.024 1.732 1c-1.233 2.111-3.487 3.507-6.068 3.507-3.867 0-7.003-3.135-7.003-7.003s3.135-7.003 7.003-7.003c2.183 0 4.133 0.999 5.417 2.565l0.010 0.012 1.579-1.579v5z"}),"RedoIcon")},6194:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var r=n(53860),a=n(2784),o=n(52903),i=n(49857),l=["gap","rowGap","columnGap","column","row","area","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas"],c=(0,a.forwardRef)(function(e,t){var n=e.gap,a=e.rowGap,c=e.columnGap,u=e.column,d=e.row,s=e.area,m=e.autoFlow,p=e.autoRows,g=e.autoColumns,f=e.templateRows,h=e.templateColumns,x=e.templateAreas,b=(0,r.Kd)(e,l);return(0,o.tZ)(i.Z,(0,r.Zj)({ref:t,display:"grid",gridGap:n,gridRowGap:a,gridColumnGap:c,gridColumn:u,gridRow:d,gridArea:s,gridAutoFlow:m,gridAutoRows:p,gridAutoColumns:g,gridTemplateRows:f,gridTemplateColumns:h,gridTemplateAreas:x},b))});c.displayName="Grid";var u=c}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=43096)}),_N_E=e.O()}]);
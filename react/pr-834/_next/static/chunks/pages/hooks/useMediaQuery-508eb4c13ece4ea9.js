(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8372],{50710:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return useMediaQuery_page}});var l=a(52322),t=a(45392),r=a(83449),o=a(30514),i=a(75715),s=a(98306),c=a(24909),d=a(63433),h=a(58614),u=a(17179),m=a(46943),T=a(59123),b=a(2784),hooks_useMediaQuery=function(){var x=function(e){return JSON.stringify(e)},e=(0,T.Z)("(prefers-color-scheme: dark)"),n=(0,T.Z)("(min-width: 320px)"),a=(0,T.Z)("(min-width: 640px)"),l=(0,T.Z)("(min-width: 1024px)"),t=(0,T.Z)("(min-width: 1280px)"),r=(0,T.Z)("(min-width: 1680px)");return b.createElement(o.Z,null,b.createElement(i.Z,null,b.createElement(s.Z,null,b.createElement(c.Z,{width:240},"Media Query"),b.createElement(c.Z,null,"Match Result"))),b.createElement(d.Z,null,b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(prefers-color-scheme: dark)")),b.createElement(u.Z,null,x(e))),b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(min-width:320px)")),b.createElement(u.Z,null,x(n))),b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(min-width:640px)")),b.createElement(u.Z,null,x(a))),b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(min-width:1024px)")),b.createElement(u.Z,null,x(l))),b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(min-width:1280px)")),b.createElement(u.Z,null,x(t))),b.createElement(h.Z,null,b.createElement(u.Z,{width:240},b.createElement(m.Z,{fontFamily:"mono"},"(min-width:1680px)")),b.createElement(u.Z,null,x(r)))))};function _createMdxContent(e){var n=Object.assign({div:"div",h1:"h1",p:"p",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),e.components);return(0,l.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n",(0,l.jsx)(n.h1,{id:"usemediaquery",children:"useMediaQuery"}),"\n",(0,l.jsx)(n.p,{children:"A cusom Hook that listens for matches to a CSS media query. It allows the rendering of components based on whether the media query matches or not."}),"\n",(0,l.jsxs)(n.h2,{id:"import",children:["Import",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"import { useMediaQuery } from '@tonic-ui/react-hooks';\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"usage",children:["Usage",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const isMatched = useMediaQuery(query, defaultValue);\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"parameters",children:["Parameters",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#parameters",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{align:"left",children:"Name"}),(0,l.jsx)(n.th,{align:"left",children:"Type"}),(0,l.jsx)(n.th,{align:"left",children:"Default"}),(0,l.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{align:"left",children:"query"}),(0,l.jsx)(n.td,{align:"left",children:"string"}),(0,l.jsx)(n.td,{align:"left"}),(0,l.jsx)(n.td,{align:"left",children:"The media query to match against."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{align:"left",children:"defaultValue"}),(0,l.jsx)(n.td,{align:"left",children:"boolean"}),(0,l.jsx)(n.td,{align:"left",children:"false"}),(0,l.jsx)(n.td,{align:"left",children:"The default value to return if the media query is not matched."})]})]})]}),"\n",(0,l.jsxs)(n.h3,{id:"returns",children:["Returns",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#returns",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(n.p,{children:"Returns a boolean value indicating whether the media query matches or not."}),"\n",(0,l.jsxs)(n.h2,{id:"demos",children:["Demos",(0,l.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#demos",children:(0,l.jsx)(n.svg,{children:(0,l.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,l.jsx)(r.Z,{component:hooks_useMediaQuery,file:{data:"import { Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableHeaderRow, TableRow, Tag } from '@tonic-ui/react';\nimport { useMediaQuery } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const x = (value) => JSON.stringify(value);\n  const isDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const notLessThan320 = useMediaQuery('(min-width: 320px)');\n  const notLessThan640 = useMediaQuery('(min-width: 640px)');\n  const notLessThan1024 = useMediaQuery('(min-width: 1024px)');\n  const notLessThan1280 = useMediaQuery('(min-width: 1280px)');\n  const notLessThan1680 = useMediaQuery('(min-width: 1680px)');\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableHeaderRow>\n          <TableHeaderCell width={240}>\n            Media Query\n          </TableHeaderCell>\n          <TableHeaderCell>\n            Match Result\n          </TableHeaderCell>\n        </TableHeaderRow>\n      </TableHeader>\n      <TableBody>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(prefers-color-scheme: dark)</Tag>\n          </TableCell>\n          <TableCell>{x(isDarkMode)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:320px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan320)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:640px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan640)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1024px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1024)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1280px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1280)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1680px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1680)}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default App;",path:"pages/hooks/useMediaQuery.page.mdx"},sandbox:{files:{},raw:"import { Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableHeaderRow, TableRow, Tag } from '@tonic-ui/react';\nimport { useMediaQuery } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const x = (value) => JSON.stringify(value);\n  const isDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const notLessThan320 = useMediaQuery('(min-width: 320px)');\n  const notLessThan640 = useMediaQuery('(min-width: 640px)');\n  const notLessThan1024 = useMediaQuery('(min-width: 1024px)');\n  const notLessThan1280 = useMediaQuery('(min-width: 1280px)');\n  const notLessThan1680 = useMediaQuery('(min-width: 1680px)');\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableHeaderRow>\n          <TableHeaderCell width={240}>\n            Media Query\n          </TableHeaderCell>\n          <TableHeaderCell>\n            Match Result\n          </TableHeaderCell>\n        </TableHeaderRow>\n      </TableHeader>\n      <TableBody>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(prefers-color-scheme: dark)</Tag>\n          </TableCell>\n          <TableCell>{x(isDarkMode)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:320px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan320)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:640px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan640)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1024px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1024)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1280px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1280)}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell width={240}>\n            <Tag fontFamily=\"mono\">(min-width:1680px)</Tag>\n          </TableCell>\n          <TableCell>{x(notLessThan1680)}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})]})}var useMediaQuery_page=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,t.ah)(),e.components).wrapper;return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},83449:function(e,n,a){"use strict";a.d(n,{Z:function(){return E}});var l=a(40596),t=a(49857),r=a(73645),o=a(82139),i=a(62368),s=a(62272),c=a(14594),d=a(65019),h=a(5632),u=a(2784),m=a(65245),T=a(82821),b=a(90622),f=a(52057),p=a(63651),y=a(95530),w=["size"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var l in a)Object.prototype.hasOwnProperty.call(a,l)&&(e[l]=a[l])}return e}).apply(this,arguments)}var g=(0,u.forwardRef)(function(e,n){var a=e.size,l=function(e,n){if(null==e)return{};var a,l,t=function(e,n){if(null==e)return{};var a,l,t={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],!(n.indexOf(a)>=0)&&Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}(e,w);return u.createElement(y.Z,_extends({size:a,viewBox:"0 0 1024 1024"},l),u.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});g.displayName="CodeSandboxIcon";var C=a(94981);function _slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var a,l,t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r=[],o=!0,i=!1;try{for(t=t.call(e);!(o=(a=t.next()).done)&&(r.push(a.value),!n||r.length!==n);o=!0);}catch(e){i=!0,l=e}finally{try{o||null==t.return||t.return()}finally{if(i)throw l}}return r}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var a=Object.prototype.toString.call(e).slice(8,-1);if("Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a)return Array.from(e);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return _arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var a=0,l=Array(n);a<n;a++)l[a]=e[a];return l}var j={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},Demo=function(e){var n=e.component,a=e.file,y=e.sandbox,w=(0,h.useRouter)(),E=_slicedToArray((0,u.useReducer)(function(e){return!e},!1),2),Z=E[0],k=E[1],v=_slicedToArray((0,l.Z)(),1)[0],M={dark:b.y,light:b.q}[v],R=_slicedToArray((0,d.Z)(!1),2),_=R[0],L=R[1],H=(0,T.Z)(null==a?void 0:a.data),Q=H.onCopy,O=H.hasCopied,F=(0,u.useCallback)(function(){Q()},[Q]),S=(0,u.useCallback)(function(){(0,f.b)(y)},[y]),N=(0,u.useCallback)(function(){k(),L(!1)},[k,L]);return u.createElement(m.nu,{code:null==a?void 0:a.data,disabled:!0,language:"jsx",theme:M},u.createElement(t.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[v],p:"4x"},u.createElement(t.Z,{fontSize:"sm",lineHeight:"sm"},u.createElement(u.Fragment,{key:Z},u.createElement(n,null)))),u.createElement(r.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},u.createElement(C.Z,{"data-track":_?"CodeBlock|hide_source|".concat((0,p.Z)({path:w.pathname})):"CodeBlock|show_source|".concat((0,p.Z)({path:w.pathname})),onClick:L},u.createElement(o.Z,{label:_?"Hide the source":"Show the source"},u.createElement(i.Z,{icon:"code"}))),u.createElement(C.Z,{"data-track":"CodeBlock|copy_source|".concat((0,p.Z)({path:w.pathname})),onClick:F},u.createElement(o.Z,{label:O?"Copied":"Copy the source"},u.createElement(i.Z,{icon:"file-copy-o"}))),u.createElement(C.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(w.pathname),onClick:S},u.createElement(o.Z,{label:"Edit in CodeSandbox"},u.createElement(g,null))),u.createElement(C.Z,{"data-track":"CodeBlock|reset|".concat(w.pathname),onClick:N},u.createElement(o.Z,{label:"Reset the demo"},u.createElement(i.Z,{icon:"redo"})))),u.createElement(s.Z,{in:_},u.createElement(c.Z,{in:_,unmountOnExit:!0},u.createElement(m.uz,{style:j}))))};Demo.displayName="Demo";var E=Demo},31622:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useMediaQuery",function(){return a(50710)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=31622)}),_N_E=e.O()}]);
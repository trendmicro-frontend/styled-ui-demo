(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5217],{16306:function(e,t,l){"use strict";l.r(t);var n=l(52322),i=l(45392);function s(e){var t=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,i.ah)(),e.components);return(0,n.jsxs)(t.div,{className:"main-content",id:"main-content",children:[(0,n.jsx)(t.h1,{id:"overflowtooltip",children:"OverflowTooltip"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"OverflowTooltip"})," component is a tooltip that only displays when text overflows its container."]}),"\n",(0,n.jsxs)(t.h2,{id:"import",children:["Import",(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import { OverflowTooltip } from '@tonic-ui/react';\n"})}),"\n",(0,n.jsxs)(t.h2,{id:"usage",children:["Usage",(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsx)(t.p,{children:"If the text overflows its container, it will be truncated, and an ellipsis will be added. When you hover or focus on the ellipsis text, a tooltip will appear."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:'<OverflowTooltip\n  label="This is a tooltip"\n>\n  This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n</OverflowTooltip>\n'})}),"\n",(0,n.jsxs)(t.p,{children:["In the second example, a function is passed as a child of the ",(0,n.jsx)(t.code,{children:"OverflowTooltip"})," component. The function is called with an object containing a ",(0,n.jsx)(t.code,{children:"ref"})," and a ",(0,n.jsx)(t.code,{children:"style"})," property, which should be spread to the element that needs to be truncated. In this case, a ",(0,n.jsx)(t.code,{children:"Text"})," component is used to display the text, and the ",(0,n.jsx)(t.code,{children:"ref"})," and ",(0,n.jsx)(t.code,{children:"style"})," props are spread to it. This allows the ",(0,n.jsx)(t.code,{children:"OverflowTooltip"})," component to detect when the text overflows and display a tooltip."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:'<OverflowTooltip\n  label="This is a tooltip"\n>\n  {({ ref, style }) => (\n    <Flex alignItems="center" columnGap="2x">\n      <Icon icon="menu" />\n      <Text ref={ref} {...style}>\n        This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n      </Text>\n    </Flex>\n  )}\n</OverflowTooltip>\n'})}),"\n",(0,n.jsxs)(t.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsxs)(t.h3,{id:"preventing-tooltip-cut-off-with-popperprops",children:["Preventing tooltip cut-off with ",(0,n.jsx)(t.code,{children:"PopperProps"}),(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#preventing-tooltip-cut-off-with-popperprops",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsxs)(t.p,{children:["By default, the ",(0,n.jsx)(t.code,{children:"OverflowTooltip"})," component positions the tooltip relative to its parent container. In some cases, the tooltip content might be cut off when it extends outside the container that holds it."]}),"\n",(0,n.jsxs)(t.p,{children:["To mitigate this issue, you can pass ",(0,n.jsx)(t.code,{children:"PopperProps={{ usePortal: true }}"})," to ",(0,n.jsx)(t.code,{children:"OverflowTooltip"})," to make it positioned on the document root."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:'<OverflowTooltip\n  PopperProps={{ usePortal: true }}\n  label="This is a tooltip"\n>\n  This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n</OverflowTooltip>\n'})}),"\n",(0,n.jsxs)(t.h2,{id:"props",children:["Props",(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsxs)(t.h3,{id:"overflowtooltip-1",children:["OverflowTooltip",(0,n.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overflowtooltip-1",children:(0,n.jsx)(t.svg,{children:(0,n.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{align:"left",children:"Name"}),(0,n.jsx)(t.th,{align:"left",children:"Type"}),(0,n.jsx)(t.th,{align:"left",children:"Default"}),(0,n.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"PopperComponent"}),(0,n.jsx)(t.td,{align:"left",children:"ElementType"}),(0,n.jsx)(t.td,{align:"left",children:"Popper"}),(0,n.jsx)(t.td,{align:"left",children:"The component used for the popover."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"PopperProps"}),(0,n.jsx)(t.td,{align:"left",children:"object"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsx)(t.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"TooltipArrowComponent"}),(0,n.jsx)(t.td,{align:"left",children:"ElementType"}),(0,n.jsx)(t.td,{align:"left",children:"TooltipArrow"}),(0,n.jsx)(t.td,{align:"left",children:"The component used for the tooltip arrow."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"TooltipArrowProps"}),(0,n.jsx)(t.td,{align:"left",children:"object"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["Props applied to the ",(0,n.jsx)(t.code,{children:"TooltipArrow"})," component."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"TransitionComponent"}),(0,n.jsx)(t.td,{align:"left",children:"ElementType"}),(0,n.jsx)(t.td,{align:"left",children:"Grow"}),(0,n.jsx)(t.td,{align:"left",children:"The component used for the transition."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"TransitionProps"}),(0,n.jsx)(t.td,{align:"left",children:"object"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["Props applied to the ",(0,n.jsx)(t.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"TransitionProps.appear"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"true"}),(0,n.jsx)(t.td,{align:"left"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"arrow"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"true"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", adds an arrow to the tooltip."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"children"}),(0,n.jsxs)(t.td,{align:"left",children:["ReactNode | ",(0,n.jsx)(t.code,{children:"(context) => ReactNode"})]}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsx)(t.td,{align:"left"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"closeOnClick"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"true"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", close the tooltip on click."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"closeOnEsc"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"true"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", close the tooltip when pressing the escape key."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"closeOnMouseDown"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"false"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", close the tooltip while the mouse is down."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"defaultIsOpen"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"false"}),(0,n.jsx)(t.td,{align:"left",children:"Whether the tooltip will be open by default."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"disabled"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", the tooltip will not display."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"enterDelay"}),(0,n.jsx)(t.td,{align:"left",children:"number"}),(0,n.jsx)(t.td,{align:"left",children:"100"}),(0,n.jsx)(t.td,{align:"left",children:"The delay in milliseconds before the tooltip appears."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"followCursor"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", the tooltip will follow the cursor."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"isOpen"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", show the tooltip."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"label"}),(0,n.jsx)(t.td,{align:"left",children:"string | ReactNode"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsx)(t.td,{align:"left",children:"If the tooltip label is a blank or empty string, the tooltip will not display."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"leaveDelay"}),(0,n.jsx)(t.td,{align:"left",children:"number"}),(0,n.jsx)(t.td,{align:"left",children:"0"}),(0,n.jsx)(t.td,{align:"left",children:"The delay in milliseconds before the tooltip disappears."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"nextToCursor"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", the tooltip will be positioned next to the cursor."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"offset"}),(0,n.jsx)(t.td,{align:"left",children:"[skidding, distance]"}),(0,n.jsx)(t.td,{align:"left",children:"[0, 8]"}),(0,n.jsx)(t.td,{align:"left",children:"The skidding and distance of the tooltip."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"onClose"}),(0,n.jsx)(t.td,{align:"left",children:"function"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsx)(t.td,{align:"left",children:"Callback fired when the tooltip is closed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"onOpen"}),(0,n.jsx)(t.td,{align:"left",children:"function"}),(0,n.jsx)(t.td,{align:"left"}),(0,n.jsx)(t.td,{align:"left",children:"Callback fired when the tooltip is opened."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"placement"}),(0,n.jsx)(t.td,{align:"left",children:"PopperJS.Placement"}),(0,n.jsx)(t.td,{align:"left",children:"'bottom'"}),(0,n.jsx)(t.td,{align:"left",children:"Position the tooltip relative to the trigger element as well as surrounding elements. One of: 'top', 'bottom', 'right', 'left', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'right-start', 'right-end', 'left-start', 'left-end'"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{align:"left",children:"shouldWrapChildren"}),(0,n.jsx)(t.td,{align:"left",children:"boolean"}),(0,n.jsx)(t.td,{align:"left",children:"false"}),(0,n.jsxs)(t.td,{align:"left",children:["If ",(0,n.jsx)(t.code,{children:"true"}),", the tooltip will be wrapped in a ",(0,n.jsx)(t.code,{children:"Box"})," component. Otherwise, you have to ensure tooltip has only one child node."]})]})]})]})]})}t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,i.ah)(),e.components).wrapper;return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(s,e)})):s(e)}},31952:function(e,t,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/overflow-tooltip",function(){return l(16306)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=31952)}),_N_E=e.O()}]);
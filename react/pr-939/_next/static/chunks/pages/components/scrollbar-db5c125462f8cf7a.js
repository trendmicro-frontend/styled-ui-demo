(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3606],{56448:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return nn}});var r=t(52322),o=t(45392),l=t(96835),i=t(743),a=t(49857),c=t(9771),s=t(2784);function m(){return(m=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}var d=(0,s.forwardRef)(function(n,e){return s.createElement(i.Z,{overflowY:"scroll",scrollViewRef:e},function(e){var t=e.ScrollView,r=e.HorizontalTrack,o=e.VerticalTrack,l=e.HorizontalThumb,i=e.VerticalThumb,a=e.getScrollViewProps,c=e.getHorizontalTrackProps,d=e.getVerticalTrackProps,h=e.getHorizontalThumbProps,u=e.getVerticalThumbProps;return s.createElement(s.Fragment,null,s.createElement(t,m({},a(),n)),s.createElement(r,c(),s.createElement(l,h())),s.createElement(o,d(),s.createElement(i,u())))})});d.displayName="CustomScrollbar";var h=function(){return s.createElement(c.OO,{components:{Scroller:d},style:{height:400},totalCount:1e4,itemContent:function(n){return s.createElement(a.Z,null,"Item ",n)}})},u=t(62080),p=t(72448),f=t(65019),x=t(92952),g=t(40596),b=t(72788),j=["variant","count"];function w(){return(w=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function S(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}var y=(0,s.forwardRef)(function(n,e){var t,r=n.variant,o=n.count,l=function(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],!(e.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}(n,j),i=(function(n){if(Array.isArray(n))return n}(t=(0,g.Z)())||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,l,i,a=[],c=!0,s=!1;try{for(l=(t=t.call(n)).next;!(c=(r=l.call(t)).done)&&(a.push(r.value),1!==a.length);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return a}}(t,1)||function(n,e){if(n){if("string"==typeof n)return S(n,1);var t=Object.prototype.toString.call(n).slice(8,-1);if("Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return S(n,1)}}(t,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],c=(0,b.fH)({count:void 0===o?1:o,units:"paragraphs",sentenceLowerBound:5,sentenceUpperBound:15,paragraphLowerBound:3,paragraphUpperBound:7,format:"html"});return s.createElement(a.Z,w({ref:e,dangerouslySetInnerHTML:{__html:c}},{default:{},outline:{border:1,borderColor:{light:"gray:20",dark:"gray:70"}[i]}}[void 0===r?"default":r],l))});y.displayName="Lorem";var v=(0,x.Z)(y,{target:"e1cod7xe0"})({name:"jhs0yb",styles:">*:first-child{margin-top:0;}>*:last-child{margin-bottom:0;}"});function T(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}var k=function(){var n,e=(0,s.useRef)(),t=function(n){if(Array.isArray(n))return n}(n=(0,f.Z)(!0))||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,l,i,a=[],c=!0,s=!1;try{for(l=(t=t.call(n)).next;!(c=(r=l.call(t)).done)&&(a.push(r.value),2!==a.length);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return a}}(n,2)||function(n,e){if(n){if("string"==typeof n)return T(n,2);var t=Object.prototype.toString.call(n).slice(8,-1);if("Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return T(n,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=t[0],o=t[1];return s.createElement(s.Fragment,null,s.createElement(u.Z,{onClick:o},"Toggle Visibility"),s.createElement(p.Z,{my:"4x"}),r&&s.createElement(i.Z,{height:200,onUpdate:function(n){var t=n.scrollTop;e.current=t},overflow:"visible",scrollTop:e.current},s.createElement(v,{count:10})))},L=t(15192),I=t(66785),B=t(87888),M=t(94829),R=function(){return s.createElement(L.Z,null,s.createElement(I.Z,null,"Select an option"),s.createElement(B.Z,{width:"100%"},s.createElement(i.Z,{height:200},s.createElement(M.Z,null,"List item 1"),s.createElement(M.Z,null,"List item 2"),s.createElement(M.Z,null,"List item 3"),s.createElement(M.Z,null,"List item 4"),s.createElement(M.Z,null,"List item 5"),s.createElement(M.Z,null,"List item 6"),s.createElement(M.Z,null,"List item 7"),s.createElement(M.Z,null,"List item 8"),s.createElement(M.Z,null,"List item 9"),s.createElement(M.Z,null,"List item 10"),s.createElement(M.Z,null,"List item 11"),s.createElement(M.Z,null,"List item 12"))))},E=t(73645),H=t(67622),C=t(99291),z=t(99293),Z=t(70758),A=t(61619),O=t(14594),V=t(24231),P=t(20233);function U(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}var N=function(){var n,e=function(n){if(Array.isArray(n))return n}(n=(0,f.Z)(!1))||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,l,i,a=[],c=!0,s=!1;try{for(l=(t=t.call(n)).next;!(c=(r=l.call(t)).done)&&(a.push(r.value),2!==a.length);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return a}}(n,2)||function(n,e){if(n){if("string"==typeof n)return U(n,2);var t=Object.prototype.toString.call(n).slice(8,-1);if("Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return U(n,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=e[0],r=e[1];return s.createElement(E.Z,{direction:"column",rowGap:"4x"},s.createElement(H.Z,{display:"inline-flex",alignItems:"center"},s.createElement(C.Z,{checked:t,onChange:function(){return r()},size:"md"}),s.createElement(z.Z,{width:"2x"}),s.createElement(Z.Z,null,"Show")),s.createElement(i.Z,{maxHeight:180,overflowY:"scroll"},s.createElement(P.Z,null,s.createElement(A.Z,{spacing:"4x"},s.createElement(V.Z,null),s.createElement(O.Z,{in:t,unmountOnExit:!0},s.createElement(A.Z,{spacing:"4x"},s.createElement(V.Z,null),s.createElement(V.Z,null),s.createElement(V.Z,null),s.createElement(V.Z,null)))))))};function G(){return(G=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function _(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}var D=function(n){var e,t=(function(n){if(Array.isArray(n))return n}(e=(0,g.Z)())||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,l,i,a=[],c=!0,s=!1;try{for(l=(t=t.call(n)).next;!(c=(r=l.call(t)).done)&&(a.push(r.value),1!==a.length);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return a}}(e,1)||function(n,e){if(n){if("string"==typeof n)return _(n,1);var t=Object.prototype.toString.call(n).slice(8,-1);if("Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _(n,1)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],r=(0,s.useRef)(null),o=(0,s.useRef)(null);return s.createElement(a.Z,{position:"relative"},s.createElement(i.Z,G({onUpdate:function(n){var e=n.values,t=e.scrollTop,l=e.scrollHeight-e.clientHeight;r.current.style.opacity=.05*Math.min(t,20),o.current.style.opacity=.05*(l-Math.max(t,l-20))}},n)),s.createElement(a.Z,{ref:r,position:"absolute",top:"0",left:"0",right:"0",height:"24px",background:{dark:"linear-gradient(to bottom, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)",light:"linear-gradient(to bottom, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)"}[t]}),s.createElement(a.Z,{ref:o,position:"absolute",bottom:"0",left:"0",right:"0",height:"24px",background:{dark:"linear-gradient(to top, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)",light:"linear-gradient(to top, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)"}[t]}))},F=function(){return s.createElement(D,{height:300},s.createElement(v,{count:10}))},W=t(6194),Y=function(){return s.createElement(W.Z,{templateColumns:"repeat(auto-fit, minmax(240px, 1fr))",columnGap:"6x",rowGap:"4x"},s.createElement(a.Z,null,s.createElement(Z.Z,{size:"xl",marginBottom:"2x"},"minThumbHeight=50"),s.createElement(p.Z,{orientation:"horizontal",mt:"2x",mb:"4x"}),s.createElement(i.Z,{height:200,minThumbHeight:50,overflow:"scroll"},s.createElement(v,{count:10}))),s.createElement(a.Z,null,s.createElement(Z.Z,{size:"xl",marginBottom:"2x"},"minThumbHeight=100"),s.createElement(p.Z,{orientation:"horizontal",mt:"2x",mb:"4x"}),s.createElement(i.Z,{height:200,minThumbHeight:100,overflow:"scroll"},s.createElement(v,{count:10}))))},X=function(){return s.createElement(W.Z,{templateColumns:"repeat(auto-fit, minmax(240px, 1fr))",columnGap:"6x",rowGap:"4x"},s.createElement(a.Z,null,s.createElement(Z.Z,{size:"xl",marginBottom:"2x"},'overflow="auto"'),s.createElement(p.Z,{orientation:"horizontal",mt:"2x",mb:"4x"}),s.createElement(i.Z,{height:200,overflow:"auto"},s.createElement(v,{count:10,whiteSpace:"nowrap"}))),s.createElement(a.Z,null,s.createElement(Z.Z,{size:"xl",marginBottom:"2x"},'overflow="scroll"'),s.createElement(p.Z,{orientation:"horizontal",mt:"2x",mb:"4x"}),s.createElement(i.Z,{height:200,overflow:"scroll"},s.createElement(v,{count:10,whiteSpace:"nowrap"}))),s.createElement(a.Z,null,s.createElement(Z.Z,{size:"xl",marginBottom:"2x"},'overflow="hidden"'),s.createElement(p.Z,{orientation:"horizontal",mt:"2x",mb:"4x"}),s.createElement(i.Z,{height:200,overflow:"hidden"},s.createElement(v,{count:10,whiteSpace:"nowrap"}))))},$=function(){return s.createElement(i.Z,{height:200,overflow:"scroll",resize:"both"},s.createElement(v,{count:10,whiteSpace:"nowrap"}))},q=function(){return s.createElement(i.Z,{minWidth:"10%",maxWidth:"100%",overflow:"scroll",resize:"horizontal"},s.createElement(v,{count:6,whiteSpace:"nowrap"}))},K=function(){return s.createElement(i.Z,{minHeight:100,maxHeight:200,overflow:"scroll",resize:"vertical"},s.createElement(v,{count:10}))},Q=function(){return s.createElement(i.Z,{height:200},s.createElement(v,{count:10}))};function J(n){var e=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",h4:"h4",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),n.components);return(0,r.jsxs)(e.div,{className:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,r.jsx)(e.h1,{id:"scrollbar",children:"Scrollbar"}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"Scrollbar"})," component provides a consistent look and feel for scrollbars across multiple platforms and browsers."]}),"\n",(0,r.jsxs)(e.h2,{id:"import",children:["Import",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(e.h2,{id:"usage",children:["Usage",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"Scrollbar"})," is hidden by default, and it only appears when the user hovers over the scrollable content. You can set the height of the scrollbar using the ",(0,r.jsx)(e.code,{children:"height"})," prop."]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:Q,file:{data:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      height={200}\n    >\n      <Lorem count={10} />\n    </Scrollbar>\n  );\n};\n\nexport default App;",path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      height={200}\n    >\n      <Lorem count={10} />\n    </Scrollbar>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.p,{children:["For more information on bidirectional scrolling, please refer to ",(0,r.jsx)(e.a,{href:"https://adamsilver.io/blog/bidirectional-scrolling-whats-not-to-like/",children:"Bidirectional scrolling: what's not to like?"})]}),"\n",(0,r.jsxs)(e.h3,{id:"scroll-direction",children:["Scroll direction",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scroll-direction",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(e.p,{children:"The examples below illustrate the different scroll directions. You can try to resize the scrollable content to see how the scrollbar changes."}),"\n",(0,r.jsxs)(e.h4,{id:"vertical-scrolling",children:["Vertical scrolling",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#vertical-scrolling",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(e.p,{children:"To enable vertical scrolling, set the scrollbar height to a value less than the scrollable content height."}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:K,file:{data:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      minHeight={100}\n      maxHeight={200}\n      overflow=\"scroll\"\n      resize=\"vertical\"\n    >\n      <Lorem count={10} />\n    </Scrollbar>\n  );\n};\n\nexport default App;",path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      minHeight={100}\n      maxHeight={200}\n      overflow=\"scroll\"\n      resize=\"vertical\"\n    >\n      <Lorem count={10} />\n    </Scrollbar>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h4,{id:"horizontal-scrolling",children:["Horizontal scrolling",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#horizontal-scrolling",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(e.p,{children:"To enable horizontal scrolling, set the scrollbar width to a value less than the scrollable content width."}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:q,file:{data:'import {\n  Scrollbar,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      minWidth="10%"\n      maxWidth="100%"\n      overflow="scroll"\n      resize="horizontal"\n    >\n      <Lorem count={6} whiteSpace="nowrap" />\n    </Scrollbar>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:'import {\n  Scrollbar,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      minWidth="10%"\n      maxWidth="100%"\n      overflow="scroll"\n      resize="horizontal"\n    >\n      <Lorem count={6} whiteSpace="nowrap" />\n    </Scrollbar>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h4,{id:"bidirectional-scrolling",children:["Bidirectional scrolling",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#bidirectional-scrolling",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:$,file:{data:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      height={200}\n      overflow=\"scroll\"\n      resize=\"both\"\n    >\n      <Lorem count={10} whiteSpace=\"nowrap\" />\n    </Scrollbar>\n  );\n};\n\nexport default App;",path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:"import {\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\nimport Lorem from '@/components/Lorem';\n\nconst App = () => {\n  return (\n    <Scrollbar\n      height={200}\n      overflow=\"scroll\"\n      resize=\"both\"\n    >\n      <Lorem count={10} whiteSpace=\"nowrap\" />\n    </Scrollbar>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"overflow-control",children:["Overflow control",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overflow-control",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["Use the ",(0,r.jsx)(e.code,{children:"overflow"})," prop to set the overflow of the content. You can set the value to ",(0,r.jsx)(e.code,{children:"auto"}),", ",(0,r.jsx)(e.code,{children:"scroll"}),", or ",(0,r.jsx)(e.code,{children:"hidden"}),"."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"auto"}),": The scrollbar will be shown if the content overflows and mouse is hovering over the content."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"scroll"}),": The scrollbar is always visible if the content overflows."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"hidden"}),": The scrollbar is never shown."]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Note: ",(0,r.jsx)(e.code,{children:"overflowX"})," and ",(0,r.jsx)(e.code,{children:"overflowY"})," are also available if you need to set the overflow on both X and Y axis."]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:X,file:{data:'import {\n  Box,\n  Divider,\n  Grid,\n  Scrollbar,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Grid\n      templateColumns="repeat(auto-fit, minmax(240px, 1fr))"\n      columnGap="6x"\n      rowGap="4x"\n    >\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="auto"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="auto"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="scroll"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="scroll"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="hidden"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="hidden"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:'import {\n  Box,\n  Divider,\n  Grid,\n  Scrollbar,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Grid\n      templateColumns="repeat(auto-fit, minmax(240px, 1fr))"\n      columnGap="6x"\n      rowGap="4x"\n    >\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="auto"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="auto"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="scroll"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="scroll"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          {\'overflow="hidden"\'}\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          overflow="hidden"\n        >\n          <Lorem count={10} whiteSpace="nowrap" />\n        </Scrollbar>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"thumb-size",children:["Thumb size",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#thumb-size",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["Use the ",(0,r.jsx)(e.code,{children:"minThumbWidth"})," and ",(0,r.jsx)(e.code,{children:"minThumbHeight"})," props to set the minimum size of the thumb (in pixels)."]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:Y,file:{data:'import {\n  Box,\n  Divider,\n  Grid,\n  Scrollbar,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Grid\n      templateColumns="repeat(auto-fit, minmax(240px, 1fr))"\n      columnGap="6x"\n      rowGap="4x"\n    >\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          minThumbHeight=50\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          minThumbHeight={50}\n          overflow="scroll"\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          minThumbHeight=100\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          minThumbHeight={100}\n          overflow="scroll"\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:'import {\n  Box,\n  Divider,\n  Grid,\n  Scrollbar,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst App = () => {\n  return (\n    <Grid\n      templateColumns="repeat(auto-fit, minmax(240px, 1fr))"\n      columnGap="6x"\n      rowGap="4x"\n    >\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          minThumbHeight=50\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          minThumbHeight={50}\n          overflow="scroll"\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      </Box>\n      <Box>\n        <Text size="xl" marginBottom="2x">\n          minThumbHeight=100\n        </Text>\n        <Divider orientation="horizontal" mt="2x" mb="4x" />\n        <Scrollbar\n          height={200}\n          minThumbHeight={100}\n          overflow="scroll"\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"scroll-indicator",children:["Scroll indicator",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scroll-indicator",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(e.p,{children:"The scroll indicator can visually indicate the current scroll position of the scrollable element, so that the user knows whether it can be scrolled further."}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:F,file:{data:'import {\n  Box,\n  Scrollbar,\n  useColorMode,\n} from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst ShadowScrollbar = (props) => {\n  const [colorMode] = useColorMode();\n  const topIndicatorRef = useRef(null);\n  const bottomIndicatorRef = useRef(null);\n  const handleUpdate = ({ values }) => {\n    const { scrollTop, scrollHeight, clientHeight } = values;\n    const topIndicatorOpacity = 1 / 20 * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const bottomIndicatorOpacity = 1 / 20 * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    topIndicatorRef.current.style.opacity = topIndicatorOpacity;\n    bottomIndicatorRef.current.style.opacity = bottomIndicatorOpacity;\n  };\n  const topScrollIndicatorBackground = {\n    dark: \'linear-gradient(to bottom, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n    light: \'linear-gradient(to bottom, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n  }[colorMode];\n  const bottomScrollIndicatorBackground = {\n    dark: \'linear-gradient(to top, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n    light: \'linear-gradient(to top, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n  }[colorMode];\n\n  return (\n    <Box position="relative">\n      <Scrollbar\n        onUpdate={handleUpdate}\n        {...props}\n      />\n      <Box\n        ref={topIndicatorRef}\n        position="absolute"\n        top="0"\n        left="0"\n        right="0"\n        height="24px"\n        background={topScrollIndicatorBackground}\n      />\n      <Box\n        ref={bottomIndicatorRef}\n        position="absolute"\n        bottom="0"\n        left="0"\n        right="0"\n        height="24px"\n        background={bottomScrollIndicatorBackground}\n      />\n    </Box>\n  );\n};\n\nconst App = () => {\n  return (\n    <ShadowScrollbar\n      height={300}\n    >\n      <Lorem count={10} />\n    </ShadowScrollbar>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/Lorem.js":"import styled from '@emotion/styled';\nimport {\n  Box,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { loremIpsum } from 'lorem-ipsum';\nimport React, { forwardRef } from 'react';\n\nconst Lorem = forwardRef((\n  {\n    variant = 'default',\n    count = 1,\n    ...rest\n  },\n  ref,\n) => {\n  const [colorMode] = useColorMode();\n  const html = loremIpsum({\n    count,\n    units: 'paragraphs',\n    sentenceLowerBound: 5,\n    sentenceUpperBound: 15,\n    paragraphLowerBound: 3,\n    paragraphUpperBound: 7,\n    format: 'html',\n  });\n  const styleProps = {\n    default: {\n    },\n    outline: {\n      border: 1,\n      borderColor: {\n        light: 'gray:20',\n        dark: 'gray:70',\n      }[colorMode],\n    },\n  }[variant];\n\n  return (\n    <Box\n      ref={ref}\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...styleProps}\n      {...rest}\n    />\n  );\n});\n\nLorem.displayName = 'Lorem';\n\nexport default styled(Lorem)`\n  > *:first-child {\n    margin-top: 0;\n  }\n  > *:last-child {\n    margin-bottom: 0;\n  }\n`;"},raw:'import {\n  Box,\n  Scrollbar,\n  useColorMode,\n} from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\nimport Lorem from \'@/components/Lorem\';\n\nconst ShadowScrollbar = (props) => {\n  const [colorMode] = useColorMode();\n  const topIndicatorRef = useRef(null);\n  const bottomIndicatorRef = useRef(null);\n  const handleUpdate = ({ values }) => {\n    const { scrollTop, scrollHeight, clientHeight } = values;\n    const topIndicatorOpacity = 1 / 20 * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const bottomIndicatorOpacity = 1 / 20 * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    topIndicatorRef.current.style.opacity = topIndicatorOpacity;\n    bottomIndicatorRef.current.style.opacity = bottomIndicatorOpacity;\n  };\n  const topScrollIndicatorBackground = {\n    dark: \'linear-gradient(to bottom, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n    light: \'linear-gradient(to bottom, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n  }[colorMode];\n  const bottomScrollIndicatorBackground = {\n    dark: \'linear-gradient(to top, rgba(33, 33, 33, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n    light: \'linear-gradient(to top, rgba(224, 224, 224, 1) 0%, rgba(255, 255, 255, 0) 100%)\', \n  }[colorMode];\n\n  return (\n    <Box position="relative">\n      <Scrollbar\n        onUpdate={handleUpdate}\n        {...props}\n      />\n      <Box\n        ref={topIndicatorRef}\n        position="absolute"\n        top="0"\n        left="0"\n        right="0"\n        height="24px"\n        background={topScrollIndicatorBackground}\n      />\n      <Box\n        ref={bottomIndicatorRef}\n        position="absolute"\n        bottom="0"\n        left="0"\n        right="0"\n        height="24px"\n        background={bottomScrollIndicatorBackground}\n      />\n    </Box>\n  );\n};\n\nconst App = () => {\n  return (\n    <ShadowScrollbar\n      height={300}\n    >\n      <Lorem count={10} />\n    </ShadowScrollbar>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"scrollbar-with-collapsible-content",children:["Scrollbar with collapsible content",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scrollbar-with-collapsible-content",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:N,file:{data:'import {\n  Collapse,\n  Flex,\n  Scrollbar,\n  Space,\n  Stack,\n  Switch,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\nimport SkeletonContent from \'@/components/SkeletonContent\';\n\nconst App = () => {\n  const [isOpen, onToggle] = useToggle(false);\n\n  return (\n    <Flex direction="column" rowGap="4x">\n      <TextLabel display="inline-flex" alignItems="center">\n        <Switch checked={isOpen} onChange={() => onToggle()} size="md" />\n        <Space width="2x" />\n        <Text>Show</Text>\n      </TextLabel>\n      <Scrollbar maxHeight={180} overflowY="scroll">\n        <SkeletonContent>\n          <Stack spacing="4x">\n            <SkeletonBlock />\n            <Collapse\n              in={isOpen}\n              unmountOnExit={true}\n            >\n              <Stack spacing="4x">\n                <SkeletonBlock />\n                <SkeletonBlock />\n                <SkeletonBlock />\n                <SkeletonBlock />\n              </Stack>\n            </Collapse>\n          </Stack>\n        </SkeletonContent>\n      </Scrollbar>\n    </Flex>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{"src/components/SkeletonBlock.js":'import {\n  Flex,\n  Skeleton,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst SkeletonBlock = (props) => (\n  <Flex {...props}>\n    <Flex flex="none" mr="4x" alignItems="center">\n      <Skeleton variant="circle" width="10x" height="10x" />\n    </Flex>\n    <Flex flex="auto" flexDirection="column" rowGap="2x">\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Flex>\n  </Flex>\n);\n\nexport default SkeletonBlock;',"src/components/SkeletonContent.js":"import {\n  Box,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React from 'react';\n\nconst SkeletonContent = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const styleProps = {\n    light: {\n      color: 'black:primary',\n      bg: 'white',\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: 'gray:20',\n      boxShadow: colorStyle?.shadow?.thick,\n    },\n    dark: {\n      color: 'white:primary',\n      bg: 'gray:90',\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: 'gray:80',\n      boxShadow: colorStyle?.shadow?.thick,\n    },\n  }[colorMode];\n\n  return (\n    <Box p=\"4x\" {...styleProps} {...props} />\n  );\n};\n\nexport default SkeletonContent;"},raw:'import {\n  Collapse,\n  Flex,\n  Scrollbar,\n  Space,\n  Stack,\n  Switch,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\nimport SkeletonContent from \'@/components/SkeletonContent\';\n\nconst App = () => {\n  const [isOpen, onToggle] = useToggle(false);\n\n  return (\n    <Flex direction="column" rowGap="4x">\n      <TextLabel display="inline-flex" alignItems="center">\n        <Switch checked={isOpen} onChange={() => onToggle()} size="md" />\n        <Space width="2x" />\n        <Text>Show</Text>\n      </TextLabel>\n      <Scrollbar maxHeight={180} overflowY="scroll">\n        <SkeletonContent>\n          <Stack spacing="4x">\n            <SkeletonBlock />\n            <Collapse\n              in={isOpen}\n              unmountOnExit={true}\n            >\n              <Stack spacing="4x">\n                <SkeletonBlock />\n                <SkeletonBlock />\n                <SkeletonBlock />\n                <SkeletonBlock />\n              </Stack>\n            </Collapse>\n          </Stack>\n        </SkeletonContent>\n      </Scrollbar>\n    </Flex>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"scrollable-menu",children:["Scrollable menu",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scrollable-menu",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:R,file:{data:"import {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <Menu>\n      <MenuButton>Select an option</MenuButton>\n      <MenuList width=\"100%\">\n        <Scrollbar height={200}>\n          <MenuItem>List item 1</MenuItem>\n          <MenuItem>List item 2</MenuItem>\n          <MenuItem>List item 3</MenuItem>\n          <MenuItem>List item 4</MenuItem>\n          <MenuItem>List item 5</MenuItem>\n          <MenuItem>List item 6</MenuItem>\n          <MenuItem>List item 7</MenuItem>\n          <MenuItem>List item 8</MenuItem>\n          <MenuItem>List item 9</MenuItem>\n          <MenuItem>List item 10</MenuItem>\n          <MenuItem>List item 11</MenuItem>\n          <MenuItem>List item 12</MenuItem>\n        </Scrollbar>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default App;",path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Scrollbar,\n} from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <Menu>\n      <MenuButton>Select an option</MenuButton>\n      <MenuList width=\"100%\">\n        <Scrollbar height={200}>\n          <MenuItem>List item 1</MenuItem>\n          <MenuItem>List item 2</MenuItem>\n          <MenuItem>List item 3</MenuItem>\n          <MenuItem>List item 4</MenuItem>\n          <MenuItem>List item 5</MenuItem>\n          <MenuItem>List item 6</MenuItem>\n          <MenuItem>List item 7</MenuItem>\n          <MenuItem>List item 8</MenuItem>\n          <MenuItem>List item 9</MenuItem>\n          <MenuItem>List item 10</MenuItem>\n          <MenuItem>List item 11</MenuItem>\n          <MenuItem>List item 12</MenuItem>\n        </Scrollbar>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.h3,{id:"how-to-control-the-scroll-position",children:["How to control the scroll position?",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-control-the-scroll-position",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["Utilize the ",(0,r.jsx)(e.code,{children:"onUpdate"}),", ",(0,r.jsx)(e.code,{children:"scrollLeft"}),", ",(0,r.jsx)(e.code,{children:"scrollTop"}),", and ",(0,r.jsx)(e.code,{children:"scrollViewRef"})," props to fetch or programmatically control the scroll position."]}),"\n",(0,r.jsx)(e.p,{children:"To see this in action, simply scroll through the content and click the toggle button to confirm the scroll position."}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:k,file:{data:'import { Button, Divider, Scrollbar } from "@tonic-ui/react";\nimport { useToggle } from "@tonic-ui/react-hooks";\nimport React, { useRef } from "react";\nimport Lorem from "@/components/Lorem";\n\nconst App = () => {\n  const scrollTopRef = useRef();\n  const [on, toggle] = useToggle(true);\n\n  return (\n    <>\n      <Button onClick={toggle}>\n        Toggle Visibility\n      </Button>\n      <Divider my="4x" />\n      {on && (\n        <Scrollbar\n          height={200}\n          onUpdate={({ scrollTop }) => {\n            scrollTopRef.current = scrollTop;\n          }}\n          overflow="visible"\n          scrollTop={scrollTopRef.current}\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      )}\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Divider, Scrollbar } from "@tonic-ui/react";\nimport { useToggle } from "@tonic-ui/react-hooks";\nimport React, { useRef } from "react";\nimport Lorem from "@/components/Lorem";\n\nconst App = () => {\n  const scrollTopRef = useRef();\n  const [on, toggle] = useToggle(true);\n\n  return (\n    <>\n      <Button onClick={toggle}>\n        Toggle Visibility\n      </Button>\n      <Divider my="4x" />\n      {on && (\n        <Scrollbar\n          height={200}\n          onUpdate={({ scrollTop }) => {\n            scrollTopRef.current = scrollTop;\n          }}\n          overflow="visible"\n          scrollTop={scrollTopRef.current}\n        >\n          <Lorem count={10} />\n        </Scrollbar>\n      )}\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h3,{id:"how-to-integrate-react-virtuoso-with-a-custom-scrollbar",children:["How to integrate React Virtuoso with a custom scrollbar?",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-integrate-react-virtuoso-with-a-custom-scrollbar",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.p,{children:["To integrate React Virtuoso with a custom scrollbar, you can create a ",(0,r.jsx)(e.code,{children:"CustomScrollbar"})," component and pass it as the ",(0,r.jsx)(e.code,{children:"Scroller"})," for the ",(0,r.jsx)(e.code,{children:"Virtuoso"})," component."]}),"\n",(0,r.jsx)(e.pre,{disabled:!0,children:(0,r.jsx)(e.code,{className:"language-jsx",children:"<Virtuoso\n  components={{\n    Scroller: CustomScrollbar,\n  }}\n  style={{\n    height: 400,\n  }}\n  totalCount={10000}\n  itemContent={(index) => (\n    <Box>Item {index}</Box>\n  )}\n/>\n"})}),"\n",(0,r.jsx)(e.pre,{disabled:!0,children:(0,r.jsx)(e.code,{className:"language-jsx",children:'const CustomScrollbar = forwardRef((props, ref) => {\n  return (\n    <Scrollbar\n      overflowY="auto"\n      scrollViewRef={ref}\n    >\n      {({\n        ScrollView,\n        HorizontalTrack,\n        VerticalTrack,\n        HorizontalThumb,\n        VerticalThumb,\n        getScrollViewProps,\n        getHorizontalTrackProps,\n        getVerticalTrackProps,\n        getHorizontalThumbProps,\n        getVerticalThumbProps,\n      }) => (\n        <>\n          <ScrollView\n            {...getScrollViewProps()}\n            {...props}\n          />\n          <HorizontalTrack\n            {...getHorizontalTrackProps()}\n          >\n            <HorizontalThumb {...getHorizontalThumbProps()} />\n          </HorizontalTrack>\n          <VerticalTrack\n            {...getVerticalTrackProps()}\n          >\n            <VerticalThumb {...getVerticalThumbProps()} />\n          </VerticalTrack>\n        </>\n      )}\n    </Scrollbar>\n  );\n});\n'})}),"\n",(0,r.jsx)(e.p,{children:"This setup allows you to customize the scrolling behavior and appearance while leveraging Virtuoso's virtualized list rendering."}),"\n",(0,r.jsx)(l.Z,Object.assign({},{component:h,file:{data:"import { Box, Scrollbar } from '@tonic-ui/react';\nimport { Virtuoso } from 'react-virtuoso';\nimport React, { forwardRef } from 'react';\n\nconst CustomScrollbar = forwardRef((props, ref) => {\n  return (\n    <Scrollbar\n      overflowY=\"scroll\"\n      scrollViewRef={ref}\n    >\n      {({\n        ScrollView,\n        HorizontalTrack,\n        VerticalTrack,\n        HorizontalThumb,\n        VerticalThumb,\n        getScrollViewProps,\n        getHorizontalTrackProps,\n        getVerticalTrackProps,\n        getHorizontalThumbProps,\n        getVerticalThumbProps,\n      }) => (\n        <>\n          <ScrollView\n            {...getScrollViewProps()}\n            {...props}\n          />\n          <HorizontalTrack\n            {...getHorizontalTrackProps()}\n          >\n            <HorizontalThumb {...getHorizontalThumbProps()} />\n          </HorizontalTrack>\n          <VerticalTrack\n            {...getVerticalTrackProps()}\n          >\n            <VerticalThumb {...getVerticalThumbProps()} />\n          </VerticalTrack>\n        </>\n      )}\n    </Scrollbar>\n  );\n});\n\nCustomScrollbar.displayName = 'CustomScrollbar';\n\nconst App = () => {\n  return (\n    <Virtuoso\n      components={{\n        Scroller: CustomScrollbar,\n      }}\n      style={{\n        height: 400,\n      }}\n      totalCount={10000}\n      itemContent={(index) => (\n        <Box>Item {index}</Box>\n      )}\n    />\n  );\n};\n\nexport default App;",path:"pages/components/scrollbar/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Scrollbar } from '@tonic-ui/react';\nimport { Virtuoso } from 'react-virtuoso';\nimport React, { forwardRef } from 'react';\n\nconst CustomScrollbar = forwardRef((props, ref) => {\n  return (\n    <Scrollbar\n      overflowY=\"scroll\"\n      scrollViewRef={ref}\n    >\n      {({\n        ScrollView,\n        HorizontalTrack,\n        VerticalTrack,\n        HorizontalThumb,\n        VerticalThumb,\n        getScrollViewProps,\n        getHorizontalTrackProps,\n        getVerticalTrackProps,\n        getHorizontalThumbProps,\n        getVerticalThumbProps,\n      }) => (\n        <>\n          <ScrollView\n            {...getScrollViewProps()}\n            {...props}\n          />\n          <HorizontalTrack\n            {...getHorizontalTrackProps()}\n          >\n            <HorizontalThumb {...getHorizontalThumbProps()} />\n          </HorizontalTrack>\n          <VerticalTrack\n            {...getVerticalTrackProps()}\n          >\n            <VerticalThumb {...getVerticalThumbProps()} />\n          </VerticalTrack>\n        </>\n      )}\n    </Scrollbar>\n  );\n});\n\nCustomScrollbar.displayName = 'CustomScrollbar';\n\nconst App = () => {\n  return (\n    <Virtuoso\n      components={{\n        Scroller: CustomScrollbar,\n      }}\n      style={{\n        height: 400,\n      }}\n      totalCount={10000}\n      itemContent={(index) => (\n        <Box>Item {index}</Box>\n      )}\n    />\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(e.h2,{id:"props",children:["Props",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.h3,{id:"scrollbar-1",children:["Scrollbar",(0,r.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scrollbar-1",children:(0,r.jsx)(e.svg,{children:(0,r.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{align:"left",children:"Name"}),(0,r.jsx)(e.th,{align:"left",children:"Type"}),(0,r.jsx)(e.th,{align:"left",children:"Default"}),(0,r.jsx)(e.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"children"}),(0,r.jsx)(e.td,{align:"left",children:"ReactNode | function"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The content of the scrollbar."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"width"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left",children:"'auto'"}),(0,r.jsxs)(e.td,{align:"left",children:["The width of the scrollbar. If set to 'auto', you can constrain the width using the ",(0,r.jsx)(e.code,{children:"minWidth"})," and ",(0,r.jsx)(e.code,{children:"maxWidth"})," props."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"height"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left",children:"'auto'"}),(0,r.jsxs)(e.td,{align:"left",children:["The height of the scrollbar. If set to 'auto', you can constrain the height using the ",(0,r.jsx)(e.code,{children:"minHeight"})," and ",(0,r.jsx)(e.code,{children:"maxHeight"})," props."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"minWidth"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The minimum width of the scrollbar."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"maxWidth"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The maximum width of the scrollbar."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"minHeight"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The minimum height of the scrollbar."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"maxHeight"}),(0,r.jsx)(e.td,{align:"left",children:"number | string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The maximum height of the scrollbar."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"minThumbWidth"}),(0,r.jsx)(e.td,{align:"left",children:"number"}),(0,r.jsx)(e.td,{align:"left",children:"32"}),(0,r.jsx)(e.td,{align:"left",children:"The minimum width of the thumb in pixels."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"minThumbHeight"}),(0,r.jsx)(e.td,{align:"left",children:"number"}),(0,r.jsx)(e.td,{align:"left",children:"32"}),(0,r.jsx)(e.td,{align:"left",children:"The minimum height of the thumb in pixels."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"onScroll"}),(0,r.jsx)(e.td,{align:"left",children:(0,r.jsx)(e.code,{children:"(event: UIEvent) => void"})}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"A callback function that is called when the scrollbar is scrolled."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"onUpdate"}),(0,r.jsx)(e.td,{align:"left",children:"function"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsxs)(e.td,{align:"left",children:["A callback function that is called when the scroll position or size of the content changes. The function is passed an object containing the following properties: ",(0,r.jsx)(e.code,{children:"left"}),", ",(0,r.jsx)(e.code,{children:"top"}),", ",(0,r.jsx)(e.code,{children:"scrollLeft"}),", ",(0,r.jsx)(e.code,{children:"scrollTop"}),", ",(0,r.jsx)(e.code,{children:"scrollWidth"}),", ",(0,r.jsx)(e.code,{children:"scrollHeight"}),", ",(0,r.jsx)(e.code,{children:"clientWidth"}),", ",(0,r.jsx)(e.code,{children:"clientHeight"}),"."]})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"overflow"}),(0,r.jsx)(e.td,{align:"left",children:"string"}),(0,r.jsx)(e.td,{align:"left",children:"'auto'"}),(0,r.jsx)(e.td,{align:"left",children:"The overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"overflowX"}),(0,r.jsx)(e.td,{align:"left",children:"string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The horizontal overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"overflowY"}),(0,r.jsx)(e.td,{align:"left",children:"string"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsx)(e.td,{align:"left",children:"The vertical overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"scrollLeft"}),(0,r.jsx)(e.td,{align:"left",children:"number"}),(0,r.jsx)(e.td,{align:"left",children:"0"}),(0,r.jsx)(e.td,{align:"left",children:"The horizontal scroll position of the scrollable content."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"scrollTop"}),(0,r.jsx)(e.td,{align:"left",children:"number"}),(0,r.jsx)(e.td,{align:"left",children:"0"}),(0,r.jsx)(e.td,{align:"left",children:"The vertical scroll position of the scrollable content."})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{align:"left",children:"scrollViewRef"}),(0,r.jsx)(e.td,{align:"left",children:"RefObject"}),(0,r.jsx)(e.td,{align:"left"}),(0,r.jsxs)(e.td,{align:"left",children:["A ",(0,r.jsx)(e.code,{children:"ref"})," to the ",(0,r.jsx)(e.code,{children:"ScrollView"})," component."]})]})]})]})]})}var nn=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,o.ah)(),n.components).wrapper;return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(J,n)})):J(n)}},66891:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/scrollbar",function(){return t(56448)}])},6194:function(n,e,t){"use strict";t.d(e,{Z:function(){return m}});var r=t(53860),o=t(2784),l=t(98827),i=t(52903),a=t(49857),c=["gap","rowGap","columnGap","column","row","area","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas"],s=(0,o.forwardRef)(function(n,e){var t=(0,l.Z)({props:n,name:"Grid"}),o=t.gap,s=t.rowGap,m=t.columnGap,d=t.column,h=t.row,u=t.area,p=t.autoFlow,f=t.autoRows,x=t.autoColumns,g=t.templateRows,b=t.templateColumns,j=t.templateAreas,w=(0,r.Kd)(t,c);return(0,i.tZ)(a.Z,(0,r.Zj)({ref:e,display:"grid",gridGap:o,gridRowGap:s,gridColumnGap:m,gridColumn:d,gridRow:h,gridArea:u,gridAutoFlow:p,gridAutoRows:f,gridAutoColumns:x,gridTemplateRows:g,gridTemplateColumns:b,gridTemplateAreas:j},w))});s.displayName="Grid";var m=s}},function(n){n.O(0,[5414,978,4575,2888,9774,179],function(){return n(n.s=66891)}),_N_E=n.O()}]);
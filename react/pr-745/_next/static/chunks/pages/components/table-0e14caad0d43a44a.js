(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7807],{57673:function(e,n,t){"use strict";t.d(n,{Z:function(){return x}});var r=t(98922),o=t(49427),l=t(5632),a=t(2784),i=t(79525),c=t(98485),s=t(71561),d=t(28214),u=t(66824),f=["size"];function h(){return(h=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var p=(0,a.forwardRef)(function(e,n){var t=e.size,o=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,f);return a.createElement(r.SVGIcon,h({size:t,viewBox:"0 0 1024 1024"},o),a.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});p.displayName="CodeSandboxIcon";var g=t(30462);function b(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return m(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return m(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var y={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},v=function(e){var n=e.component,t=e.code,f=(0,l.useRouter)(),h=b((0,a.useReducer)(function(e){return!e},!1),2),m=h[0],v=h[1],x=b((0,r.useColorMode)(),1)[0],T={dark:s.y,light:s.q}[x],w=b((0,o.useToggle)(!1),2),j=w[0],C=w[1],D=(0,c.Z)(t),k=D.onCopy,R=D.hasCopied,S=(0,a.useCallback)(function(){k()},[k]),O=(0,a.useCallback)(function(){(0,d.b)({title:"Tonic UI",code:t})},[t]),H=(0,a.useCallback)(function(){v(),C(!1)},[v,C]);return a.createElement(i.nu,{code:t,disabled:!0,language:"jsx",theme:T},a.createElement(r.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[x],p:"4x"},a.createElement(r.Box,{fontSize:"sm",lineHeight:"sm"},a.createElement(a.Fragment,{key:m},a.createElement(n,null)))),a.createElement(r.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},a.createElement(g.Z,{"data-track":j?"CodeBlock|hide_source|".concat((0,u.Z)({path:f.pathname})):"CodeBlock|show_source|".concat((0,u.Z)({path:f.pathname})),onClick:C},a.createElement(r.Tooltip,{label:j?"Hide the source":"Show the source"},a.createElement(r.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),a.createElement(g.Z,{"data-track":"CodeBlock|copy_source|".concat((0,u.Z)({path:f.pathname})),onClick:S},a.createElement(r.Tooltip,{label:R?"Copied":"Copy the source"},a.createElement(r.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),a.createElement(g.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(f.pathname),onClick:O},a.createElement(r.Tooltip,{label:"Edit in CodeSandbox"},a.createElement(p,{size:{sm:"5x",md:"4x"}}))),a.createElement(g.Z,{"data-track":"CodeBlock|reset|".concat(f.pathname),onClick:H},a.createElement(r.Tooltip,{label:"Reset the demo"},a.createElement(r.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),a.createElement(r.Fade,{in:j},a.createElement(r.Collapse,{in:j,unmountOnExit:!0},a.createElement(i.uz,{style:y}))))};v.displayName="Demo";var x=v},35237:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(95412),a=t(73705);function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var u=[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}];n.default=function(){var e,n={dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[(function(e){if(Array.isArray(e))return e}(e=(0,r.useColorMode)())||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,1)||function(e,n){if(e){if("string"==typeof e)return d(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return d(e,n)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0]],t=(0,o.useMemo)(function(){return[{header:"Event Type",accessorKey:"eventType",size:240},{header:"Affected Devices",accessorKey:"affectedDevices",size:150,style:{textAlign:"right"}},{header:"Detections",accessorKey:"detections",size:150,style:{textAlign:"right"}}]},[]),c=(0,l.b7)({data:u,columns:t,getCoreRowModel:(0,a.sC)()});return o.createElement(r.Table,null,o.createElement(r.TableHeader,null,c.getHeaderGroups().map(function(e){return o.createElement(r.TableHeaderRow,{key:e.id},e.headers.map(function(e){var n=s({width:e.getSize()},e.column.columnDef.style);return o.createElement(r.TableHeaderCell,i({key:e.id},n),e.isPlaceholder?null:o.createElement(r.Truncate,null,(0,l.ie)(e.column.columnDef.header,e.getContext())))}))})),o.createElement(r.TableBody,null,c.getRowModel().rows.map(function(e){return o.createElement(r.TableRow,{key:e.id,_hover:{backgroundColor:n}},e.getVisibleCells().map(function(e){var n=s({width:e.column.getSize()},e.column.columnDef.style);return o.createElement(r.TableCell,i({key:e.id},n),(0,l.ie)(e.column.columnDef.cell,e.getContext()))}))})))}},44450:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(95412),a=t(73705),i=["isResizing"];function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function d(){return(d=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function u(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return f(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return f(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var h=[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}],p=function(e){var n=e.isResizing,t=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,i),l=u((0,r.useColorMode)(),1)[0],a={dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[l],c={dark:"gray:50",light:"gray:70"}[l];return o.createElement(r.Box,d({boxSizing:"content-box",position:"absolute",right:0,top:0,height:"100%",width:"1x",cursor:"col-resize;",userSelect:"none",touchAction:"none",backgroundColor:n?a:void 0,borderLeft:n?1:void 0,borderLeftColor:n?c:void 0,_hover:{backgroundColor:a,borderLeft:1,borderColor:c}},t))};n.default=function(){var e={dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[u((0,r.useColorMode)(),1)[0]],n=(0,o.useMemo)(function(){return[{header:"Event Type",accessorKey:"eventType",size:240},{header:"Affected Devices",accessorKey:"affectedDevices",size:150,style:{textAlign:"right"}},{header:"Detections",accessorKey:"detections",size:150,style:{textAlign:"right"}}]},[]),t=u((0,o.useState)("onChange"),2),i=t[0],c=t[1],f=u((0,o.useState)(null),2),g=f[0],b=f[1],m=(0,l.b7)({data:h,columns:n,columnResizeMode:i,getCoreRowModel:(0,a.sC)()});return o.createElement(o.Fragment,null,o.createElement(r.Box,{mb:"4x"},o.createElement(r.Menu,null,o.createElement(r.MenuButton,{variant:"secondary"},"Resize: ",i),o.createElement(r.MenuList,{onClick:function(e){c(e.target.value)},width:"max-content"},o.createElement(r.MenuItem,{value:"onChange"},"Resize: onChange"),o.createElement(r.MenuItem,{value:"onEnd"},"Resize: onEnd")))),o.createElement(r.Table,{variant:"outline",width:m.getTotalSize()},o.createElement(r.TableHeader,null,m.getHeaderGroups().map(function(e){return o.createElement(r.TableHeaderRow,{key:e.id},e.headers.map(function(e){var n=s({width:e.getSize()},e.column.columnDef.style),t=m.getState().columnSizingInfo.deltaOffset;return o.createElement(r.TableHeaderCell,d({key:e.id,position:"relative"},n),e.isPlaceholder?null:o.createElement(r.Truncate,null,(0,l.ie)(e.column.columnDef.header,e.getContext())),o.createElement(p,{isResizing:e.column.getIsResizing()||g===e.id,onMouseEnter:function(){return b(e.id)},onMouseLeave:function(){return b(null)},onMouseDown:e.getResizeHandler(),onTouchStart:e.getResizeHandler(),style:{transform:"onEnd"===i&&e.column.getIsResizing()?"translateX(".concat(t,"px)"):void 0}}))}))})),o.createElement(r.TableBody,null,m.getRowModel().rows.map(function(n){return o.createElement(r.TableRow,{key:n.id,_hover:{backgroundColor:e}},n.getVisibleCells().map(function(e){var n=s({width:e.column.getSize()},e.column.columnDef.style),t=m.getState().columnSizingInfo.deltaOffset;return o.createElement(r.TableCell,d({key:e.id,position:"relative"},n),(0,l.ie)(e.column.columnDef.cell,e.getContext()),(e.column.getIsResizing()||g===e.column.id)&&o.createElement(p,{isResizing:!0,style:{transform:"onEnd"===i&&e.column.getIsResizing()?"translateX(".concat(t,"px)"):void 0}}))}))}))))}},81998:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(87274),a=t(90588);function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}n.default=function(){var e,n={_hover:{backgroundColor:{dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[(function(e){if(Array.isArray(e))return e}(e=(0,r.useColorMode)())||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,1)||function(e,n){if(e){if("string"==typeof e)return d(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return d(e,n)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0]]}},t=(0,o.useMemo)(function(){return[{Header:"Event Type",id:"eventType",accessor:"eventType",width:"auto"},{Header:"Affected Devices",id:"affectedDevices",accessor:"affectedDevices",width:140,customProps:{textAlign:"right"}},{Header:"Detections",id:"detections",accessor:"detections",width:"10%",customProps:{textAlign:"right"}}]},[]),c=(0,o.useMemo)(function(){return[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}]},[]),u=function(e){var n=e.initColumns,t=e.tableWidth,r=n.map(function(e){var n=e.width;if("string"==typeof n){if("%"===n.substr(n.length-1))return n=t*(parseFloat(n)/100),s(s({},e),{},{width:n});if("auto"===n)return s(s({},e),{},{width:0})}return e}),o=r.filter(function(e){return!!e.width}),l=(t-o.reduce(function(e,n){return e+n.width},0))/(r.length-o.length);return l=l<=0?150:l,r.map(function(e){return e.width?e:s(s({},e),{},{width:l})})},f=(0,l.useTable)({columns:t,data:c},l.useBlockLayout),h=f.getTableProps,p=f.getTableBodyProps,g=f.headerGroups,b=f.rows,m=f.prepareRow;return o.createElement(r.Box,{height:300,overflow:"auto"},o.createElement(a.AutoSizer,null,function(e){var l=e.height,a=e.width;if(0===l||0===a)return null;var c=u({initColumns:t,tableWidth:a});return o.createElement(r.Table,i({width:a},h()),o.createElement(r.TableHeader,null,g.map(function(e,n){return o.createElement(r.TableHeaderRow,i({key:n},e.getHeaderGroupProps()),e.headers.map(function(e){var n=e.id,t=c.filter(function(e){return e.id===n})[0].width;return o.createElement(r.TableHeaderCell,i({key:e.id,width:t},e.getHeaderProps(),e.customProps),e.render("Header"))}))})),o.createElement(r.TableBody,p(),b.map(function(e,t){return m(e),o.createElement(r.TableRow,i({key:e.id},e.getRowProps(),n),e.cells.map(function(e){var n=e.column.id,t=c.filter(function(e){return e.id===n})[0].width;return o.createElement(r.TableCell,i({key:e.column.id,width:t},e.getCellProps(),e.column.customProps),e.render("Cell"))}))})))}))}},90629:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(87274),a=t(12850),i=["style"];function c(){return(c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function u(e,n){if(e){if("string"==typeof e)return f(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return f(e,n)}}function f(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}(0,a.resetServerContext)(),n.default=function(){var e,n=(0,o.useMemo)(function(){return[{Header:"Event Type",accessor:"eventType",width:240},{Header:"Affected Devices",accessor:"affectedDevices",width:150,customProps:{textAlign:"right"}},{Header:"Detections",accessor:"detections",width:150,customProps:{textAlign:"right"}}]},[]),t=o.useMemo(function(){return[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}]},[]),s=(0,r.useColorMode)().colorMode,h=(0,r.useTheme)().colors,p={dark:{backgroundColor:"gray:90",color:"gray:50"},light:{backgroundColor:"gray:10",color:"gray:30"}}[s],g={dark:{backgroundColor:"gray:80",color:"gray:30",boxShadow:"0 4px 16px 0 rgba(0, 0, 0, 0.48), 0 2px 4px 0 rgba(0, 0, 0, 0.16)",border:"1px solid ".concat(h["gray:60"])},light:{backgroundColor:"gray:10",color:"gray:80",boxShadow:"0 4px 16px 0 rgba(0, 0, 0, 0.16), 0 2px 4px 0 rgba(0, 0, 0, 0.08)",border:"1px solid ".concat(h["gray:20"])}}[s],b=(0,l.useTable)({columns:n,data:t,defaultColumn:{}},l.useBlockLayout,l.useColumnOrder),m=b.getTableProps,y=b.getTableBodyProps,v=b.headerGroups,x=b.rows,T=b.prepareRow,w=b.allColumns,j=b.setColumnOrder,C=(0,o.useRef)(),D=function(e){if(Array.isArray(e))return e}(e=(0,o.useState)({}))||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,2)||u(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),k=D[0],R=D[1],S=function(e){if(R({}),!e.destination)return},O=function(e,n){if(e.destination){var t,r=e.draggableId,o=e.destination.index,l="[".concat("data-rbd-drag-handle-draggable-id","='").concat(r,"']"),a=document.querySelector(l);if(a){R({clientHeight:a.clientHeight,clientWidth:a.offsetWidth,clientY:2,clientX:Array.from(a.parentNode.children).slice(0,o).reduce(function(e,n){return e+n.clientWidth},0),content:a.innerHTML});var i=function(e){if(Array.isArray(e))return f(e)}(t=C.current)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||u(t)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),c=e.source.index,s=e.destination&&e.destination.index;"number"==typeof c&&"number"==typeof s&&(i.splice(c,1),i.splice(s,0,e.draggableId),j(i))}}},H=function(){C.current=w.map(function(e){return e.id})};return o.createElement(r.Table,m(),o.createElement(r.TableHeader,null,v.map(function(e,n){return o.createElement(a.DragDropContext,{key:n,onDragStart:H,onDragUpdate:O,onDragEnd:S},o.createElement(a.Droppable,{droppableId:"droppable-table-header",direction:"horizontal"},function(n,t){return o.createElement(r.TableHeaderRow,c({ref:n.innerRef},n.droppableProps,e.getHeaderGroupProps()),e.headers.map(function(e,n){return o.createElement(a.Draggable,{key:e.id,draggableId:e.id,index:n,isDragDisabled:!e.accessor},function(n,t){var l=e.getHeaderProps(),a=l.style,s=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(l,i),u=d(d({},a),n.draggableProps.style);return o.createElement(r.TableHeaderCell,c({},n.draggableProps,n.dragHandleProps,s,e.customProps,t.isDragging&&g,{ref:n.innerRef,userSelect:"none",style:u}),e.render("Header"))})}),n.placeholder,o.createElement(r.TableHeaderCell,c({position:"absolute",top:k.clientY,left:k.clientX,height:k.clientHeight,width:k.clientWidth,display:k.clientWidth?"block":"none"},p),k.content))}))})),o.createElement(r.TableBody,y(),x.map(function(e,n){return T(e),o.createElement(r.TableRow,c({key:e.id},e.getRowProps()),e.cells.map(function(e){return o.createElement(r.TableCell,c({key:e.column.id},e.getCellProps(),e.column.customProps),e.render("Cell"))}))})))}},26715:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(20103),a=t(92843),i=t(98533),c=t(28846),s=t(84153),d=t(52797),u=t(14819),f=t.n(u),h=["id","row","index","moveTr"];function p(){return(p=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function g(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return b(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return b(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var m={TR:"tr"},y=function(e){var n=e.id,t=e.row,i=e.index,c=e.moveTr,d=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,h),u=(0,o.useRef)(null),f=g((0,l.L)({accept:m.TR,hover:function(e,n){if(u.current){var t=e.index;if(t!==i){var r=u.current?u.current.getBoundingClientRect():{},o=(r.bottom-r.top)/2,l=n.getClientOffset().y-r.top;t<i&&l<o||t>i&&l>o||(c(t,i),e.index=i)}}}}),2)[1],b=g((0,a.c)({type:m.TR,item:{id:n,index:i,row:t},collect:function(e){return{isDragging:e.isDragging()}}}),3),y=b[0].isDragging,v=b[1],x=b[2];return v(f(u)),(0,o.useEffect)(function(){x((0,s.r)(),{captureDraggingState:!0})},[x]),o.createElement(r.TableRow,p({},d,{ref:u,style:{cursor:"move",opacity:y?0:1}}),o.createElement(r.TableCell,{width:"240px"},t.eventType),o.createElement(r.TableCell,{width:"140px",textAlign:"right"},t.affectedDevices),o.createElement(r.TableCell,{width:"136px",textAlign:"right"},t.detections))},v=function(e){var n=(0,i.f)(function(e){return{item:e.getItem(),itemType:e.getItemType(),initialOffset:e.getInitialSourceClientOffset(),currentOffset:e.getSourceClientOffset(),isDragging:e.isDragging()}}),t=n.itemType,l=n.isDragging,a=n.item,c=n.initialOffset,s=n.currentOffset;if(!l)return null;if(t===m.TR){var d=a.row;return o.createElement(r.Box,{style:{position:"fixed",pointerEvents:"none",zIndex:100,left:0,top:0}},o.createElement(r.Box,{style:function(e,n){if(!e||!n)return{display:"none"};var t=n.x,r=n.y,o="translate(".concat(t,"px, ").concat(r,"px)");return{transform:o,WebkitTransform:o}}(c,s)},o.createElement(r.TableRow,e,o.createElement(r.TableCell,{width:"240px"},d.eventType),o.createElement(r.TableCell,{width:"140px",textAlign:"right"},d.affectedDevices),o.createElement(r.TableCell,{width:"136px",textAlign:"right"},d.detections))))}return null};n.default=function(){var e=g((0,o.useState)([{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}]),2),n=e[0],t=e[1],l=(0,o.useCallback)(function(e,r){var o=n[e];t(f()(n,{$splice:[[e,1],[r,0,o]]}))},[n]),a=(0,r.useColorMode)().colorMode,i={dark:{backgroundColor:"gray:100"},light:{backgroundColor:"white"}}[a];return o.createElement(c.W,{backend:d.HTML5Backend},o.createElement(r.Table,{dark:{backgroundColor:"gray:80"},light:{backgroundColor:"gray:10"}}[a],o.createElement(r.TableHeader,null,o.createElement(r.TableHeaderRow,i,o.createElement(r.TableHeaderCell,{width:"240px"},"Event Type"),o.createElement(r.TableHeaderCell,{width:"140px",textAlign:"right"},"Affected Devices"),o.createElement(r.TableHeaderCell,{width:"136px",textAlign:"right"},"Detections"))),o.createElement(r.TableBody,null,n.map(function(e,n){return o.createElement(y,p({},i,{key:e.id,index:n,id:e.id,row:e,moveTr:l}))}),o.createElement(v,i))))}},82733:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(56827);function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function c(){return(c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function s(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}n.default=function(){var e,n=(0,r.useColorMode)().colorMode,t={dark:{backgroundColor:"gray:80"},light:{backgroundColor:"gray:10"}}[n],a={dark:{backgroundColor:"gray:100"},light:{backgroundColor:"white"}}[n],d=function(e){if(Array.isArray(e))return e}(e=(0,o.useState)([{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}]))||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,2)||function(e,n){if(e){if("string"==typeof e)return s(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return s(e,n)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),u=d[0],f=d[1];return o.createElement(l.List,{values:u,onChange:function(e){var n=e.oldIndex,t=e.newIndex;return f((0,l.arrayMove)(u,n,t))},renderList:function(e){var n=e.children,l=e.props,i=e.isDragged;return o.createElement(r.Table,c({},t,{style:{cursor:i?"grabbing":void 0}}),o.createElement(r.TableHeader,null,o.createElement(r.TableHeaderRow,a,o.createElement(r.TableHeaderCell,{width:"240px"},"Event Type"),o.createElement(r.TableHeaderCell,{width:"150px",textAlign:"right"},"Affected Devices"),o.createElement(r.TableHeaderCell,{width:"150px",textAlign:"right"},"Detections"))),o.createElement(r.TableBody,l,n))},renderItem:function(e){var n=e.value,t=e.props,l=e.isDragged;e.isSelected;var s=o.createElement(r.TableRow,c({},t,a,{style:i(i({},t.style),{},{cursor:l?"grabbing":"grab"})}),o.createElement(r.TableCell,{width:"240px"},n.eventType),o.createElement(r.TableCell,{width:"150px",textAlign:"right"},n.affectedDevices),o.createElement(r.TableCell,{width:"150px",textAlign:"right"},n.detections));return l?o.createElement(r.Table,{style:i({},t.style)},o.createElement(r.TableBody,null,s)):s}})}},17228:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(1582),l=t(2784),a=t(95412),i=t(73705);function c(){return(c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function u(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return f(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return f(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var h=[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}];n.default=function(){var e=u((0,r.useColorMode)(),1)[0],n={dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[e],t={dark:"rgba(255, 255, 255, 0.08)",light:"rgba(0, 0, 0, 0.08)"}[e],s=u((0,l.useState)({}),2),f=s[0],p=s[1],g=(0,l.useMemo)(function(){return[{id:"select",header:function(e){var n=e.table;return l.createElement(r.Flex,{height:"100%",alignItems:"center"},l.createElement(r.Checkbox,{checked:n.getIsAllRowsSelected(),indeterminate:n.getIsSomeRowsSelected(),onChange:n.getToggleAllRowsSelectedHandler()}))},cell:function(e){var n=e.row;return l.createElement(r.Flex,{height:"100%",alignItems:"center"},l.createElement(r.Checkbox,{checked:n.getIsSelected(),disabled:!n.getCanSelect(),indeterminate:n.getIsSomeSelected(),onChange:n.getToggleSelectedHandler()}))},size:40},{header:"Event Type",accessorKey:"eventType",size:240},{header:"Affected Devices",accessorKey:"affectedDevices",size:150,style:{textAlign:"right"}},{header:"Detections",accessorKey:"detections",size:150,style:{textAlign:"right"}}]},[]),b=(0,a.b7)({data:h,columns:g,state:{rowSelection:f},enableRowSelection:!0,onRowSelectionChange:p,getCoreRowModel:(0,i.sC)()}),m=Object.keys(f).length,y=b.getCoreRowModel().flatRows.length;return l.createElement(l.Fragment,null,l.createElement(r.Box,{mb:"4x"},l.createElement(r.Table,null,l.createElement(r.TableHeader,null,b.getHeaderGroups().map(function(e){return l.createElement(r.TableHeaderRow,{key:e.id},e.headers.map(function(e){var n=d({width:e.getSize()},e.column.columnDef.style);return l.createElement(r.TableHeaderCell,c({key:e.id},n),e.isPlaceholder?null:l.createElement(r.Truncate,null,(0,a.ie)(e.column.columnDef.header,e.getContext())))}))})),l.createElement(r.TableBody,null,b.getRowModel().rows.map(function(e){return l.createElement(r.TableRow,{key:e.id,"data-selected":(0,o.dataAttr)(e.getIsSelected()),_hover:{backgroundColor:n},_selected:{backgroundColor:t}},e.getVisibleCells().map(function(e){var n=d({width:e.column.getSize()},e.column.columnDef.style);return l.createElement(r.TableCell,c({key:e.id},n),(0,a.ie)(e.column.columnDef.cell,e.getContext()))}))})))),l.createElement(r.Text,null,m," of ",y," total rows selected"))}},82126:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(87274);function a(){return(a=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}n.default=function(){var e,n={_hover:{backgroundColor:{dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[(function(e){if(Array.isArray(e))return e}(e=(0,r.useColorMode)())||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,1)||function(e,n){if(e){if("string"==typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return i(e,n)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0]]}},t=(0,o.useRef)(),c=(0,o.useMemo)(function(){return[{Header:"Event Type",accessor:"eventType"},{Header:"Affected Devices",accessor:"affectedDevices",customProps:{textAlign:"right"}},{Header:"Detections",accessor:"detections",customProps:{textAlign:"right"}}]},[]),s=(0,o.useMemo)(function(){return[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}]},[]),d=(0,l.useTable)({columns:c,data:s},l.useBlockLayout),u=d.getTableProps,f=d.getTableBodyProps,h=d.headerGroups,p=d.rows,g=d.prepareRow;return o.createElement(r.Table,a({width:360,height:200},u()),o.createElement(r.TableHeader,{ref:t},h.map(function(e,n){return o.createElement(r.TableHeaderRow,a({key:n},e.getHeaderGroupProps()),e.headers.map(function(e,n){return o.createElement(r.TableHeaderCell,a({key:e.id},e.getHeaderProps(),e.customProps),e.render("Header"))}))})),o.createElement(r.TableScrollbar,{height:"100%",onScroll:function(e){var n=e.target.scrollLeft;t&&t.current.scrollLeft!==n&&(t.current.scrollLeft=n)}},o.createElement(r.TableBody,f(),p.map(function(e,t){return g(e),o.createElement(r.TableRow,a({key:e.id},e.getRowProps(),n),e.cells.map(function(e){return o.createElement(r.TableCell,a({key:e.column.id},e.getCellProps(),e.column.customProps),e.render("Cell"))}))}))))}},45429:function(e,n,t){"use strict";t.r(n);var r=t(98922),o=t(2784),l=t(95412),a=t(73705);function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach(function(n){var r,o;r=e,o=t[n],n in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function d(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return u(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return u(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var f=[{id:1,eventType:"Virus/Malware",affectedDevices:20,detections:634},{id:2,eventType:"Spyware/Grayware",affectedDevices:20,detections:634},{id:3,eventType:"URL Filtering",affectedDevices:15,detections:598},{id:4,eventType:"Web Reputation",affectedDevices:15,detections:598},{id:5,eventType:"Network Virus",affectedDevices:15,detections:497},{id:6,eventType:"Application Control",affectedDevices:0,detections:0}];n.default=function(){var e=d((0,r.useColorMode)(),1)[0],n=d((0,r.useColorStyle)({colorMode:e}),1)[0],t={dark:"rgba(255, 255, 255, 0.12)",light:"rgba(0, 0, 0, 0.12)"}[e],c=d((0,o.useState)([{id:"eventType",desc:!1}]),2),u=c[0],h=c[1],p=(0,o.useMemo)(function(){return[{header:"Event Type",accessorKey:"eventType",size:240},{header:"Affected Devices",accessorKey:"affectedDevices",size:150,style:{textAlign:"right"}},{header:"Detections",accessorKey:"detections",size:150,style:{textAlign:"right"}}]},[]),g=(0,l.b7)({data:f,columns:p,state:{sorting:u},enableSorting:!0,enableSortingRemoval:!1,getCoreRowModel:(0,a.sC)(),getSortedRowModel:(0,a.tj)(),onSortingChange:h});return o.createElement(r.Table,null,o.createElement(r.TableHeader,null,g.getHeaderGroups().map(function(e){return o.createElement(r.TableHeaderRow,{key:e.id},e.headers.map(function(e){var a,c=s({width:e.getSize()},e.column.columnDef.style);return e.column.getCanSort()&&(c=s(s({},c),{},{cursor:"pointer",userSelect:"none",_hover:{backgroundColor:t}})),e.column.getIsSorted()&&(c=s(s({},c),{},{color:n.color.emphasis})),o.createElement(r.TableHeaderCell,i({key:e.id,onClick:e.column.getToggleSortingHandler()},c),e.isPlaceholder?null:o.createElement(r.Flex,{alignItems:"center"},o.createElement(r.Truncate,null,(0,l.ie)(e.column.columnDef.header,e.getContext())),null!==(a=({asc:o.createElement(r.Icon,{icon:"sort-up",size:20,ml:"1x"}),desc:o.createElement(r.Icon,{icon:"sort-down",size:20,ml:"1x"})})[e.column.getIsSorted()])&&void 0!==a?a:null))}))})),o.createElement(r.TableBody,null,g.getRowModel().rows.map(function(e){return o.createElement(r.TableRow,{key:e.id,_hover:{backgroundColor:t}},e.getVisibleCells().map(function(e){var n=s({width:e.column.getSize()},e.column.columnDef.style);return o.createElement(r.TableCell,i({key:e.id},n),(0,l.ie)(e.column.columnDef.cell,e.getContext()))}))})))}},25264:function(e,n,t){"use strict";t.r(n);var r=t(52322),o=t(45392),l=t(57673),a=t(90629),i=t(26715),c=t(82733),s=t(81998),d=t(82126),u=t(44450),f=t(45429),h=t(17228),p=t(35237),g=t(46326);function b(e){var n=Object.assign({div:"div",h1:"h1",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",p:"p",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,r.jsx)(n.h1,{id:"table",children:"Table"}),"\n",(0,r.jsxs)(n.h2,{id:"import",children:["Import",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableScrollbar,\n} from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"usage",children:["Usage",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:'import {\n  Box,\n  Button, \n  ButtonGroup,\n  Checkbox,\n  Divider,\n  Flex,\n  Space,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Text,\n  TextLabel,\n  useColorMode,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React, { useState } from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: \'rgba(255, 255, 255, 0.12)\',\n    light: \'rgba(0, 0, 0, 0.12)\',\n  }[colorMode];\n  const tableRowProps = {\n    _hover: {\n      backgroundColor: hoverBackgroundColor,\n    },\n  };\n  const [layout, changeLayoutBy] = useSelection(\'flexbox\');\n  const [variant, changeVariantBy] = useSelection(\'default\');\n  const [size, changeSizeBy] = useSelection(\'md\');\n  const [isTableHeaderVisible, toggleIsTableHeaderVisible] = useToggle(true);\n  const [isTableBodyVisible, toggleIsTableBodyVisible] = useToggle(true);\n  const data = React.useMemo(() => [\n    { id: 1, eventType: \'Virus/Malware\', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: \'Spyware/Grayware\', affectedDevices: 20, detections: 778 },\n    { id: 3, eventType: \'URL Filtering\', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: \'Web Reputation\', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: \'Network Virus\', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: \'Application Control\', affectedDevices: 0, detections: 0 }\n  ], []);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Table props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            layout\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'flexbox\', \'table\'].map(value => (\n            <Button\n              key={value}\n              selected={value === layout}\n              onClick={changeLayoutBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'default\', \'outline\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={changeVariantBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'sm\', \'md\', \'lg\'].map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Table composition\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox checked={isTableHeaderVisible} onChange={() => toggleIsTableHeaderVisible()} />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">TableHeader</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox checked={isTableBodyVisible} onChange={() => toggleIsTableBodyVisible()} />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">TableBody</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider mb="4x" />\n      <Flex alignItems="center" columnGap="3x" minHeight="5x">\n        <Table\n          layout={layout}\n          variant={variant}\n          size={size}\n        >\n          {isTableHeaderVisible && (\n            <TableHeader>\n              <TableHeaderRow>\n                <TableHeaderCell width="240px">Event Type</TableHeaderCell>\n                <TableHeaderCell textAlign="right">Affected Devices</TableHeaderCell>\n                <TableHeaderCell textAlign="right">Detections</TableHeaderCell>\n              </TableHeaderRow>\n            </TableHeader>\n          )}\n          {isTableBodyVisible && (\n            <TableBody>\n              {data.map(row => (\n                <TableRow key={row.id} {...tableRowProps}>\n                  <TableCell width="240px">{row.eventType}</TableCell>\n                  <TableCell textAlign="right">{row.affectedDevices}</TableCell>\n                  <TableCell textAlign="right">{row.detections}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          )}\n        </Table>\n      </Flex>\n    </>\n  );\n};\n\nexport default App;',component:g.default}),"\n",(0,r.jsxs)(n.h2,{id:"examples",children:["Examples",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#examples",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["In this section, we'll explore how to use the ",(0,r.jsx)(n.code,{children:"Table"})," component and various Hooks provided by ",(0,r.jsx)(n.code,{children:"react-table"})," to create tables with features such as sorting, filtering, pagination, and selection."]}),"\n",(0,r.jsxs)(n.p,{children:["To get started with ",(0,r.jsx)(n.code,{children:"react-table"}),", visit ",(0,r.jsx)(n.a,{href:"https://github.com/TanStack/table",children:"https://github.com/TanStack/table"})," to learn more."]}),"\n",(0,r.jsxs)(n.h3,{id:"basic",children:["Basic",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#basic",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Truncate,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useMemo } from 'react';\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n];\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n\n  const columns = useMemo(() => [\n    {\n      header: 'Event Type',\n      accessorKey: 'eventType',\n      size: 240,\n    },\n    {\n      header: 'Affected Devices',\n      accessorKey: 'affectedDevices',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      header: 'Detections',\n      accessorKey: 'detections',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <Table>\n      <TableHeader>\n        {table.getHeaderGroups().map(headerGroup => (\n          <TableHeaderRow key={headerGroup.id}>\n            {headerGroup.headers.map(header => {\n              const styleProps = {\n                width: header.getSize(),\n                ...header.column.columnDef.style,\n              };\n              return (\n                <TableHeaderCell\n                  key={header.id}\n                  {...styleProps}\n                >\n                  {header.isPlaceholder ? null : (\n                    <Truncate>\n                      {flexRender(header.column.columnDef.header, header.getContext())}\n                    </Truncate>\n                  )}\n                </TableHeaderCell>\n              );\n            })}\n          </TableHeaderRow>\n        ))}\n      </TableHeader>\n      <TableBody>\n        {table.getRowModel().rows.map(row => (\n          <TableRow\n            key={row.id}\n            _hover={{\n              backgroundColor: hoverBackgroundColor,\n            }}\n          >\n            {row.getVisibleCells().map(cell => {\n              const styleProps = {\n                width: cell.column.getSize(),\n                ...cell.column.columnDef.style,\n              };\n              return (\n                <TableCell\n                  key={cell.id}\n                  {...styleProps}\n                >\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </TableCell>\n              );\n            })}\n            </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default App;",component:p.default}),"\n",(0,r.jsxs)(n.h3,{id:"row-selection",children:["Row selection",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#row-selection",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Box,\n  Checkbox,\n  Flex,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Text,\n  Truncate,\n  useColorMode,\n} from '@tonic-ui/react';\nimport { dataAttr } from '@tonic-ui/utils';\nimport React, { useMemo, useState } from 'react';\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n];\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n  const selectedBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.08)',\n    light: 'rgba(0, 0, 0, 0.08)',\n  }[colorMode];\n\n  const [rowSelection, setRowSelection] = useState({});\n\n  const columns = useMemo(() => [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <Flex height=\"100%\" alignItems=\"center\">\n          <Checkbox\n            checked={table.getIsAllRowsSelected()}\n            indeterminate={table.getIsSomeRowsSelected()}\n            onChange={table.getToggleAllRowsSelectedHandler()}\n          />\n        </Flex>\n      ),\n      cell: ({ row }) => (\n        <Flex height=\"100%\" alignItems=\"center\">\n          <Checkbox\n            checked={row.getIsSelected()}\n            disabled={!row.getCanSelect()}\n            indeterminate={row.getIsSomeSelected()}\n            onChange={row.getToggleSelectedHandler()}\n          />\n        </Flex>\n      ),\n      size: 40,\n    },\n    {\n      header: 'Event Type',\n      accessorKey: 'eventType',\n      size: 240,\n    },\n    {\n      header: 'Affected Devices',\n      accessorKey: 'affectedDevices',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      header: 'Detections',\n      accessorKey: 'detections',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      rowSelection,\n    },\n    enableRowSelection: true, // enable row selection for all rows\n    // enableRowSelection: row => row.original.detections > 0, // or enable row selection conditionally per row\n    onRowSelectionChange: setRowSelection,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  const selectedRowCount = Object.keys(rowSelection).length;\n  const totalRowCount = table.getCoreRowModel().flatRows.length; // flatRows is an array of all rows, including subRows\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map(headerGroup => (\n              <TableHeaderRow key={headerGroup.id}>\n                {headerGroup.headers.map(header => {\n                  const styleProps = {\n                    width: header.getSize(),\n                    ...header.column.columnDef.style,\n                  };\n                  return (\n                    <TableHeaderCell\n                      key={header.id}\n                      {...styleProps}\n                    >\n                      {header.isPlaceholder ? null : (\n                        <Truncate>\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                        </Truncate>\n                      )}\n                    </TableHeaderCell>\n                  );\n                })}\n              </TableHeaderRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows.map(row => (\n              <TableRow\n                key={row.id}\n                data-selected={dataAttr(row.getIsSelected())}\n                _hover={{\n                  backgroundColor: hoverBackgroundColor,\n                }}\n                _selected={{\n                  backgroundColor: selectedBackgroundColor,\n                }}\n              >\n                {row.getVisibleCells().map(cell => {\n                  const styleProps = {\n                    width: cell.column.getSize(),\n                    ...cell.column.columnDef.style,\n                  };\n                  return (\n                    <TableCell\n                      key={cell.id}\n                      {...styleProps}\n                    >\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>\n                  );\n                })}\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n      <Text>\n        {selectedRowCount} of {totalRowCount} total rows selected\n      </Text>\n    </>\n  );\n};\n\nexport default App;",component:h.default}),"\n",(0,r.jsxs)(n.h3,{id:"sorting",children:["Sorting",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#sorting",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Flex,\n  Icon,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Truncate,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useMemo, useState } from 'react';\nimport {\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n];\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n\n  const [sorting, setSorting] = useState([\n    { id: 'eventType', desc: false },\n  ]);\n  const onSortingChange = setSorting;\n\n  const columns = useMemo(() => [\n    {\n      header: 'Event Type',\n      accessorKey: 'eventType',\n      size: 240,\n    },\n    {\n      header: 'Affected Devices',\n      accessorKey: 'affectedDevices',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      header: 'Detections',\n      accessorKey: 'detections',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n    },\n    enableSorting: true, // Enables/Disables sorting for the table\n    enableSortingRemoval: false, // Enables/Disables the ability to remove sorting for the table\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    onSortingChange, // A function to be called with an `updaterFn` when `state.sorting` changes\n  });\n\n  return (\n    <Table>\n      <TableHeader>\n        {table.getHeaderGroups().map(headerGroup => (\n          <TableHeaderRow key={headerGroup.id}>\n            {headerGroup.headers.map(header => {\n              let styleProps = {\n                width: header.getSize(),\n                ...header.column.columnDef.style,\n              };\n              if (header.column.getCanSort()) {\n                styleProps = {\n                  ...styleProps,\n                  cursor: 'pointer',\n                  userSelect: 'none',\n                  _hover: {\n                    backgroundColor: hoverBackgroundColor,\n                  },\n                };\n              }\n              if (header.column.getIsSorted()) {\n                styleProps = {\n                  ...styleProps,\n                  color: colorStyle.color.emphasis,\n                };\n              }\n              return (\n                <TableHeaderCell\n                  key={header.id}\n                  onClick={header.column.getToggleSortingHandler()}\n                  {...styleProps}\n                >\n                  {header.isPlaceholder ? null : (\n                    <Flex alignItems=\"center\">\n                      <Truncate>\n                        {flexRender(header.column.columnDef.header, header.getContext())}\n                      </Truncate>\n                      {{\n                        asc: (<Icon icon=\"sort-up\" size={20}  ml=\"1x\" />),\n                        desc: (<Icon icon=\"sort-down\" size={20} ml=\"1x\" />),\n                      }[header.column.getIsSorted()] ?? null}\n                    </Flex>\n                  )}\n                </TableHeaderCell>\n              );\n            })}\n          </TableHeaderRow>\n        ))}\n      </TableHeader>\n      <TableBody>\n        {table.getRowModel().rows.map(row => (\n          <TableRow\n            key={row.id}\n            _hover={{\n              backgroundColor: hoverBackgroundColor,\n            }}\n          >\n            {row.getVisibleCells().map(cell => {\n              const styleProps = {\n                width: cell.column.getSize(),\n                ...cell.column.columnDef.style,\n              };\n              return (\n                <TableCell\n                  key={cell.id}\n                  {...styleProps}\n                >\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </TableCell>\n              );\n            })}\n            </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default App;",component:f.default}),"\n",(0,r.jsxs)(n.h3,{id:"column-sizing",children:["Column sizing",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#column-sizing",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Box,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Truncate,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useMemo, useState } from 'react';\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n];\n\nconst TableColumnResizer = ({\n  isResizing,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const resizerBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n  const resizerBorderColor = {\n    dark: 'gray:50',\n    light: 'gray:70',\n  }[colorMode];\n\n  return (\n    <Box\n      boxSizing=\"content-box\"\n      position=\"absolute\"\n      right={0}\n      top={0}\n      height=\"100%\"\n      width=\"1x\"\n      cursor=\"col-resize;\"\n      userSelect=\"none\"\n      touchAction=\"none\"\n      backgroundColor={isResizing ? resizerBackgroundColor : undefined}\n      borderLeft={isResizing ? 1 : undefined}\n      borderLeftColor={isResizing ? resizerBorderColor : undefined}\n      _hover={{\n        backgroundColor: resizerBackgroundColor,\n        borderLeft: 1,\n        borderColor: resizerBorderColor,\n      }}\n      {...rest}\n    />\n  );\n};\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n\n  const columns = useMemo(() => [\n    {\n      header: 'Event Type',\n      accessorKey: 'eventType',\n      size: 240,\n    },\n    {\n      header: 'Affected Devices',\n      accessorKey: 'affectedDevices',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      header: 'Detections',\n      accessorKey: 'detections',\n      size: 150,\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const [columnResizeMode, setColumnResizeMode] = useState('onChange');\n  const [hoveredResizerId, setHoveredResizerId] = useState(null);\n\n  const table = useReactTable({\n    data,\n    columns,\n    columnResizeMode,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        <Menu>\n          <MenuButton variant=\"secondary\">\n            Resize: {columnResizeMode}\n          </MenuButton>\n          <MenuList\n            onClick={(event) => {\n              const value = event.target.value;\n              setColumnResizeMode(value);\n            }}\n            width=\"max-content\"\n          >\n            <MenuItem value=\"onChange\">\n              Resize: onChange\n            </MenuItem>\n            <MenuItem value=\"onEnd\">\n              Resize: onEnd\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n      <Table\n        variant=\"outline\"\n        width={table.getTotalSize()}\n      >\n        <TableHeader>\n          {table.getHeaderGroups().map(headerGroup => (\n            <TableHeaderRow key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n                const styleProps = {\n                  width: header.getSize(),\n                  ...header.column.columnDef.style,\n                };\n                const columnSizingDeltaOffset = table.getState().columnSizingInfo.deltaOffset;\n                return (\n                  <TableHeaderCell\n                    key={header.id}\n                    position=\"relative\"\n                    {...styleProps}\n                  >\n                    {header.isPlaceholder ? null : (\n                      <Truncate>\n                        {flexRender(header.column.columnDef.header, header.getContext())}\n                      </Truncate>\n                    )}\n                    <TableColumnResizer\n                      isResizing={header.column.getIsResizing() || (hoveredResizerId === header.id)}\n                      onMouseEnter={() => setHoveredResizerId(header.id)}\n                      onMouseLeave={() => setHoveredResizerId(null)}\n                      onMouseDown={header.getResizeHandler()}\n                      onTouchStart={header.getResizeHandler()}\n                      style={{\n                        transform: (columnResizeMode === 'onEnd' && header.column.getIsResizing())\n                          ? `translateX(${columnSizingDeltaOffset}px)`\n                          : undefined\n                      }}\n                    />\n                  </TableHeaderCell>\n                );\n              })}\n            </TableHeaderRow>\n          ))}\n        </TableHeader>\n        <TableBody>\n          {table.getRowModel().rows.map(row => (\n            <TableRow\n              key={row.id}\n              _hover={{\n                backgroundColor: hoverBackgroundColor,\n              }}\n            >\n              {row.getVisibleCells().map(cell => {\n                const styleProps = {\n                  width: cell.column.getSize(),\n                  ...cell.column.columnDef.style,\n                };\n                const columnSizingDeltaOffset = table.getState().columnSizingInfo.deltaOffset;\n                return (\n                  <TableCell\n                    key={cell.id}\n                    position=\"relative\"\n                    {...styleProps}\n                  >\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    {(cell.column.getIsResizing() || (hoveredResizerId === cell.column.id)) && (\n                      <TableColumnResizer\n                        isResizing={true}\n                        style={{\n                          transform: (columnResizeMode === 'onEnd' && cell.column.getIsResizing())\n                            ? `translateX(${columnSizingDeltaOffset}px)`\n                            : undefined\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                );\n              })}\n              </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nexport default App;",component:u.default}),"\n",(0,r.jsxs)(n.h3,{id:"scrolling",children:["Scrolling",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scrolling",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TableScrollbar"})," component shares the same API as the ",(0,r.jsx)(n.code,{children:"Scrollbar"})," component. It allows for the creation of scrollable content within a table."]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableScrollbar,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useMemo, useRef } from 'react';\nimport { useTable, useBlockLayout } from 'react-table';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n  const tableRowProps = {\n    _hover: {\n      backgroundColor: hoverBackgroundColor,\n    },\n  };\n\n  const tableHeaderRef = useRef();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'Event Type',\n      accessor: 'eventType',\n    },\n    {\n      Header: 'Affected Devices',\n      accessor: 'affectedDevices',\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n    {\n      Header: 'Detections',\n      accessor: 'detections',\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const data = useMemo(() => [\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ], []);\n\n  const onScroll = (e) => {\n    const scrollLeft = e.target.scrollLeft;\n    if (!!tableHeaderRef && tableHeaderRef.current.scrollLeft !== scrollLeft) {\n      tableHeaderRef.current.scrollLeft = scrollLeft;\n    }\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useBlockLayout,\n  );\n\n  return (\n    <Table\n      width={360}\n      height={200}\n      {...getTableProps()}\n    >\n      <TableHeader ref={tableHeaderRef}>\n        {headerGroups.map((headerGroup, index) => {\n          return (\n            <TableHeaderRow\n              key={index}\n              {...headerGroup.getHeaderGroupProps()}\n            >\n              {headerGroup.headers.map((column, index) => (\n                <TableHeaderCell\n                  key={column.id}\n                  {...column.getHeaderProps()}\n                  {...column.customProps}\n                >\n                  {column.render('Header')}\n                </TableHeaderCell>\n              ))}\n            </TableHeaderRow>\n          );\n        })}\n      </TableHeader>\n      <TableScrollbar\n        height=\"100%\"\n        onScroll={onScroll}\n      >\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, index) => {\n            prepareRow(row);\n            return (\n              <TableRow\n                key={row.id}\n                {...row.getRowProps()}\n                {...tableRowProps}\n              >\n                {row.cells.map(cell => {\n                  return (\n                    <TableCell\n                      key={cell.column.id}\n                      {...cell.getCellProps()}\n                      {...cell.column.customProps}\n                    >\n                      {cell.render('Cell')}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableScrollbar>\n    </Table>\n  );\n};\n\nexport default App;",component:d.default}),"\n",(0,r.jsxs)(n.h3,{id:"full-width-table-with-react-virtualized",children:["Full width table with ",(0,r.jsx)(n.code,{children:"react-virtualized"}),(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#full-width-table-with-react-virtualized",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Box,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useMemo } from 'react';\nimport { useTable, useBlockLayout } from 'react-table';\nimport { AutoSizer } from 'react-virtualized';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode];\n  const tableRowProps = {\n    _hover: {\n      backgroundColor: hoverBackgroundColor,\n    },\n  };\n\n  const columns = useMemo(() => [\n    {\n      Header: 'Event Type',\n      id: 'eventType',\n      accessor: 'eventType',\n      width: 'auto',\n    },\n    {\n      Header: 'Affected Devices',\n      id: 'affectedDevices',\n      accessor: 'affectedDevices',\n      width: 140,\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n    {\n      Header: 'Detections',\n      id: 'detections',\n      accessor: 'detections',\n      width: '10%',\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const data = useMemo(() => [\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ], []);\n\n  const getCalculatedColumns = ({ initColumns, tableWidth }) => {\n    const columns = initColumns.map(column => {\n      let columnWidth = column.width;\n      if (typeof columnWidth === 'string') {\n        const lastChar = columnWidth.substr(columnWidth.length - 1);\n        if (lastChar === '%') {\n          columnWidth = tableWidth * (parseFloat(columnWidth) / 100);\n          return {\n            ...column,\n            width: columnWidth\n          };\n        }\n        if (columnWidth === 'auto') {\n          return {\n            ...column,\n            width: 0\n          };\n        }\n      }\n      return column;\n    });\n    const customWidthColumns = columns.filter(column => !!column.width);\n    const totalCustomWidth = customWidthColumns.reduce((accumulator, column) => accumulator + column.width, 0);\n    let defaultCellWidth = (tableWidth - totalCustomWidth) / (columns.length - customWidthColumns.length);\n    defaultCellWidth = defaultCellWidth <= 0 ? 150 : defaultCellWidth;\n    return columns.map(column => {\n      if (column.width) {\n        return column;\n      }\n      return {\n        ...column,\n        width: defaultCellWidth\n      };\n    });\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useBlockLayout,\n  );\n\n  return (\n    <Box height={300} overflow=\"auto\">\n      <AutoSizer>\n        {({ height, width }) => {\n          if (height === 0 || width === 0) {\n            return null;\n          }\n          const newColumns = getCalculatedColumns({ initColumns: columns, tableWidth: width });\n          return (\n            <Table\n              width={width}\n              {...getTableProps()}\n            >\n              <TableHeader>\n                {headerGroups.map((headerGroup, index) => (\n                  <TableHeaderRow\n                    key={index}\n                    {...headerGroup.getHeaderGroupProps()}\n                  >\n                    {headerGroup.headers.map(column => {\n                      const columnId = column.id;\n                      const _column = newColumns.filter(column => column.id === columnId);\n                      const _columnWidth = _column[0].width;\n                      return (\n                        <TableHeaderCell\n                          key={column.id}\n                          width={_columnWidth}\n                          {...column.getHeaderProps()}\n                          {...column.customProps}\n                        >\n                          {column.render('Header')}\n                        </TableHeaderCell>\n                      );\n                    })}\n                  </TableHeaderRow>\n                ))}\n              </TableHeader>\n              <TableBody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                  prepareRow(row);\n                  return (\n                    <TableRow\n                      key={row.id}\n                      {...row.getRowProps()}\n                      {...tableRowProps}\n                    >\n                      {\n                        row.cells.map(cell => {\n                          const columnId = cell.column.id;\n                          const _column = newColumns.filter(column => column.id === columnId);\n                          const _columnWidth = _column[0].width;\n                          return (\n                            <TableCell\n                              key={cell.column.id}\n                              width={_columnWidth}\n                              {...cell.getCellProps()}\n                              {...cell.column.customProps}\n                            >\n                              {cell.render('Cell')}\n                            </TableCell>\n                          );\n                        })\n                      }\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          );\n        }}\n      </AutoSizer>\n    </Box>\n  );\n};\n\nexport default App;",component:s.default}),"\n",(0,r.jsxs)(n.h3,{id:"reordering-rows-with-react-movable",children:["Reordering rows with ",(0,r.jsx)(n.code,{children:"react-movable"}),(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#reordering-rows-with-react-movable",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\nimport { List, arrayMove } from 'react-movable';\n\nconst App = () => {\n  const { colorMode } = useColorMode();\n  const tableProps = {\n    'dark': {\n      backgroundColor: 'gray:80',\n    },\n    'light': {\n      backgroundColor: 'gray:10',\n    }\n  }[colorMode];\n  const rowProps = {\n    'dark': {\n      backgroundColor: 'gray:100',\n    },\n    'light': {\n      backgroundColor: 'white',\n    },\n  }[colorMode];\n\n  const [items, setItems] = useState([\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ]);\n\n  return (\n    <List\n      values={items}\n      onChange={({ oldIndex, newIndex }) =>\n        setItems(arrayMove(items, oldIndex, newIndex))\n      }\n      renderList={({ children, props, isDragged }) => (\n        <Table\n          {...tableProps}\n          style={{\n            cursor: isDragged ? 'grabbing' : undefined,\n          }}\n        >\n          <TableHeader>\n            <TableHeaderRow\n              {...rowProps}\n            >\n              <TableHeaderCell width=\"240px\">Event Type</TableHeaderCell>\n              <TableHeaderCell width=\"150px\" textAlign=\"right\">Affected Devices</TableHeaderCell>\n              <TableHeaderCell width=\"150px\" textAlign=\"right\">Detections</TableHeaderCell>\n            </TableHeaderRow>\n          </TableHeader>\n          <TableBody {...props}>{children}</TableBody>\n        </Table>\n      )}\n      renderItem={({ value, props, isDragged, isSelected }) => {\n        const row = (\n          <TableRow\n            {...props}\n            {...rowProps}\n            style={{\n              ...props.style,\n              cursor: isDragged ? 'grabbing' : 'grab',\n            }}\n          >\n            <TableCell width=\"240px\">{value.eventType}</TableCell>\n            <TableCell width=\"150px\" textAlign=\"right\">{value.affectedDevices}</TableCell>\n            <TableCell width=\"150px\" textAlign=\"right\">{value.detections}</TableCell>\n          </TableRow>\n        );\n        return isDragged ? (\n          <Table style={{ ...props.style }}>\n            <TableBody>{row}</TableBody>\n          </Table>\n        ) : (\n          row\n        );\n      }}\n    />\n  );\n};\n\nexport default App;",component:c.default}),"\n",(0,r.jsxs)(n.h3,{id:"reordering-rows-with-react-dnd",children:["Reordering rows with ",(0,r.jsx)(n.code,{children:"react-dnd"}),(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#reordering-rows-with-react-dnd",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Box,\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { DndProvider, useDrop, useDrag, useDragLayer } from 'react-dnd';\nimport { HTML5Backend, getEmptyImage } from 'react-dnd-html5-backend';\nimport immutableUpdate from 'immutability-helper';\n\nconst ItemTypes = {\n  TR: 'tr',\n};\n\nconst TR = ({ id, row, index, moveTr, ...otherProps }) => {\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes.TR,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current ? ref.current.getBoundingClientRect() : {};\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveTr(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: ItemTypes.TR,\n    item: { id, index, row },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  return (\n    <TableRow\n      {...otherProps}\n      ref={ref}\n      style={{\n        cursor: 'move',\n        opacity: isDragging ? 0 : 1,\n      }}\n    >\n      <TableCell width=\"240px\">{row.eventType}</TableCell>\n      <TableCell width=\"140px\" textAlign=\"right\">{row.affectedDevices}</TableCell>\n      <TableCell width=\"136px\" textAlign=\"right\">{row.detections}</TableCell>\n    </TableRow>\n  );\n};\n\nconst CustomDragLayer = (props) => {\n  const { itemType, isDragging, item, initialOffset, currentOffset, } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n\n  const layerStyles = {\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n  };\n\n  const getItemStyles = (initialOffset, currentOffset) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none',\n      };\n    }\n    const { x, y } = currentOffset;\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform,\n    };\n  };\n\n  if (!isDragging) {\n    return null;\n  }\n\n  if (itemType === ItemTypes.TR) {\n    const row = item.row;\n     return (\n       <Box style={layerStyles}>\n        <Box style={getItemStyles(initialOffset, currentOffset)}>\n          <TableRow {...props}>\n            <TableCell width=\"240px\">{row.eventType}</TableCell>\n            <TableCell width=\"140px\" textAlign=\"right\">{row.affectedDevices}</TableCell>\n            <TableCell width=\"136px\" textAlign=\"right\">{row.detections}</TableCell>\n          </TableRow>\n        </Box>\n      </Box>\n    );\n  }\n\n  return null;\n};\n\nconst App = () => {\n  const [items, setItems] = useState([\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ]);\n  const moveTr = useCallback((dragIndex, hoverIndex) => {\n    const dragCard = items[dragIndex];\n    setItems(immutableUpdate(items, {\n      $splice: [\n        [dragIndex, 1],\n        [hoverIndex, 0, dragCard],\n      ],\n    }));\n  }, [items]);\n  const { colorMode } = useColorMode();\n  const tableProps = {\n    'dark': {\n      backgroundColor: 'gray:80',\n    },\n    'light': {\n      backgroundColor: 'gray:10',\n    }\n  }[colorMode];\n  const rowProps = {\n    'dark': {\n      backgroundColor: 'gray:100',\n    },\n    'light': {\n      backgroundColor: 'white',\n    },\n  }[colorMode];\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Table\n       {...tableProps}\n      >\n        <TableHeader>\n          <TableHeaderRow\n             {...rowProps}\n          >\n            <TableHeaderCell width=\"240px\">Event Type</TableHeaderCell>\n            <TableHeaderCell width=\"140px\" textAlign=\"right\">Affected Devices</TableHeaderCell>\n            <TableHeaderCell width=\"136px\" textAlign=\"right\">Detections</TableHeaderCell>\n          </TableHeaderRow>\n        </TableHeader>\n        <TableBody>\n          {\n            items.map((item, i) => (\n              <TR {...rowProps} key={item.id} index={i} id={item.id} row={item} moveTr={moveTr}/>\n            ))\n          }\n          <CustomDragLayer {...rowProps} />\n        </TableBody>\n      </Table>\n    </DndProvider>\n  );\n};\n\nexport default App;",component:i.default}),"\n",(0,r.jsxs)(n.h3,{id:"reordering-columns-with-react-beautiful-dnd",children:["Reordering columns with ",(0,r.jsx)(n.code,{children:"react-beautiful-dnd"}),(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#reordering-columns-with-react-beautiful-dnd",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{code:"import {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  useColorMode,\n  useTheme,\n} from '@tonic-ui/react';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { useTable, useBlockLayout, useColumnOrder } from 'react-table';\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from 'react-beautiful-dnd';\n\n// The resetServerContext function should be used when server side rendering (SSR).\n// It ensures context state does not persist across multiple renders on the server\n// which would result in client/server markup mismatches after multiple requests are rendered on the server.\nresetServerContext();\n\nconst App = () => {\n  const columns = useMemo(() => [\n    {\n      Header: 'Event Type',\n      accessor: 'eventType',\n      width: 240,\n    },\n    {\n      Header: 'Affected Devices',\n      accessor: 'affectedDevices',\n      width: 150,\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n    {\n      Header: 'Detections',\n      accessor: 'detections',\n      width: 150,\n      customProps: {\n        textAlign: 'right',\n      },\n    },\n  ], []);\n\n  const data = React.useMemo(() => [\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n    { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n    { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n    { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n    { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 }\n  ], []);\n\n  const { colorMode } = useColorMode();\n  const { colors } = useTheme();\n  const columnPlaceholderProps = {\n    'dark': {\n      backgroundColor: 'gray:90',\n      color: 'gray:50',\n    },\n    'light': {\n      backgroundColor: 'gray:10',\n      color: 'gray:30',\n    }\n  }[colorMode];\n  const columnDraggerProps = {\n    'dark': {\n      backgroundColor: 'gray:80',\n      color: 'gray:30',\n      boxShadow: '0 4px 16px 0 rgba(0, 0, 0, 0.48), 0 2px 4px 0 rgba(0, 0, 0, 0.16)',\n      border: `1px solid ${colors['gray:60']}`,\n    },\n    'light': {\n      backgroundColor: 'gray:10',\n      color: 'gray:80',\n      boxShadow: '0 4px 16px 0 rgba(0, 0, 0, 0.16), 0 2px 4px 0 rgba(0, 0, 0, 0.08)',\n      border: `1px solid ${colors['gray:20']}`,\n    }\n  }[colorMode];\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    allColumns,\n    setColumnOrder,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {},\n    },\n    useBlockLayout,\n    useColumnOrder,\n  );\n\n  const currentColOrder = useRef();\n  const [placeholderProps, setPlaceholderProps] = useState({});\n  const onDragEnd = (result) => {\n    setPlaceholderProps({});\n\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n  };\n  const onDragUpdate = (dragUpdateObj, b) => {\n    if(!dragUpdateObj.destination){\n      return;\n    }\n    const draggableId = dragUpdateObj.draggableId;\n    const destinationIndex = dragUpdateObj.destination.index;\n\n    const queryAttr = \"data-rbd-drag-handle-draggable-id\";\n    const domQuery = `[${queryAttr}='${draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n\n    if (!draggedDOM) {\n      return;\n    }\n    const { clientHeight, offsetWidth } = draggedDOM;\n    const clientX = Array.from(draggedDOM.parentNode.children)\n      .slice(0, destinationIndex)\n      .reduce((total, curr) => {\n        return total + curr.clientWidth;\n      }, 0);\n\n    setPlaceholderProps({\n      clientHeight,\n      clientWidth: offsetWidth,\n      clientY: 2,\n      clientX: clientX,\n      content: draggedDOM.innerHTML,\n    });\n\n    const colOrder = [...currentColOrder.current];\n    const sIndex = dragUpdateObj.source.index;\n    const dIndex = dragUpdateObj.destination && dragUpdateObj.destination.index;\n    if (typeof sIndex === \"number\" && typeof dIndex === \"number\") {\n      colOrder.splice(sIndex, 1);\n      colOrder.splice(dIndex, 0, dragUpdateObj.draggableId);\n      setColumnOrder(colOrder);\n    }\n  };\n  const onDragStart = () => {\n    currentColOrder.current = allColumns.map(o => o.id);\n  };\n\n  return (\n    <Table {...getTableProps()}>\n      <TableHeader>\n        {headerGroups.map((headerGroup, index) => (\n          <DragDropContext\n            key={index}\n            onDragStart={onDragStart}\n            onDragUpdate={onDragUpdate}\n            onDragEnd={onDragEnd}\n          >\n            <Droppable\n              droppableId=\"droppable-table-header\"\n              direction=\"horizontal\"\n            >\n              {(droppableProvided, droppableSnapshot) => {\n                return (\n                  <TableHeaderRow\n                    ref={droppableProvided.innerRef}\n                    {...droppableProvided.droppableProps}\n                    {...headerGroup.getHeaderGroupProps()}\n                  >\n                    {headerGroup.headers.map((column, index) => (\n                      <Draggable\n                        key={column.id}\n                        draggableId={column.id}\n                        index={index}\n                        isDragDisabled={!column.accessor}\n                      >\n                        {(provided, snapshot) => {\n                          const { style: headerStyle, ...columnHeaderProps } = column.getHeaderProps();\n                          const columnHeaderStyle = {\n                            ...headerStyle,\n                            ...provided.draggableProps.style,\n                          };\n                          return (\n                            <TableHeaderCell\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              {...columnHeaderProps}\n                              {...column.customProps}\n                              {...snapshot.isDragging && columnDraggerProps}\n                              ref={provided.innerRef}\n                              userSelect=\"none\"\n                              style={columnHeaderStyle}\n                            >\n                              {column.render(\"Header\")}\n                            </TableHeaderCell>\n                          );\n                        }}\n                      </Draggable>\n                    ))}\n                    {droppableProvided.placeholder}\n                    <TableHeaderCell\n                      position=\"absolute\"\n                      top={placeholderProps.clientY}\n                      left={placeholderProps.clientX}\n                      height={placeholderProps.clientHeight}\n                      width={placeholderProps.clientWidth}\n                      display={placeholderProps.clientWidth ? 'block' : 'none' }\n                      {...columnPlaceholderProps}\n                    >\n                      { placeholderProps.content }\n                    </TableHeaderCell>\n                  </TableHeaderRow>\n                );\n              }}\n            </Droppable>\n          </DragDropContext>\n        ))}\n      </TableHeader>\n      <TableBody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <TableRow key={row.id} {...row.getRowProps()}>\n              {\n                row.cells.map(cell => {\n                  return (\n                    <TableCell\n                      key={cell.column.id}\n                      {...cell.getCellProps()}\n                      {...cell.column.customProps}\n                    >\n                      {cell.render('Cell')}\n                    </TableCell>\n                  );\n                })\n              }\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default App;",component:a.default}),"\n",(0,r.jsxs)(n.h2,{id:"props",children:["Props",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"table-1",children:["Table",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#table-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"layout"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'flexbox'"}),(0,r.jsx)(n.td,{align:"left",children:"The layout of the table. One of: 'flexbox', 'table'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"size"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'md'"}),(0,r.jsx)(n.td,{align:"left",children:"The size of TableCells. One of: 'sm', 'md', 'lg'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"variant"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'default'"}),(0,r.jsx)(n.td,{align:"left",children:"The variant of the table style to use. One of: 'default', 'outline'"})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"tableheader",children:["TableHeader",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tableheader",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tableheaderrow",children:["TableHeaderRow",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tableheaderrow",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tableheadercell",children:["TableHeaderCell",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tableheadercell",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tablebody",children:["TableBody",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tablebody",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tablerow",children:["TableRow",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tablerow",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tablecell",children:["TableCell",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tablecell",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"tablescrollbar",children:["TableScrollbar",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tablescrollbar",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TableScrollbar"})," component shares the same API as the ",(0,r.jsx)(n.code,{children:"Scrollbar"})," component."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode | function"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The content of the scrollbar."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"width"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"'auto'"}),(0,r.jsxs)(n.td,{align:"left",children:["The width of the scrollbar. If set to 'auto', you can constrain the width using the ",(0,r.jsx)(n.code,{children:"minWidth"})," and ",(0,r.jsx)(n.code,{children:"maxWidth"})," props."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"height"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"'auto'"}),(0,r.jsxs)(n.td,{align:"left",children:["The height of the scrollbar. If set to 'auto', you can constrain the height using the ",(0,r.jsx)(n.code,{children:"minHeight"})," and ",(0,r.jsx)(n.code,{children:"maxHeight"})," props."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"minWidth"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum width of the scrollbar."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"maxWidth"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The maximum width of the scrollbar."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"minHeight"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum height of the scrollbar."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"maxHeight"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The maximum height of the scrollbar."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"minThumbWidth"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"32"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum width of the thumb in pixels."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"minThumbHeight"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"32"}),(0,r.jsx)(n.td,{align:"left",children:"The minimum height of the thumb in pixels."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onScroll"}),(0,r.jsx)(n.td,{align:"left",children:"function"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback function that is called when the scrollbar is scrolled."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onUpdate"}),(0,r.jsx)(n.td,{align:"left",children:"function"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback function that is called when the scrollbar is updated."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"overflow"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'auto'"}),(0,r.jsx)(n.td,{align:"left",children:"The overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"overflowX"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The horizontal overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"overflowY"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"The vertical overflow of the scrollable content. One of: 'auto', 'scroll', 'hidden'."})]})]})]})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(b,e)})):b(e)}},26592:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/table",function(){return t(25264)}])}},function(e){e.O(0,[5412,6326,9774,2888,179],function(){return e(e.s=26592)}),_N_E=e.O()}]);
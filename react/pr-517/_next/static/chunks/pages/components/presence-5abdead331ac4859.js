(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5807],{76771:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return s}});var o=t(7896),r=t(59740),a=(t(2784),t(30876)),i=["components"],l={};function s(n){var e=n.components,t=(0,r.Z)(n,i);return(0,a.kt)("wrapper",(0,o.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"Presence"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Presence")," allows components to animate out when they are removed from the React tree."),(0,a.kt)("h2",null,"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  Presence,\n  usePresence,\n} from '@tonic-ui/react';\n")),(0,a.kt)("h2",null,"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},"const AnimatedContainer = ({\n  in: inProp,\n  ...rest\n}) => {\n  const [, safeToRemove] = usePresence();\n\n  return (\n    <Collapse\n      in={inProp}\n      onExited={safeToRemove}\n      timeout={1000}\n    >\n      <Box\n        overflow=\"hidden\"\n        position=\"relative\"\n        height={200}\n        {...rest}\n      />\n    </Collapse>\n  );\n};\n\nconst AnimatedRectangle = ({\n  in: inProp,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [, safeToRemove] = usePresence();\n  const styleProps = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    border: 1,\n    borderColor: colorStyle.divider,\n    width: 200,\n    height: 200,\n  };\n\n  return (\n    <Slide\n      in={inProp}\n      direction=\"right\"\n      onExited={safeToRemove}\n      timeout={{\n        enter: 500,\n        exit: 1000,\n      }}\n    >\n      <Box {...styleProps} {...rest} />\n    </Slide>\n  );\n};\n\nconst AnimatedCircle = ({\n  in: inProp,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [, safeToRemove] = usePresence();\n  const styleProps = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    border: 1,\n    borderColor: colorStyle.divider,\n    borderRadius: '50%',\n    width: 120,\n    height: 120,\n    mt: 40,\n    ml: 40,\n  };\n\n  return (\n    <Slide\n      in={inProp}\n      direction=\"right\"\n      onExited={safeToRemove}\n      timeout={{\n        enter: 1000,\n        exit: 500,\n      }}\n    >\n      <Box {...styleProps} {...rest} />\n    </Slide>\n  );\n};\n\nfunction Component() {\n  const [text, setText] = React.useState('');\n  const [isPresent, toggleIsPresent] = useToggle();\n  const onExitComplete = () => {\n    setText('Exit animation finished');\n  };\n\n  return (\n    <>\n      <Box mb=\"3x\">\n        <Button\n          onClick={() => {\n            if (isPresent) {\n              setText('Exit animation started');\n            } else {\n              setText('');\n            }\n            toggleIsPresent();\n          }}\n        >\n          Toggle\n        </Button>\n      </Box>\n      <Presence\n        isPresent={isPresent}\n        onExitComplete={onExitComplete}\n      >\n        <AnimatedContainer in={isPresent}>\n          <AnimatedRectangle in={isPresent} />\n          <AnimatedCircle in={isPresent} />\n        </AnimatedContainer>\n        <Text>\n          {text}\n        </Text>\n      </Presence>\n    </>\n  );\n}\n\nrender(<Component />);\n")),(0,a.kt)("h2",null,"Props"),(0,a.kt)("h3",null,"Presence"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"children"),(0,a.kt)("td",{parentName:"tr",align:"left"},"ReactNode"),(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"isPresent"),(0,a.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"If ",(0,a.kt)("inlineCode",{parentName:"td"},"true"),", the presence is active.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"onExitComplete"),(0,a.kt)("td",{parentName:"tr",align:"left"},"function"),(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"A callback function that is called when the exit animation is complete.")))))}s.isMDXComponent=!0},61649:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/presence",function(){return t(76771)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=61649,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5217],{6696:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return I}});var i=n(52322),l=n(45392),o=n(96835),r=n(53310),s=n(15192),a=n(66785),d=n(87888),c=n(743),h=n(94829),p=n(2784),f=function(e){var t=e.children;return p.createElement(r.Z,{label:t,PopperProps:{usePortal:!0},nextToCursor:!1},t)},u=function(){return p.createElement(s.Z,{width:"400px"},p.createElement(a.Z,null,"Options"),p.createElement(d.Z,{width:"100%"},p.createElement(c.Z,{maxHeight:"200px",overflowX:"hidden",overflowY:"auto"},p.createElement(h.Z,null,p.createElement(f,null,"This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")),p.createElement(h.Z,null,p.createElement(f,null,"This is a short string.")))))},x=function(){return p.createElement(r.Z,{PopperProps:{usePortal:!0},label:"This is a tooltip"},"This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.")},g=n(73645),m=n(70758),v=n(18267);function w(){return(w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var T=function(){return p.createElement(r.Z,{label:"This is a tooltip"},function(e){var t=e.ref,n=e.style;return p.createElement(g.Z,{alignItems:"center",columnGap:"2x"},p.createElement(v.Z,null),p.createElement(m.Z,w({ref:t},n),"This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content."))})},j=n(72448),y=n(49857),b=function(){return p.createElement(p.Fragment,null,p.createElement(r.Z,{label:"This is a tooltip"},"This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content."),p.createElement(j.Z,{my:"4x"}),p.createElement(y.Z,{width:140.7},p.createElement(r.Z,{label:"This is a tooltip"},"This text string is truncted")),p.createElement(j.Z,{my:"4x"}),p.createElement(r.Z,{label:"This is a tooltip"},"This text string is not truncated"))};function O(e){var t=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,l.ah)(),e.components);return(0,i.jsxs)(t.div,{className:"main-content",children:["\n","\n","\n","\n","\n",(0,i.jsx)(t.h1,{id:"overflowtooltip",children:"OverflowTooltip"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," component is a tooltip that only displays when text overflows its container."]}),"\n",(0,i.jsxs)(t.h2,{id:"import",children:["Import",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { OverflowTooltip } from '@tonic-ui/react';\n"})}),"\n",(0,i.jsxs)(t.h2,{id:"usage",children:["Usage",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(t.p,{children:"When the text overflows its container, it will be truncated, and an ellipsis will be added. Hovering over or focusing on the truncated text will display a tooltip."}),"\n",(0,i.jsx)(t.p,{children:"By default, the overflow tooltip does not include an arrow and will display next to the cursor."}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:b,file:{data:'import { Box, Divider, OverflowTooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => {\n  return (\n    <>\n      <OverflowTooltip\n        label="This is a tooltip"\n      >\n        This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n      </OverflowTooltip>\n      <Divider my="4x" />\n      <Box width={140.7}>\n        <OverflowTooltip\n          label="This is a tooltip"\n        >\n          This text string is truncted\n        </OverflowTooltip>\n      </Box>\n      <Divider my="4x" />\n      <OverflowTooltip\n        label="This is a tooltip"\n      >\n        This text string is not truncated\n      </OverflowTooltip>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/overflow-tooltip/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Divider, OverflowTooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => {\n  return (\n    <>\n      <OverflowTooltip\n        label="This is a tooltip"\n      >\n        This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n      </OverflowTooltip>\n      <Divider my="4x" />\n      <Box width={140.7}>\n        <OverflowTooltip\n          label="This is a tooltip"\n        >\n          This text string is truncted\n        </OverflowTooltip>\n      </Box>\n      <Divider my="4x" />\n      <OverflowTooltip\n        label="This is a tooltip"\n      >\n        This text string is not truncated\n      </OverflowTooltip>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(t.p,{children:["In the second example, a function is passed as a child of the ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," component. The function is called with an object containing a ",(0,i.jsx)(t.code,{children:"ref"})," and a ",(0,i.jsx)(t.code,{children:"style"})," property, which should be spread to the element that needs to be truncated. In this case, a ",(0,i.jsx)(t.code,{children:"Text"})," component is used to display the text, and the ",(0,i.jsx)(t.code,{children:"ref"})," and ",(0,i.jsx)(t.code,{children:"style"})," props are spread to it. This allows the ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," component to detect when the text overflows and display a tooltip."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:T,file:{data:"import { Flex, OverflowTooltip, Text } from '@tonic-ui/react';\nimport { MenuIcon } from '@tonic-ui/react-icons';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <OverflowTooltip\n      label=\"This is a tooltip\"\n    >\n      {({ ref, style }) => (\n        <Flex alignItems=\"center\" columnGap=\"2x\">\n          <MenuIcon />\n          <Text ref={ref} {...style}>\n            This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n          </Text>\n        </Flex>\n      )}\n    </OverflowTooltip>\n  );\n};\n\nexport default App;",path:"pages/components/overflow-tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Flex, OverflowTooltip, Text } from '@tonic-ui/react';\nimport { MenuIcon } from '@tonic-ui/react-icons';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <OverflowTooltip\n      label=\"This is a tooltip\"\n    >\n      {({ ref, style }) => (\n        <Flex alignItems=\"center\" columnGap=\"2x\">\n          <MenuIcon />\n          <Text ref={ref} {...style}>\n            This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n          </Text>\n        </Flex>\n      )}\n    </OverflowTooltip>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(t.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(t.h3,{id:"preventing-tooltip-cut-off-with-popperprops",children:["Preventing tooltip cut-off with ",(0,i.jsx)(t.code,{children:"PopperProps"}),(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#preventing-tooltip-cut-off-with-popperprops",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(t.p,{children:["By default, the ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," component positions the tooltip relative to its parent container. In some cases, the tooltip content might be cut off when it extends outside the container that holds it."]}),"\n",(0,i.jsxs)(t.p,{children:["To mitigate this issue, you can pass ",(0,i.jsx)(t.code,{children:"PopperProps={{ usePortal: true }}"})," to ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," to make it positioned on the document root."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:x,file:{data:"import { OverflowTooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <OverflowTooltip\n      PopperProps={{ usePortal: true }}\n      label=\"This is a tooltip\"\n    >\n      This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n    </OverflowTooltip>\n  );\n};\n\nexport default App;",path:"pages/components/overflow-tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { OverflowTooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <OverflowTooltip\n      PopperProps={{ usePortal: true }}\n      label=\"This is a tooltip\"\n    >\n      This text string will be truncated when exceeding its container width. To see this in action, try resizing your browser viewport. If the text overflows, a tooltip will appear, displaying the full content.\n    </OverflowTooltip>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(t.h3,{id:"overflowtooltip-misalignment-with-popup-menu-items",children:["OverflowTooltip misalignment with popup menu items",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overflowtooltip-misalignment-with-popup-menu-items",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(t.p,{children:["By default, the ",(0,i.jsx)(t.code,{children:"OverflowTooltip"})," is positioned next to the cursor. However, within a popup menu, the tooltip may not align correctly with the menu items. To fix this, set ",(0,i.jsx)(t.code,{children:"PopperProps={{ usePortal: true }}"})," and ",(0,i.jsx)(t.code,{children:"nextToCursor={false}"}),"."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:u,file:{data:'import {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  OverflowTooltip,\n  Scrollbar,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst CustomOverflowTooltip = ({ children }) => {\n  return (\n    <OverflowTooltip\n      label={children}\n      PopperProps={{ usePortal: true }}\n      nextToCursor={false}\n    >\n      {children}\n    </OverflowTooltip>\n  );\n};\n\nconst App = () => {\n  return (\n    <Menu width="400px">\n      <MenuButton>Options</MenuButton>\n      <MenuList width="100%">\n        <Scrollbar maxHeight="200px" overflowX="hidden" overflowY="auto">\n          <MenuItem>\n            <CustomOverflowTooltip>\n              This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n        </Scrollbar>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default App;',path:"pages/components/overflow-tooltip/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  OverflowTooltip,\n  Scrollbar,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst CustomOverflowTooltip = ({ children }) => {\n  return (\n    <OverflowTooltip\n      label={children}\n      PopperProps={{ usePortal: true }}\n      nextToCursor={false}\n    >\n      {children}\n    </OverflowTooltip>\n  );\n};\n\nconst App = () => {\n  return (\n    <Menu width="400px">\n      <MenuButton>Options</MenuButton>\n      <MenuList width="100%">\n        <Scrollbar maxHeight="200px" overflowX="hidden" overflowY="auto">\n          <MenuItem>\n            <CustomOverflowTooltip>\n              This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.This is a very very long string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n          <MenuItem>\n            <CustomOverflowTooltip>This is a short string.</CustomOverflowTooltip>\n          </MenuItem>\n        </Scrollbar>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(t.h2,{id:"props",children:["Props",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(t.h3,{id:"overflowtooltip-1",children:["OverflowTooltip",(0,i.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overflowtooltip-1",children:(0,i.jsx)(t.svg,{children:(0,i.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{align:"left",children:"Name"}),(0,i.jsx)(t.th,{align:"left",children:"Type"}),(0,i.jsx)(t.th,{align:"left",children:"Default"}),(0,i.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"PopperComponent"}),(0,i.jsx)(t.td,{align:"left",children:"ElementType"}),(0,i.jsx)(t.td,{align:"left",children:"Popper"}),(0,i.jsx)(t.td,{align:"left",children:"The component used for the popover."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"PopperProps"}),(0,i.jsx)(t.td,{align:"left",children:"object"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsx)(t.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"TooltipArrowComponent"}),(0,i.jsx)(t.td,{align:"left",children:"ElementType"}),(0,i.jsx)(t.td,{align:"left",children:"TooltipArrow"}),(0,i.jsx)(t.td,{align:"left",children:"The component used for the tooltip arrow."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"TooltipArrowProps"}),(0,i.jsx)(t.td,{align:"left",children:"object"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsxs)(t.td,{align:"left",children:["Props applied to the ",(0,i.jsx)(t.code,{children:"TooltipArrow"})," component."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"TransitionComponent"}),(0,i.jsx)(t.td,{align:"left",children:"ElementType"}),(0,i.jsx)(t.td,{align:"left",children:"Grow"}),(0,i.jsx)(t.td,{align:"left",children:"The component used for the transition."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"TransitionProps"}),(0,i.jsx)(t.td,{align:"left",children:"object"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsxs)(t.td,{align:"left",children:["Props applied to the ",(0,i.jsx)(t.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"TransitionProps.appear"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"true"}),(0,i.jsx)(t.td,{align:"left"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"arrow"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"false"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", adds an arrow to the tooltip."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"children"}),(0,i.jsxs)(t.td,{align:"left",children:["ReactNode | ",(0,i.jsx)(t.code,{children:"(context) => ReactNode"})]}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsx)(t.td,{align:"left"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"closeOnClick"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"true"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", close the tooltip on click."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"closeOnEsc"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"true"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", close the tooltip when pressing the escape key."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"closeOnMouseDown"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"false"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", close the tooltip while the mouse is down."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"defaultIsOpen"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"false"}),(0,i.jsx)(t.td,{align:"left",children:"Whether the tooltip will be open by default."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"disabled"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the tooltip will not display."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"enterDelay"}),(0,i.jsx)(t.td,{align:"left",children:"number"}),(0,i.jsx)(t.td,{align:"left",children:"100"}),(0,i.jsx)(t.td,{align:"left",children:"The delay in milliseconds before the tooltip appears."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"followCursor"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the tooltip will follow the cursor."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"isOpen"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", show the tooltip."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"label"}),(0,i.jsx)(t.td,{align:"left",children:"string | ReactNode"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsx)(t.td,{align:"left",children:"If the tooltip label is a blank or empty string, the tooltip will not display."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"leaveDelay"}),(0,i.jsx)(t.td,{align:"left",children:"number"}),(0,i.jsx)(t.td,{align:"left",children:"0"}),(0,i.jsx)(t.td,{align:"left",children:"The delay in milliseconds before the tooltip disappears."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"nextToCursor"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"true"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the tooltip will be positioned next to the cursor."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"offset"}),(0,i.jsx)(t.td,{align:"left",children:"[skidding, distance]"}),(0,i.jsx)(t.td,{align:"left",children:"[0, 8]"}),(0,i.jsx)(t.td,{align:"left",children:"The skidding and distance of the tooltip."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"onClose"}),(0,i.jsx)(t.td,{align:"left",children:"function"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsx)(t.td,{align:"left",children:"Callback fired when the tooltip is closed."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"onOpen"}),(0,i.jsx)(t.td,{align:"left",children:"function"}),(0,i.jsx)(t.td,{align:"left"}),(0,i.jsx)(t.td,{align:"left",children:"Callback fired when the tooltip is opened."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"placement"}),(0,i.jsx)(t.td,{align:"left",children:"PopperJS.Placement"}),(0,i.jsx)(t.td,{align:"left",children:"'bottom'"}),(0,i.jsx)(t.td,{align:"left",children:"Position the tooltip relative to the trigger element as well as surrounding elements. One of: 'top', 'bottom', 'right', 'left', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'right-start', 'right-end', 'left-start', 'left-end'"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{align:"left",children:"shouldWrapChildren"}),(0,i.jsx)(t.td,{align:"left",children:"boolean"}),(0,i.jsx)(t.td,{align:"left",children:"false"}),(0,i.jsxs)(t.td,{align:"left",children:["If ",(0,i.jsx)(t.code,{children:"true"}),", the tooltip will be wrapped in a ",(0,i.jsx)(t.code,{children:"Box"})," component. Otherwise, you have to ensure tooltip has only one child node."]})]})]})]})]})}var I=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,l.ah)(),e.components).wrapper;return t?(0,i.jsx)(t,Object.assign({},e,{children:(0,i.jsx)(O,e)})):O(e)}},96699:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/overflow-tooltip",function(){return n(6696)}])},53310:function(e,t,n){"use strict";n.d(t,{Z:function(){return p}});var i=n(53860),l=n(32502),o=n(2784),r=n(39108),s=n(59804),a=n(99870),d=n(52903),c=["children"],h=(0,o.forwardRef)(function(e,t){var n=e.children,h=(0,i.Kd)(e,c),p=(0,o.useRef)(),f=(0,o.useState)(),u=(0,i.ZQ)(f,2),x=u[0],g=u[1],m=(0,s.k)(),v=(0,o.useCallback)(function(e,t){if("width"!==t&&"height"!==t)return console.error("Invalid size property: ".concat(t,". Use 'width' or 'height'.")),!1;var n,i,l,o,r=e.style[t],s=null===(n=e.getClientRects())||void 0===n?void 0:null===(i=n[0])||void 0===i?void 0:i[t];e.style[t]="max-content";var a=null===(l=e.getClientRects())||void 0===l?void 0:null===(o=l[0])||void 0===o?void 0:o[t];return(e.style[t]=r,"width"===t)?s<a||e.scrollWidth>e.clientWidth:"height"===t&&(s<a||e.scrollHeight>e.clientHeight)},[]),w=(0,o.useCallback)(function(){return p.current},[]),T=(0,o.useCallback)(function(e){var t=e.currentTarget,n=v(t,"width"),i=v(t,"height");g(n||i)},[v]),j=(0,o.useCallback)(function(e){g(!1)},[]);return(0,l.Z)(w,"mouseenter",T),(0,l.Z)(w,"mouseleave",j),(0,d.tZ)(a.Z,(0,i.Zj)((0,i.Zj)({ref:t,arrow:!1,disabled:!x,nextToCursor:!0},h),{},{children:"function"==typeof n?n({ref:p,style:m}):(0,d.tZ)(r.Z,{ref:p,children:n})}))});h.displayName="OverflowTooltip";var p=h},39108:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var i=n(53860),l=n(2784),o=n(70758),r=n(59804),s=n(52903),a=(0,l.forwardRef)(function(e,t){var n=(0,r.k)();return(0,s.tZ)(o.Z,(0,i.Zj)((0,i.Zj)({ref:t},n),e))});a.displayName="Truncate";var d=a},59804:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var i=function(){return{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}}}},function(e){e.O(0,[978,2888,9774,179],function(){return e(e.s=96699)}),_N_E=e.O()}]);
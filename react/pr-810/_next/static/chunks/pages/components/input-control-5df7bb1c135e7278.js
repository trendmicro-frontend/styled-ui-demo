(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1732],{61014:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return index_page}});var r=t(52322),o=t(45392),l=t(83449),a=t(67569),i=t(2784);function _slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var input_adornments=function(){var e=_slicedToArray((0,a.useColorMode)(),1)[0],n=_slicedToArray((0,a.useColorStyle)({colorMode:e}),1)[0],t=_slicedToArray((0,i.useState)(!1),2),r=t[0],o=t[1],l=n.color.tertiary;return i.createElement(a.Flex,{direction:"column",rowGap:"4x"},i.createElement(a.InputControl,{placeholder:"Mobile phone number",startAdornment:i.createElement(a.InputAdornment,null,i.createElement(a.Icon,{icon:"mobile",color:l}))}),i.createElement(a.InputControl,{placeholder:"yyyy-MM-dd",defaultValue:new Date().toISOString().substr(0,10),startAdornment:i.createElement(a.InputAdornment,null,i.createElement(a.Icon,{icon:"calendar",color:l}))}),i.createElement(a.InputControl,{placeholder:"Enter the amount",startAdornment:i.createElement(a.InputAdornment,null,i.createElement(a.Text,{width:"4x",textAlign:"center",color:l},"$")),endAdornment:i.createElement(a.InputAdornment,null,i.createElement(a.Icon,{icon:"check",color:"green:50"}))}),i.createElement(a.InputControl,{type:r?"text":"password",defaultValue:"Revealed Password",placeholder:"Password",endAdornment:i.createElement(a.InputAdornment,null,i.createElement(a.ButtonBase,{onClick:function(){return o(function(e){return!e})}},i.createElement(a.Icon,{icon:r?"view":"view-off",color:l})))}))},c=t(28165),s=t(49427);function usage_slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return usage_arrayLikeToArray(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return usage_arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function usage_arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var FormGroup=function(e){return i.createElement(a.Box,_extends({mb:"4x"},e))},useSelection=function(e){var n=usage_slicedToArray((0,i.useState)(e),2),t=n[0],r=n[1];return[t,function(e){return function(){return r(e)}}]},usage=function(){var e=usage_slicedToArray(useSelection("md"),2),n=e[0],t=e[1],r=usage_slicedToArray(useSelection("outline"),2),o=r[0],l=r[1],d=usage_slicedToArray((0,s.useToggle)(!1),2),u=d[0],p=d[1],m=usage_slicedToArray((0,s.useToggle)(!1),2),h=m[0],x=m[1],f=usage_slicedToArray((0,s.useToggle)(!1),2),g=f[0],y=f[1],b=usage_slicedToArray((0,s.useToggle)(!1),2),v=b[0],j=b[1];return i.createElement(i.Fragment,null,i.createElement(a.Box,{mb:"4x"},i.createElement(a.Text,{fontSize:"lg",lineHeight:"lg"},"InputControl props")),i.createElement(FormGroup,null,i.createElement(a.Box,{mb:"2x"},i.createElement(a.TextLabel,null,"size")),i.createElement(a.ButtonGroup,{variant:"secondary",css:(0,c.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["sm","md","lg"].map(function(e){return i.createElement(a.Button,{key:e,selected:e===n,onClick:t(e),minWidth:"15x"},e)}))),i.createElement(FormGroup,null,i.createElement(a.Box,{mb:"2x"},i.createElement(a.TextLabel,null,"variant")),i.createElement(a.ButtonGroup,{variant:"secondary",css:(0,c.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["outline","filled","flush","unstyled"].map(function(e){return i.createElement(a.Button,{key:e,selected:e===o,onClick:l(e),minWidth:"15x"},e)}))),i.createElement(FormGroup,null,i.createElement(a.TextLabel,{display:"flex",alignItems:"center"},i.createElement(a.Checkbox,{checked:u,onChange:function(){return p()}}),i.createElement(a.Space,{width:"2x"}),i.createElement(a.Text,{fontFamily:"mono",whiteSpace:"nowrap"},"disabled"))),i.createElement(FormGroup,null,i.createElement(a.TextLabel,{display:"flex",alignItems:"center"},i.createElement(a.Checkbox,{checked:h,onChange:function(){return x()}}),i.createElement(a.Space,{width:"2x"}),i.createElement(a.Text,{fontFamily:"mono",whiteSpace:"nowrap"},"error"))),i.createElement(FormGroup,null,i.createElement(a.TextLabel,{display:"flex",alignItems:"center"},i.createElement(a.Checkbox,{checked:g,onChange:function(){return y()}}),i.createElement(a.Space,{width:"2x"}),i.createElement(a.Text,{fontFamily:"mono",whiteSpace:"nowrap"},"readOnly"))),i.createElement(FormGroup,null,i.createElement(a.TextLabel,{display:"flex",alignItems:"center"},i.createElement(a.Checkbox,{checked:v,onChange:function(){return j()}}),i.createElement(a.Space,{width:"2x"}),i.createElement(a.Text,{fontFamily:"mono",whiteSpace:"nowrap"},"required"))),i.createElement(a.Divider,{my:"4x"}),i.createElement(a.InputControl,{placeholder:"Placeholder text",disabled:u,error:h,readOnly:g,required:v,size:n,variant:o}))};function _createMdxContent(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n","\n",(0,r.jsx)(n.h1,{id:"inputcontrol",children:"InputControl"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"InputControl"})," is built on top of the native ",(0,r.jsx)(n.code,{children:"Input"})," with the same appearance and behavior, except that it allows you to customize the input in a more convenient way. For example, input adornments can be added to the start, end, or both sides of the input."]}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"input",children:"Input"})," component for more information about the native input."]}),"\n",(0,r.jsxs)(n.h2,{id:"import",children:["Import",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {\n  InputAdornment,\n  InputControl,\n} from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"usage",children:["Usage",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(l.Z,{component:usage,file:{data:'import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Divider,\n  InputControl,\n  Space,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React, { useState } from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [size, changeSizeBy] = useSelection(\'md\');\n  const [variant, changeVariantBy] = useSelection(\'outline\');\n  const [disabled, toggleDisabled] = useToggle(false);\n  const [error, toggleError] = useToggle(false);\n  const [readOnly, toggleReadOnly] = useToggle(false);\n  const [required, toggleRequired] = useToggle(false);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          InputControl props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'sm\', \'md\', \'lg\'].map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'outline\', \'filled\', \'flush\', \'unstyled\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={changeVariantBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={disabled}\n            onChange={() => toggleDisabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">disabled</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={error}\n            onChange={() => toggleError()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">error</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={readOnly}\n            onChange={() => toggleReadOnly()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">readOnly</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={required}\n            onChange={() => toggleRequired()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">required</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <InputControl\n        placeholder="Placeholder text"\n        disabled={disabled}\n        error={error}\n        readOnly={readOnly}\n        required={required}\n        size={size}\n        variant={variant}\n      />\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/input-control/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Divider,\n  InputControl,\n  Space,\n  Text,\n  TextLabel,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React, { useState } from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [size, changeSizeBy] = useSelection(\'md\');\n  const [variant, changeVariantBy] = useSelection(\'outline\');\n  const [disabled, toggleDisabled] = useToggle(false);\n  const [error, toggleError] = useToggle(false);\n  const [readOnly, toggleReadOnly] = useToggle(false);\n  const [required, toggleRequired] = useToggle(false);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          InputControl props\n        </Text>\n      </Box>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            size\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'sm\', \'md\', \'lg\'].map(value => (\n            <Button\n              key={value}\n              selected={value === size}\n              onClick={changeSizeBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            variant\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant="secondary"\n          css={{\n            \'> *:not(:first-of-type)\': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {[\'outline\', \'filled\', \'flush\', \'unstyled\'].map(value => (\n            <Button\n              key={value}\n              selected={value === variant}\n              onClick={changeVariantBy(value)}\n              minWidth="15x"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={disabled}\n            onChange={() => toggleDisabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">disabled</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={error}\n            onChange={() => toggleError()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">error</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={readOnly}\n            onChange={() => toggleReadOnly()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">readOnly</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <TextLabel display="flex" alignItems="center">\n          <Checkbox\n            checked={required}\n            onChange={() => toggleRequired()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">required</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <InputControl\n        placeholder="Placeholder text"\n        disabled={disabled}\n        error={error}\n        readOnly={readOnly}\n        required={required}\n        size={size}\n        variant={variant}\n      />\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(n.h3,{id:"input-adornments",children:["Input adornments",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#input-adornments",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The main way to prepend or append an input adornment is to use the ",(0,r.jsx)(n.code,{children:"InputAdornment"})," component. This can be used to add a prefix, a suffix, or an action to an input. For instance, you can use an icon button to hide or reveal the password."]}),"\n",(0,r.jsx)(l.Z,{component:input_adornments,file:{data:'import {\n  ButtonBase,\n  Flex,\n  Icon,\n  InputAdornment,\n  InputControl,\n  Text,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [view, setView] = useState(false);\n  const toggleView = () => setView(view => !view);\n  const iconColor = colorStyle.color.tertiary;\n\n  return (\n    <Flex direction="column" rowGap="4x">\n      <InputControl\n        placeholder="Mobile phone number"\n        startAdornment={(\n          <InputAdornment>\n            <Icon icon="mobile" color={iconColor} />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        placeholder="yyyy-MM-dd"\n        defaultValue={new Date().toISOString().substr(0, 10)}\n        startAdornment={(\n          <InputAdornment>\n            <Icon icon="calendar" color={iconColor} />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        placeholder="Enter the amount"\n        startAdornment={(\n          <InputAdornment>\n            <Text width="4x" textAlign="center" color={iconColor}>$</Text>\n          </InputAdornment>\n        )}\n        endAdornment={(\n          <InputAdornment>\n            <Icon icon="check" color="green:50" />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        type={view ? \'text\' : \'password\'}\n        defaultValue="Revealed Password"\n        placeholder="Password"\n        endAdornment={(\n          <InputAdornment>\n            <ButtonBase onClick={toggleView}>\n              <Icon\n                icon={view ? \'view\' : \'view-off\'}\n                color={iconColor}\n              />\n            </ButtonBase>\n          </InputAdornment>\n        )}\n      />\n    </Flex>\n  );\n};\n\nexport default App;',path:"pages/components/input-control/index.page.mdx"},sandbox:{files:{},raw:'import {\n  ButtonBase,\n  Flex,\n  Icon,\n  InputAdornment,\n  InputControl,\n  Text,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [view, setView] = useState(false);\n  const toggleView = () => setView(view => !view);\n  const iconColor = colorStyle.color.tertiary;\n\n  return (\n    <Flex direction="column" rowGap="4x">\n      <InputControl\n        placeholder="Mobile phone number"\n        startAdornment={(\n          <InputAdornment>\n            <Icon icon="mobile" color={iconColor} />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        placeholder="yyyy-MM-dd"\n        defaultValue={new Date().toISOString().substr(0, 10)}\n        startAdornment={(\n          <InputAdornment>\n            <Icon icon="calendar" color={iconColor} />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        placeholder="Enter the amount"\n        startAdornment={(\n          <InputAdornment>\n            <Text width="4x" textAlign="center" color={iconColor}>$</Text>\n          </InputAdornment>\n        )}\n        endAdornment={(\n          <InputAdornment>\n            <Icon icon="check" color="green:50" />\n          </InputAdornment>\n        )}\n      />\n      <InputControl\n        type={view ? \'text\' : \'password\'}\n        defaultValue="Revealed Password"\n        placeholder="Password"\n        endAdornment={(\n          <InputAdornment>\n            <ButtonBase onClick={toggleView}>\n              <Icon\n                icon={view ? \'view\' : \'view-off\'}\n                color={iconColor}\n              />\n            </ButtonBase>\n          </InputAdornment>\n        )}\n      />\n    </Flex>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(n.h2,{id:"props",children:["Props",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"inputadornment",children:["InputAdornment",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#inputadornment",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"inputcontrol-1",children:["InputControl",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#inputcontrol-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"disabled"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the user cannot interact with the control."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"error"}),(0,r.jsx)(n.td,{align:"left",children:"boolean | string"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"})," or a non-empty string value is provided, the input will display an error state. The error message will also be set as the input's custom validity message using the ",(0,r.jsx)(n.code,{children:"setCustomValidity()"})," method, allowing for form validation to be performed."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"endAdornment"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["End ",(0,r.jsx)(n.code,{children:"InputAdornment"})," for this component."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"inputComponent"}),(0,r.jsx)(n.td,{align:"left",children:"ElementType"}),(0,r.jsx)(n.td,{align:"left",children:"InputBase"}),(0,r.jsx)(n.td,{align:"left",children:"The input component to render."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"inputProps"}),(0,r.jsx)(n.td,{align:"left",children:"object"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"Additional props to be applied to the input element."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"inputRef"}),(0,r.jsx)(n.td,{align:"left",children:"RefObject"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["A ",(0,r.jsx)(n.code,{children:"ref"})," to access the input element."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"size"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'md'"}),(0,r.jsxs)(n.td,{align:"left",children:["The visual size of the ",(0,r.jsx)(n.code,{children:"input"})," element. One of: 'sm', 'md', 'lg'"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"variant"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'outline'"}),(0,r.jsx)(n.td,{align:"left",children:"The variant of the input style to use. One of: 'outline', 'filled', 'flush', 'unstyled'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"startAdornment"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Start ",(0,r.jsx)(n.code,{children:"InputAdornment"})," for this component."]})]})]})]})]})}var index_page=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},83449:function(e,n,t){"use strict";t.d(n,{Z:function(){return f}});var r=t(67569),o=t(49427),l=t(5632),a=t(2784),i=t(85175),c=t(82821),s=t(90622),d=t(52057),u=t(63651),p=["size"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var m=(0,a.forwardRef)(function(e,n){var t=e.size,o=function(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}(e,p);return a.createElement(r.SVGIcon,_extends({size:t,viewBox:"0 0 1024 1024"},o),a.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});m.displayName="CodeSandboxIcon";var h=t(94981);function _slicedToArray(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t,r,o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var l=[],a=!0,i=!1;try{for(o=o.call(e);!(a=(t=o.next()).done)&&(l.push(t.value),!n||l.length!==n);a=!0);}catch(e){i=!0,r=e}finally{try{a||null==o.return||o.return()}finally{if(i)throw r}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _arrayLikeToArray(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}var x={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},Demo=function(e){var n=e.component,t=e.file,p=e.sandbox,f=(0,l.useRouter)(),g=_slicedToArray((0,a.useReducer)(function(e){return!e},!1),2),y=g[0],b=g[1],v=_slicedToArray((0,r.useColorMode)(),1)[0],j={dark:s.y,light:s.q}[v],T=_slicedToArray((0,o.useToggle)(!1),2),I=T[0],C=T[1],w=(0,c.Z)(null==t?void 0:t.data),A=w.onCopy,k=w.hasCopied,E=(0,a.useCallback)(function(){A()},[A]),S=(0,a.useCallback)(function(){(0,d.b)(p)},[p]),B=(0,a.useCallback)(function(){b(),C(!1)},[b,C]);return a.createElement(i.nu,{code:null==t?void 0:t.data,disabled:!0,language:"jsx",theme:j},a.createElement(r.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[v],p:"4x"},a.createElement(r.Box,{fontSize:"sm",lineHeight:"sm"},a.createElement(a.Fragment,{key:y},a.createElement(n,null)))),a.createElement(r.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},a.createElement(h.Z,{"data-track":I?"CodeBlock|hide_source|".concat((0,u.Z)({path:f.pathname})):"CodeBlock|show_source|".concat((0,u.Z)({path:f.pathname})),onClick:C},a.createElement(r.Tooltip,{label:I?"Hide the source":"Show the source"},a.createElement(r.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),a.createElement(h.Z,{"data-track":"CodeBlock|copy_source|".concat((0,u.Z)({path:f.pathname})),onClick:E},a.createElement(r.Tooltip,{label:k?"Copied":"Copy the source"},a.createElement(r.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),a.createElement(h.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(f.pathname),onClick:S},a.createElement(r.Tooltip,{label:"Edit in CodeSandbox"},a.createElement(m,{size:{sm:"5x",md:"4x"}}))),a.createElement(h.Z,{"data-track":"CodeBlock|reset|".concat(f.pathname),onClick:B},a.createElement(r.Tooltip,{label:"Reset the demo"},a.createElement(r.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),a.createElement(r.Fade,{in:I},a.createElement(r.Collapse,{in:I,unmountOnExit:!0},a.createElement(i.uz,{style:x}))))};Demo.displayName="Demo";var f=Demo},28054:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/input-control",function(){return t(61014)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=28054)}),_N_E=e.O()}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1447],{57570:function(n,e,r){"use strict";r.r(e),r.d(e,{default:function(){return index_page}});var o=r(52322),t=r(45392),a=r(83449),l=r(67569),i=r(2784),s=r(5081),c=["onInput"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n}).apply(this,arguments)}var AutosizeInput=function(n){var e=n.onInput,r=function(n,e){if(null==n)return{};var r,o,t=function(n,e){if(null==n)return{};var r,o,t={},a=Object.keys(n);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(t[r]=n[r]);return t}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)r=a[o],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}(n,c),o=(0,i.useRef)(),t=(0,i.useRef)(),handleInputResize=function(){if(o.current){var n=o.current,e=t.current;e.textContent=n.value,n.style.width="".concat(e.offsetWidth,"px"),n.focus()}};return(0,i.useEffect)(function(){handleInputResize()},[]),i.createElement(i.Fragment,null,i.createElement(l.Box,{as:"span",ref:t,position:"absolute",height:"0",overflow:"hidden",whiteSpace:"pre"}),i.createElement(l.InputBase,_extends({ref:o,maxWidth:"100%",minHeight:"6x",onInput:function(n){return((0,s.zU)(e)(n),n.defaultPrevented)?"":(0,s.zU)(handleInputResize)(n)}},r)))};function ownKeys(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),r.push.apply(r,o)}return r}function _objectSpread(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){var o;o=r[e],e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))})}return n}function _arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}AutosizeInput.displayName="AutosizeInput";var getSolidEditableTagStyle=function(n){var e=n.colorMode,r={dark:"white:emphasis",light:"red:100"}[e];return{_hover:{"&:not([disabled])":{backgroundColor:({dark:"gray:60",light:"gray:10"})[e]}},_invalid:{backgroundColor:({dark:"red:60",light:"red:20"})[e],color:r,"&:not([disabled]):hover":{backgroundColor:({dark:"red:50",light:"red:10"})[e],color:r}}}},getOutlineEditableTagStyle=function(n){var e=n.colorMode,r={dark:"gray:30",light:"gray:50"}[e],o={dark:"red:60",light:"red:20"}[e],t={dark:"red:50",light:"red:10"}[e],a={dark:"white:emphasis",light:"red:100"}[e];return{_hover:{"&:not([disabled])":{borderColor:({dark:"gray:30",light:"gray:50"})[e],color:r}},_focusHover:{"&:not([disabled])":{borderColor:({dark:"blue:60",light:"blue:60"})[e],color:r}},_invalid:{borderColor:o,backgroundColor:o,color:a,"&:not([disabled]):hover":{borderColor:t,backgroundColor:t,color:a},"&:not([disabled]):focus:hover":{color:a}}}},useEditableTagStyle=function(n){var e,r=n.size,o=n.variant,t=(function(n){if(Array.isArray(n))return n}(e=(0,l.useColorMode)())||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(e,1)||function(n,e){if(n){if("string"==typeof n)return _arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return _arrayLikeToArray(n,e)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],a={solid:getSolidEditableTagStyle({colorMode:t}),outline:getOutlineEditableTagStyle({colorMode:t})}[o];return _objectSpread(_objectSpread(_objectSpread({},{alignItems:"center",borderColor:"transparent",borderStyle:"solid",borderWidth:"1q",borderRadius:"sm",cursor:"cursor",display:"inline-flex",outline:"none",pl:"2x",pr:"2x"}),{sm:{fontSize:"xs",lineHeight:1,minHeight:"4x"},md:{fontSize:"xs",lineHeight:"xs",minHeight:"6x",py:"1h"},lg:{fontSize:"md",lineHeight:"md",minHeight:"8x",py:"1x"}}[r]),a)},d=["children","disabled","isClosable","labelMaxWidth","size","variant","onChange","onClick","onClose","onFocus"];function EditableTag_extends(){return(EditableTag_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n}).apply(this,arguments)}function EditableTag_slicedToArray(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return EditableTag_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return EditableTag_arrayLikeToArray(n,e)}}(n,e)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function EditableTag_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var u=(0,i.forwardRef)(function(n,e){var r,o=n.children,t=n.disabled,a=n.isClosable,c=void 0===a||a,u=n.labelMaxWidth,g=void 0===u?0:u,p=n.size,h=void 0===p?"md":p,b=n.variant,f=void 0===b?"solid":b,m=n.onChange,y=n.onClick,x=n.onClose,T=n.onFocus,C=function(n,e){if(null==n)return{};var r,o,t=function(n,e){if(null==n)return{};var r,o,t={},a=Object.keys(n);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(t[r]=n[r]);return t}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)r=a[o],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}(n,d);m=(0,s.zU)(m),y=(0,s.zU)(y),x=(0,s.zU)(x);var v=EditableTag_slicedToArray((0,i.useState)(o),2),k=v[0],j=v[1],S=EditableTag_slicedToArray((0,i.useState)(!1),2),I=S[0],E=S[1],handleInputVisible=function(){return E(!0)},handleInputHidden=function(){return E(!1)},updateTag=function(n){j(n),m({value:n}),handleInputHidden()},w=(0,s.zU)(T),_=useEditableTagStyle({size:h,variant:f}),A=(0,l.useTheme)(),O={maxWidth:"calc(".concat(g,"px - ").concat(c?null==A?void 0:null===(r=A.sizes)||void 0===r?void 0:r["5x"]:0,")"),overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"};return I?i.createElement(AutosizeInput,{defaultValue:k,onBlur:function(n){updateTag(n.target.value)},onKeyUp:function(n){var e=n.keyCode;13===e&&updateTag(n.target.value),27===e&&handleInputHidden()}}):i.createElement(l.Tag,EditableTag_extends({ref:e,variant:f,size:h,disabled:t,tabIndex:t?"-1":"0",onClick:t?void 0:function(n){n.stopPropagation(),handleInputVisible(),y(n)},onFocus:t?void 0:w,onKeyUp:t?void 0:function(n){13===n.keyCode&&handleInputVisible()}},_,C),i.createElement(l.Box,EditableTag_extends({display:"inline-block"},g&&O),k),!!c&&i.createElement(l.TagCloseButton,{disabled:t,tabIndex:"-1",ml:"2x",onClick:function(n){n.stopPropagation(),x(n)}}))});u.displayName="EditableTag";var g=["onBlur","onCreate","onChange","onKeyUp","onPaste"];function TagInput_extends(){return(TagInput_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n}).apply(this,arguments)}function TagInput_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var p=(0,i.forwardRef)(function(n,e){var r,o=n.onBlur,t=n.onCreate,a=n.onChange,s=n.onKeyUp,c=n.onPaste,d=function(n,e){if(null==n)return{};var r,o,t=function(n,e){if(null==n)return{};var r,o,t={},a=Object.keys(n);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(t[r]=n[r]);return t}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)r=a[o],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}(n,g),u=function(n){if(Array.isArray(n))return n}(r=(0,i.useState)(""))||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(r,2)||function(n,e){if(n){if("string"==typeof n)return TagInput_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return TagInput_arrayLikeToArray(n,e)}}(r,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),p=u[0],h=u[1],createTags=function(n){"function"==typeof t&&t(n),h("")};return i.createElement(l.InputBase,TagInput_extends({ref:e,value:p,onBlur:function(n){n.stopPropagation();var e=n.target.value;e&&createTags([e]),"function"==typeof o&&o(n)},onChange:function(n){h(n.target.value),"function"==typeof a&&a(n)},onKeyUp:function(n){var e=n.keyCode,r=n.target.value;13===e&&createTags([r]),(186===e||188===e)&&createTags([r=r.substring(0,r.length-1)]),27===e&&h(""),"function"==typeof s&&s(n)},onPaste:function(n){n.preventDefault(),createTags(n.clipboardData.getData("text").split(RegExp(",|;|\n|\r|\r\n"))),"function"==typeof c&&c(n)}},d))});function creating_tags_extends(){return(creating_tags_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n}).apply(this,arguments)}function _toConsumableArray(n){return function(n){if(Array.isArray(n))return creating_tags_arrayLikeToArray(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||creating_tags_unsupportedIterableToArray(n)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function creating_tags_slicedToArray(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||creating_tags_unsupportedIterableToArray(n,e)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function creating_tags_unsupportedIterableToArray(n,e){if(n){if("string"==typeof n)return creating_tags_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return creating_tags_arrayLikeToArray(n,e)}}function creating_tags_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}p.displayName="TagInput";var useInputTagStyle=function(n){var e=n.isFocused,r=creating_tags_slicedToArray((0,l.useColorMode)(),1)[0];return{backgroundColor:({dark:"transparent",light:"white"})[r],border:1,borderColor:e?({dark:"blue:60",light:"blue:60"})[r]:({dark:"gray:60",light:"gray:30"})[r],borderRadius:"sm",fontSize:"sm",lineHeight:"sm",height:"9x",px:"calc(.75rem - 1px)",py:"calc(.375rem - 1px)",_hover:{borderColor:({dark:"blue:50",light:"blue:50"})[r]},_disabled:{borderColor:({dark:"gray:60",light:"gray:30"})[r],cursor:"not-allowed",opacity:({dark:.28,light:.3})[r]},_invalid:{borderColor:({dark:"red:50",light:"red:60"})[r]}}},creating_tags=function(){var n=creating_tags_slicedToArray((0,l.useColorMode)(),1)[0],e=(0,i.useRef)(),r=creating_tags_slicedToArray((0,i.useState)([]),2),o=r[0],t=r[1],a=creating_tags_slicedToArray((0,i.useState)(!1),2),s=a[0],c=a[1],d=creating_tags_slicedToArray((0,i.useState)(!0),2),g=d[0],h=d[1],b=creating_tags_slicedToArray((0,i.useState)(!1),2),f=b[0],m=b[1],updateTag=function(n){var e=n.id,r=n.value,a=_toConsumableArray(o),l=a.find(function(n){return n.id===e});l.value=r||l.value,t(a)},y=useInputTagStyle({isFocused:f});return(0,i.useEffect)(function(){var verifyTag=function(n){var e=n.id,r=n.value;return o.find(function(n){return n.value===r&&n.id!==e})?"Duplicate entries":""},n=o.map(function(n){return n.error=verifyTag({id:n.id,value:n.value}),n}).filter(function(n){return n.error.length>0});n.length>=1&&c(!0),0===n.length&&c(!1)},[o]),i.createElement(i.Fragment,null,i.createElement(l.Box,creating_tags_extends({"aria-invalid":s,display:"flex",onClick:function(){e.current.focus()}},y),g&&i.createElement(l.Text,{display:"inline-flex",py:"2q",color:{dark:"white:tertiary",light:"black:tertiary"}[n]},"Add new tag"),o.map(function(n){var r=n.id,a=n.value,l=n.error;return i.createElement(u,{key:r,mr:"2x",title:a,error:!!l,onChange:function(n){updateTag({id:r,value:n.value})},onClose:function(){t(o.filter(function(n){return n.id!==r})),e.current.focus()}},a)}),i.createElement(p,{ref:e,display:"inline-flex",height:"6x",onBlur:function(){m(!1),0===o.length&&h(!0)},onCreate:function(n){0!==n.length&&(n=n.filter(function(n){return""!==n.trim()}).map(function(n,e){return{id:new Date().getTime()+e,value:n}}),t([].concat(_toConsumableArray(o),_toConsumableArray(n))))},onFocus:function(){m(!0),h(!1)},onKeyUp:function(n){var e=n.keyCode,r=n.target.value;8==e&&!r&&o.length>0&&(o.splice(o.length-1,1),t(_toConsumableArray(o)))}})),s&&i.createElement(l.Text,{color:{dark:"red:50",light:"red:60"}[n]},"There are invalid entries."))},h=r(49427);function using_the_tagclosebutton_component_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var using_the_tagclosebutton_component=function(){var n,e=function(n){if(Array.isArray(n))return n}(n=(0,h.useToggle)(!0))||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,2)||function(n,e){if(n){if("string"==typeof n)return using_the_tagclosebutton_component_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return using_the_tagclosebutton_component_arrayLikeToArray(n,e)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=e[0],o=e[1];return i.createElement(l.Fade,{in:r,unmountOnExit:!0},i.createElement(l.Tag,{variant:"solid",onClose:o},i.createElement(l.Text,null,"This is a tag"),i.createElement(l.TagCloseButton,{ml:"2x","data-test":"tag-close-button"})))};function using_the_isclosable_prop_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var using_the_isclosable_prop=function(){var n,e=function(n){if(Array.isArray(n))return n}(n=(0,h.useToggle)(!0))||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,2)||function(n,e){if(n){if("string"==typeof n)return using_the_isclosable_prop_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return using_the_isclosable_prop_arrayLikeToArray(n,e)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=e[0],o=e[1];return i.createElement(l.Fade,{in:r,unmountOnExit:!0},i.createElement(l.Tag,{variant:"solid",isClosable:!0,onClose:o},i.createElement(l.Text,null,"This is a tag")))},states=function(){return i.createElement(l.Stack,{spacing:"4x"},i.createElement(l.Stack,{direction:"row",spacing:"4x",shouldWrapChildren:!0},i.createElement(l.Tag,null,"Normal"),i.createElement(l.Tag,{disabled:!0},"Disabled"),i.createElement(l.Tag,{error:!0},"Error")),i.createElement(l.Stack,{direction:"row",spacing:"4x",shouldWrapChildren:!0},i.createElement(l.Tag,{variant:"outline"},"Normal"),i.createElement(l.Tag,{variant:"outline",disabled:!0},"Disabled"),i.createElement(l.Tag,{variant:"outline",error:!0},"Error")))},sizes=function(){return i.createElement(l.Stack,{spacing:"4x"},i.createElement(l.Stack,{direction:"row",alignItems:"center",spacing:"2x"},i.createElement(l.Tag,{size:"sm"},"Small"),i.createElement(l.Tag,{size:"md"},"Medium"),i.createElement(l.Tag,{size:"lg"},"Large")),i.createElement(l.Stack,{direction:"row",alignItems:"center",spacing:"2x"},i.createElement(l.Tag,{size:"sm",borderRadius:"lg"},"Small"),i.createElement(l.Tag,{size:"md",borderRadius:"lg"},"Medium"),i.createElement(l.Tag,{size:"lg",borderRadius:"32px"},"Large")),i.createElement(l.Stack,{direction:"row",alignItems:"center",spacing:"2x"},i.createElement(l.Tag,{size:"sm",variant:"outline"},"Small"),i.createElement(l.Tag,{size:"md",variant:"outline"},"Medium"),i.createElement(l.Tag,{size:"lg",variant:"outline"},"Large")),i.createElement(l.Stack,{direction:"row",alignItems:"center",spacing:"2x"},i.createElement(l.Tag,{size:"sm",variant:"outline",borderRadius:"lg"},"Small"),i.createElement(l.Tag,{size:"md",variant:"outline",borderRadius:"lg"},"Medium"),i.createElement(l.Tag,{size:"lg",variant:"outline",borderRadius:"32px"},"Large")))};function custom_colors_arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var custom_colors=function(){var n,e=(function(n){if(Array.isArray(n))return n}(n=(0,l.useColorMode)())||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,1)||function(n,e){if(n){if("string"==typeof n)return custom_colors_arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return custom_colors_arrayLikeToArray(n,e)}}(n,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],r={dark:[{label:"Light gray",backgroundColor:"gray:70",color:"gray:20"},{label:"Red",backgroundColor:"red:80",color:"red:20"},{label:"Magenta",backgroundColor:"magenta:80",color:"magenta:20"},{label:"Purple",backgroundColor:"purple:80",color:"purple:20"},{label:"Blue",backgroundColor:"blue:80",color:"blue:20"},{label:"Green",backgroundColor:"green:70",color:"green:20"},{label:"Teal",backgroundColor:"teal:70",color:"teal:20"},{label:"Cyan",backgroundColor:"cyan:70",color:"cyan:20"}],light:[{label:"Light gray",backgroundColor:"gray:20",color:"black:emphasis"},{label:"Red",backgroundColor:"red:20",color:"red:100"},{label:"Magenta",backgroundColor:"magenta:20",color:"magenta:100"},{label:"Purple",backgroundColor:"purple:20",color:"purple:100"},{label:"Blue",backgroundColor:"blue:20",color:"blue:100"},{label:"Green",backgroundColor:"green:20",color:"green:100"},{label:"Teal",backgroundColor:"teal:20",color:"teal:100"},{label:"Cyan",backgroundColor:"cyan:20",color:"cyan:100"}]}[e],o={dark:[{label:"Light gray",borderColor:"gray:40",color:"gray:40"},{label:"Red",borderColor:"red:50",color:"red:50"},{label:"Magenta",borderColor:"magenta:50",color:"magenta:50"},{label:"Purple",borderColor:"purple:50",color:"purple:50"},{label:"Blue",borderColor:"blue:50",color:"blue:50"},{label:"Green",borderColor:"green:50",color:"green:50"},{label:"Teal",borderColor:"teal:50",color:"teal:50"},{label:"Cyan",borderColor:"cyan:50",color:"cyan:50"}],light:[{label:"Light gray",borderColor:"gray:60",color:"gray:60"},{label:"Red",borderColor:"red:60",color:"red:60"},{label:"Magenta",borderColor:"magenta:60",color:"magenta:60"},{label:"Purple",borderColor:"purple:50",color:"purple:50"},{label:"Blue",borderColor:"blue:60",color:"blue:60"},{label:"Green",borderColor:"green:60",color:"green:60"},{label:"Teal",borderColor:"teal:60",color:"teal:60"},{label:"Cyan",borderColor:"cyan:60",color:"cyan:60"}]}[e];return i.createElement(l.Stack,{spacing:"4x"},i.createElement(l.Stack,{direction:"row",spacing:"2x",shouldWrapChildren:!0},r.map(function(n,e){var r=n.backgroundColor,o=n.color,t=n.label;return i.createElement(l.Tag,{key:t,backgroundColor:r,color:o,variant:"solid"},t)})),i.createElement(l.Stack,{direction:"row",spacing:"2x",shouldWrapChildren:!0},r.map(function(n,e){var r=n.backgroundColor,o=n.color,t=n.label;return i.createElement(l.Tag,{key:t,backgroundColor:r,color:o,variant:"solid",borderRadius:"lg"},t)})),i.createElement(l.Stack,{direction:"row",spacing:"2x",shouldWrapChildren:!0},o.map(function(n,e){var r=n.borderColor,o=n.color,t=n.label;return i.createElement(l.Tag,{key:t,borderColor:r,color:o,variant:"outline"},t)})),i.createElement(l.Stack,{direction:"row",spacing:"2x",shouldWrapChildren:!0},o.map(function(n,e){var r=n.borderColor,o=n.color,t=n.label;return i.createElement(l.Tag,{key:t,borderColor:r,color:o,variant:"outline",borderRadius:"lg"},t)})))},variants=function(){return i.createElement(l.Stack,{direction:"row",spacing:"2x",shouldWrapChildren:!0},i.createElement(l.Tag,{variant:"solid"},"Solid Tag"),i.createElement(l.Tag,{variant:"outline"},"Outline Tag"))},basic=function(){return i.createElement(l.Tag,null,"Sample Tag")};function _createMdxContent(n){var e=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",h4:"h4",blockquote:"blockquote",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),n.components);return(0,o.jsxs)(e.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,o.jsx)(e.h1,{id:"tag",children:"Tag"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.code,{children:"Tag"})," is used for items that need to be labeled, categorized, or organized using keywords that describe them."]}),"\n",(0,o.jsxs)(e.h2,{id:"import",children:["Import",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"import {\n  Tag,\n  TagCloseButton,\n} from '@tonic-ui/react';\n"})}),"\n",(0,o.jsxs)(e.h2,{id:"usage",children:["Usage",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(a.Z,{component:basic,file:{data:"import { Tag } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tag>Sample Tag</Tag>\n);\n\nexport default App;",path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:"import { Tag } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tag>Sample Tag</Tag>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h3,{id:"variants",children:["Variants",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#variants",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.p,{children:["Use the ",(0,o.jsx)(e.code,{children:"variant"})," prop to change the visual style of the ",(0,o.jsx)(e.code,{children:"Tag"}),". You can set the value to ",(0,o.jsx)(e.code,{children:"solid"}),", ",(0,o.jsx)(e.code,{children:"outline"}),"."]}),"\n",(0,o.jsx)(a.Z,{component:variants,file:{data:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack direction="row" spacing="2x" shouldWrapChildren>\n    <Tag variant="solid">Solid Tag</Tag>\n    <Tag variant="outline">Outline Tag</Tag>\n  </Stack>\n);\n\nexport default App;',path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack direction="row" spacing="2x" shouldWrapChildren>\n    <Tag variant="solid">Solid Tag</Tag>\n    <Tag variant="outline">Outline Tag</Tag>\n  </Stack>\n);\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h3,{id:"custom-colors",children:["Custom colors",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#custom-colors",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.p,{children:["The color of the tag can be changed by passing the ",(0,o.jsx)(e.code,{children:"backgroundColor"}),", ",(0,o.jsx)(e.code,{children:"borderColor"}),", and ",(0,o.jsx)(e.code,{children:"color"})," props. See the ",(0,o.jsx)(e.a,{href:"../theme/colors",children:"colors"})," section to learn more about colors."]}),"\n",(0,o.jsx)(a.Z,{component:custom_colors,file:{data:"import { Stack, Tag, useColorMode } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const solidColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:70',\n        color: 'gray:20'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:80',\n        color: 'red:20'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:80',\n        color: 'magenta:20'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:80',\n        color: 'purple:20'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:80',\n        color: 'blue:20'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:70',\n        color: 'green:20'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:70',\n        color: 'teal:20'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:70',\n        color: 'cyan:20'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:20',\n        color: 'black:emphasis'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:20',\n        color: 'red:100'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:20',\n        color: 'magenta:100'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:20',\n        color: 'purple:100'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:20',\n        color: 'blue:100'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:20',\n        color: 'green:100'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:20',\n        color: 'teal:100'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:20',\n        color: 'cyan:100'\n      },\n    ]\n  }[colorMode];\n  const outlineColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:40',\n        color: 'gray:40'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:50',\n        color: 'red:50'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:50',\n        color: 'magenta:50'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:50',\n        color: 'blue:50'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:50',\n        color: 'green:50'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:50',\n        color: 'teal:50'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:50',\n        color: 'cyan:50'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:60',\n        color: 'gray:60'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:60',\n        color: 'red:60'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:60',\n        color: 'magenta:60'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:60',\n        color: 'blue:60'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:60',\n        color: 'green:60'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:60',\n        color: 'teal:60'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:60',\n        color: 'cyan:60'\n      },\n    ]\n  }[colorMode];\n\n  return (\n    <Stack spacing=\"4x\">\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default App;",path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:"import { Stack, Tag, useColorMode } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const solidColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:70',\n        color: 'gray:20'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:80',\n        color: 'red:20'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:80',\n        color: 'magenta:20'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:80',\n        color: 'purple:20'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:80',\n        color: 'blue:20'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:70',\n        color: 'green:20'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:70',\n        color: 'teal:20'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:70',\n        color: 'cyan:20'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:20',\n        color: 'black:emphasis'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:20',\n        color: 'red:100'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:20',\n        color: 'magenta:100'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:20',\n        color: 'purple:100'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:20',\n        color: 'blue:100'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:20',\n        color: 'green:100'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:20',\n        color: 'teal:100'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:20',\n        color: 'cyan:100'\n      },\n    ]\n  }[colorMode];\n  const outlineColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:40',\n        color: 'gray:40'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:50',\n        color: 'red:50'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:50',\n        color: 'magenta:50'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:50',\n        color: 'blue:50'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:50',\n        color: 'green:50'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:50',\n        color: 'teal:50'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:50',\n        color: 'cyan:50'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:60',\n        color: 'gray:60'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:60',\n        color: 'red:60'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:60',\n        color: 'magenta:60'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:60',\n        color: 'blue:60'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:60',\n        color: 'green:60'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:60',\n        color: 'teal:60'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:60',\n        color: 'cyan:60'\n      },\n    ]\n  }[colorMode];\n\n  return (\n    <Stack spacing=\"4x\">\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h3,{id:"sizes",children:["Sizes",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#sizes",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.p,{children:["Use the ",(0,o.jsx)(e.code,{children:"size"})," prop to change the size of the ",(0,o.jsx)(e.code,{children:"Tag"}),". You can set the value to ",(0,o.jsx)(e.code,{children:"sm"}),", ",(0,o.jsx)(e.code,{children:"md"}),", or ",(0,o.jsx)(e.code,{children:"lg"}),"."]}),"\n",(0,o.jsx)(a.Z,{component:sizes,file:{data:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm">Small</Tag>\n      <Tag size="md">Medium</Tag>\n      <Tag size="lg">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" borderRadius="lg">Small</Tag>\n      <Tag size="md" borderRadius="lg">Medium</Tag>\n      <Tag size="lg" borderRadius="32px">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" variant="outline">Small</Tag>\n      <Tag size="md" variant="outline">Medium</Tag>\n      <Tag size="lg" variant="outline">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" variant="outline" borderRadius="lg">Small</Tag>\n      <Tag size="md" variant="outline" borderRadius="lg">Medium</Tag>\n      <Tag size="lg" variant="outline" borderRadius="32px">Large</Tag>\n    </Stack>\n  </Stack>\n);\n\nexport default App;',path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm">Small</Tag>\n      <Tag size="md">Medium</Tag>\n      <Tag size="lg">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" borderRadius="lg">Small</Tag>\n      <Tag size="md" borderRadius="lg">Medium</Tag>\n      <Tag size="lg" borderRadius="32px">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" variant="outline">Small</Tag>\n      <Tag size="md" variant="outline">Medium</Tag>\n      <Tag size="lg" variant="outline">Large</Tag>\n    </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n      <Tag size="sm" variant="outline" borderRadius="lg">Small</Tag>\n      <Tag size="md" variant="outline" borderRadius="lg">Medium</Tag>\n      <Tag size="lg" variant="outline" borderRadius="32px">Large</Tag>\n    </Stack>\n  </Stack>\n);\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h3,{id:"states",children:["States",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#states",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(a.Z,{component:states,file:{data:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <Stack direction="row" spacing="4x" shouldWrapChildren>\n      <Tag>Normal</Tag>\n      <Tag disabled>Disabled</Tag>\n      <Tag error>Error</Tag>\n    </Stack>\n    <Stack direction="row" spacing="4x" shouldWrapChildren>\n      <Tag variant="outline">Normal</Tag>\n      <Tag variant="outline" disabled>Disabled</Tag>\n      <Tag variant="outline" error>Error</Tag>\n    </Stack>\n  </Stack>\n);\n\nexport default App;',path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:'import { Stack, Tag } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Stack spacing="4x">\n    <Stack direction="row" spacing="4x" shouldWrapChildren>\n      <Tag>Normal</Tag>\n      <Tag disabled>Disabled</Tag>\n      <Tag error>Error</Tag>\n    </Stack>\n    <Stack direction="row" spacing="4x" shouldWrapChildren>\n      <Tag variant="outline">Normal</Tag>\n      <Tag variant="outline" disabled>Disabled</Tag>\n      <Tag variant="outline" error>Error</Tag>\n    </Stack>\n  </Stack>\n);\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h3,{id:"how-to-close-a-tag",children:["How to close a tag",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-close-a-tag",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.h4,{id:"using-the-isclosable-prop",children:["Using the ",(0,o.jsx)(e.code,{children:"isClosable"})," prop",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-isclosable-prop",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"isClosable"})," prop is used to make a tag closable by adding a close button to it. By default, the value of ",(0,o.jsx)(e.code,{children:"isClosable"})," is false. To make an alert closable, set ",(0,o.jsx)(e.code,{children:"isClosable"})," to true."]}),"\n",(0,o.jsx)(e.pre,{disabled:!0,children:(0,o.jsx)(e.code,{className:"language-jsx",children:'<Tag variant="solid" isClosable onClose={onClose}>\n  <Text>This is a tag</Text>\n</Tag>\n'})}),"\n",(0,o.jsx)(a.Z,{component:using_the_isclosable_prop,file:{data:"import { Fade, Tag, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant=\"solid\" isClosable onClose={onClose}>\n        <Text>This is a tag</Text>\n      </Tag>\n    </Fade>\n  );\n};\n\nexport default App;",path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:"import { Fade, Tag, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant=\"solid\" isClosable onClose={onClose}>\n        <Text>This is a tag</Text>\n      </Tag>\n    </Fade>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h4,{id:"using-the-tagclosebutton-component",children:["Using the ",(0,o.jsx)(e.code,{children:"TagCloseButton"})," component",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-tagclosebutton-component",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"TagCloseButton"})," component provides an easy way to add a close button to a tag. This button is specifically designed to handle closing the tag, so you don't need to write any additional code to handle it. If you use ",(0,o.jsx)(e.code,{children:"TagCloseButton"}),", you can omit the ",(0,o.jsx)(e.code,{children:"isClosable"})," prop in the ",(0,o.jsx)(e.code,{children:"Tag"})," component."]}),"\n",(0,o.jsxs)(e.p,{children:["Besides the default functionality of the ",(0,o.jsx)(e.code,{children:"TagCloseButton"}),", you can also pass additional props, such as ",(0,o.jsx)(e.code,{children:"data-test"})," or ",(0,o.jsx)(e.code,{children:"data-tracking"})," attributes, to the ",(0,o.jsx)(e.code,{children:"TagCloseButton"})," component as needed."]}),"\n",(0,o.jsx)(e.pre,{disabled:!0,children:(0,o.jsx)(e.code,{className:"language-jsx",children:'<Tag variant="solid" onClose={onClose}>\n  <Text>This is a tag</Text>\n  <TagCloseButton ml="2x" data-test="tag-close-button" />\n</Tag>\n'})}),"\n",(0,o.jsxs)(e.p,{children:["When using the ",(0,o.jsx)(e.code,{children:"TagCloseButton"})," component, be sure to manually adjust its position. In the example above, the close button is positioned with a ",(0,o.jsx)(e.code,{children:"2x"})," (=8px) margin on the left side to ensure sufficient spacing between the tag and the button."]}),"\n",(0,o.jsx)(a.Z,{component:using_the_tagclosebutton_component,file:{data:"import { Fade, Tag, TagCloseButton, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant=\"solid\" onClose={onClose}>\n        <Text>This is a tag</Text>\n        <TagCloseButton ml=\"2x\" data-test=\"tag-close-button\" />\n      </Tag>\n    </Fade>\n  );\n};\n\nexport default App;",path:"pages/components/tag/index.page.mdx"},sandbox:{files:{},raw:"import { Fade, Tag, TagCloseButton, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant=\"solid\" onClose={onClose}>\n        <Text>This is a tag</Text>\n        <TagCloseButton ml=\"2x\" data-test=\"tag-close-button\" />\n      </Tag>\n    </Fade>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h2,{id:"advanced-usage",children:["Advanced usage",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#advanced-usage",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"The advanced usage here is not part of the component library, and might be modified or removed without further notice. They are provided here to help you get started with writing your own tag components."}),"\n"]}),"\n",(0,o.jsxs)(e.h3,{id:"creating-tags",children:["Creating tags",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#creating-tags",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(e.p,{children:"The tag creation component allows you to easily generate tags for filtering purposes."}),"\n",(0,o.jsxs)(e.p,{children:["To create a new tag, simply type your desired tag value and press the enter key. This will add the tag to the list. You can also copy and paste a list of tags, separating them with commas (",(0,o.jsx)(e.code,{children:","}),") or semi-colons (",(0,o.jsx)(e.code,{children:";"}),"), to create multiple tags at once. If you need to remove a tag, just click on the ",(0,o.jsx)(e.code,{children:"x"})," icon or use the backspace key."]}),"\n",(0,o.jsx)(a.Z,{component:creating_tags,file:{data:"import {\n  Box,\n  Text,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport EditableTag from './components/EditableTag';\nimport TagInput from './components/TagInput';\n\nconst useInputTagStyle = ({\n  isFocused,\n}) => {\n  const [colorMode] = useColorMode();\n  const backgroundColor = {\n    dark: 'transparent',\n    light: 'white',\n  }[colorMode];\n  const borderColor = {\n    dark: 'gray:60',\n    light: 'gray:30',\n  }[colorMode];\n  const hoverBorderColor = {\n    dark: 'blue:50',\n    light: 'blue:50',\n  }[colorMode];\n  const invalidBorderColor = {\n    dark: 'red:50',\n    light: 'red:60',\n  }[colorMode];\n  const focusBorderColor = {\n    dark: 'blue:60',\n    light: 'blue:60',\n  }[colorMode];\n  const disabledBorderColor = {\n    dark: 'gray:60',\n    light: 'gray:30',\n  }[colorMode];\n  const disabledOpacity = {\n    dark: 0.28,\n    light: 0.3,\n  }[colorMode];\n\n  return {\n    backgroundColor,\n    border: 1,\n    borderColor: isFocused ? focusBorderColor : borderColor,\n    borderRadius: 'sm',\n    fontSize: 'sm',\n    lineHeight: 'sm',\n    height: '9x',\n    px: 'calc(.75rem - 1px)', // 12px - 1px\n    py: 'calc(.375rem - 1px)', // 6px - 1px\n    _hover: {\n      borderColor: hoverBorderColor,\n    },\n    _disabled: {\n      borderColor: disabledBorderColor,\n      cursor: 'not-allowed',\n      opacity: disabledOpacity,\n    },\n    _invalid: {\n      borderColor: invalidBorderColor,\n    },\n  };\n};\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const placeholderColor = {\n    dark: 'white:tertiary',\n    light: 'black:tertiary',\n  }[colorMode];\n  const invalidColor = {\n    dark: 'red:50',\n    light: 'red:60',\n  }[colorMode];\n  const tagInputRef = useRef();\n  const [tags, setTags] = useState([]);\n  const [hasError, setHasError] = useState(false);\n  const [placeholderVisible, setPlaceholderVisible] = useState(true);\n  const [isWrapperFocused, setWrapperFocused] = useState(false);\n  const createTags = (values) => {\n    if (values.length === 0) {\n      return;\n    }\n    values = values.filter(value => {\n      if (value.trim() === '') {\n        return false; // skip\n      }\n      return true;\n    }).map((value, i) => {\n      const tagId = new Date().getTime() + i;\n      return {\n        id: tagId,\n        value: value,\n      };\n    });\n    const newTags = [...tags, ...values];\n    setTags(newTags);\n  };\n  const updateTag = ({ id, value }) => {\n    const newTags = [...tags];\n    const tag = newTags.find((t) => t.id === id);\n    tag.value = value || tag.value;\n    setTags(newTags);\n  };\n\n  const handleTagInputBlur = () => {\n    setWrapperFocused(false);\n    if (tags.length === 0) {\n      setPlaceholderVisible(true);\n    }\n  };\n  const handleTagInputFocus = () => {\n    setWrapperFocused(true);\n    setPlaceholderVisible(false);\n  };\n  const handleTagInputKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    const value = e.target.value;\n    if (keyCode == 8) { // Delete\n      if (!value && tags.length > 0) {\n        // remove last tag\n        tags.splice((tags.length-1), 1);\n        setTags([...tags]);\n      }\n    }\n  };\n\n  const handleTagChange = (tagId) => ({ value }) => {\n    updateTag({ id: tagId, value });\n  };\n  const handleTagClose = (tagId) => () => {\n    const newTags = tags.filter((t) => t.id !== tagId);\n    setTags(newTags);\n    tagInputRef.current.focus();\n  };\n\n  const handleWrapperClick = () => {\n    tagInputRef.current.focus();\n  };\n  const styleProps = useInputTagStyle({\n    isFocused: isWrapperFocused,\n  });\n\n  useEffect(() => {\n    const verifyTag = ({ id, value }) => {\n      const isDuplicate = tags.find((t) => t.value === value && t.id !== id);\n      if (isDuplicate) {\n        return 'Duplicate entries';\n      }\n      return '';\n    };\n    const invalidTags = tags.map((tag) => {\n      tag.error = verifyTag({ id: tag.id, value: tag.value });\n      return tag;\n    }).filter(t => t.error.length > 0);\n\n    if (invalidTags.length >= 1) {\n      setHasError(true);\n    }\n    if (invalidTags.length === 0) {\n      setHasError(false);\n    }\n  }, [tags]);\n\n  return (\n    <>\n      <Box\n        aria-invalid={hasError}\n        display=\"flex\"\n        onClick={handleWrapperClick}\n        {...styleProps}\n      >\n        {placeholderVisible && (\n          <Text\n            display=\"inline-flex\"\n            py=\"2q\"\n            color={placeholderColor}\n          >\n            Add new tag\n          </Text>\n        )}\n        {\n          tags.map(tag => {\n            const id = tag.id;\n            const value = tag.value;\n            const error = tag.error;\n            return (\n              <EditableTag\n                key={id}\n                mr=\"2x\"\n                title={value}\n                error={!!error}\n                onChange={handleTagChange(id)}\n                onClose={handleTagClose(id)}\n              >\n                {value}\n              </EditableTag>\n            );\n          })\n        }\n        <TagInput\n          ref={tagInputRef}\n          display=\"inline-flex\"\n          height=\"6x\"\n          onBlur={handleTagInputBlur}\n          onCreate={createTags}\n          onFocus={handleTagInputFocus}\n          onKeyUp={handleTagInputKeyUp}\n        />\n      </Box>\n      {hasError && <Text color={invalidColor}>There are invalid entries.</Text>}\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/tag/index.page.mdx"},sandbox:{files:{"src/pages/components/tag/components/EditableTag.js":"import {\n  Box,\n  Tag,\n  TagCloseButton,\n  useTheme,\n} from '@tonic-ui/react';\nimport { ensureFunction } from 'ensure-type';\nimport React, { forwardRef, useState } from 'react';\nimport AutosizeInput from '@/pages/components/tag/components/AutosizeInput';\nimport { useEditableTagStyle } from '@/pages/components/tag/components/styles';\n\nconst EditableTag = forwardRef((\n  {\n    children,\n    disabled,\n    isClosable = true,\n    labelMaxWidth = 0,\n    size = 'md',\n    variant = 'solid',\n\n    onChange,\n    onClick,\n    onClose,\n    onFocus,\n    ...props\n  },\n  ref\n) => {\n  onChange = ensureFunction(onChange);\n  onClick = ensureFunction(onClick);\n  onClose = ensureFunction(onClose);\n\n  const [value, setValue] = useState(children);\n  const [inputVisible, setInputVisible] = useState(false);\n  const handleInputVisible = () => setInputVisible(true);\n  const handleInputHidden = () => setInputVisible(false);\n  const updateTag = (inputValue) => {\n    setValue(inputValue);\n    onChange({ value: inputValue });\n    handleInputHidden();\n  };\n\n  // handle input events\n  const handleInputBlur = (e) => {\n    const inputValue = e.target.value;\n    updateTag(inputValue);\n  };\n  const handleInputKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    if (keyCode === 13) { // Enter\n      const inputValue = e.target.value;\n      updateTag(inputValue);\n    }\n    if (keyCode === 27) { // Esc\n      handleInputHidden();\n    }\n  };\n\n  // handle tag events\n  const handleTagClick = (e) => {\n    e.stopPropagation();\n    handleInputVisible();\n    onClick(e);\n  };\n  const handleTagClose = (e) => {\n    e.stopPropagation();\n    onClose(e);\n  };\n  const handleTagKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    if (keyCode === 13) {\n      handleInputVisible();\n    }\n  };\n  const handleTagFocus = ensureFunction(onFocus);\n\n  const tagStyleProps = useEditableTagStyle({\n    size,\n    variant,\n  });\n\n  const theme = useTheme();\n  const limitWidthStyle = {\n    maxWidth: `calc(${labelMaxWidth}px - ${isClosable ? theme?.sizes?.['5x'] : 0})`,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  };\n\n  if (inputVisible) {\n    return (\n      <AutosizeInput\n        defaultValue={value}\n        onBlur={handleInputBlur}\n        onKeyUp={handleInputKeyUp}\n      />\n    );\n  }\n\n  return (\n    <Tag\n      ref={ref}\n      variant={variant}\n      size={size}\n      disabled={disabled}\n      tabIndex={disabled ? '-1' : '0'}\n      onClick={disabled ? undefined : handleTagClick}\n      onFocus={disabled ? undefined : handleTagFocus}\n      onKeyUp={disabled ? undefined : handleTagKeyUp}\n      {...tagStyleProps}\n      {...props}\n    >\n      <Box\n        display=\"inline-block\"\n        {...(labelMaxWidth && limitWidthStyle)}\n      >\n        {value}\n      </Box>\n      {!!isClosable && (\n        <TagCloseButton\n          disabled={disabled}\n          tabIndex=\"-1\" // no focus on close button\n          ml=\"2x\"\n          onClick={handleTagClose}\n        />\n      )}\n    </Tag>\n  );\n});\n\nEditableTag.displayName = 'EditableTag';\n\nexport default EditableTag;","src/pages/components/tag/components/AutosizeInput.js":'import {\n  Box,\n  InputBase,\n} from \'@tonic-ui/react\';\nimport { ensureFunction } from \'ensure-type\';\nimport React, { useEffect, useRef } from \'react\';\n\nconst wrapEvent = (theirHandler, ourHandler) => event => {\n  ensureFunction(theirHandler)(event);\n  if (!event.defaultPrevented) {\n    return ensureFunction(ourHandler)(event);\n  }\n  return \'\';\n};\n\nconst AutosizeInput = ({\n  onInput: onInputProp,\n  ...props\n}) => {\n  const tagInputRef = useRef();\n  const tagHiddenSpanRef = useRef();\n\n  const handleInputResize = () => {\n    if (!tagInputRef.current) {\n      return;\n    }\n    const tagInput = tagInputRef.current;\n    const tagHiddenSpan = tagHiddenSpanRef.current;\n    tagHiddenSpan.textContent = tagInput.value;\n    tagInput.style.width = `${tagHiddenSpan.offsetWidth}px`;\n    tagInput.focus();\n  };\n\n  useEffect(() => {\n    handleInputResize();\n  }, []);\n\n  return (\n    <>\n      <Box\n        as="span"\n        ref={tagHiddenSpanRef}\n        position="absolute"\n        height="0"\n        overflow="hidden"\n        whiteSpace="pre"\n      />\n      <InputBase\n        ref={tagInputRef}\n        maxWidth="100%"\n        minHeight="6x"\n        onInput={wrapEvent(onInputProp, handleInputResize)}\n        {...props}\n      />\n    </>\n  );\n};\n\nAutosizeInput.displayName = \'AutosizeInput\';\n\nexport default AutosizeInput;',"src/pages/components/tag/components/styles.js":"import {\n  useColorMode,\n} from '@tonic-ui/react';\n\nconst getSolidEditableTagStyle = ({\n  colorMode,\n}) => {\n  // Hover\n  const hoverBackgroundColor = {\n    dark: 'gray:60',\n    light: 'gray:10',\n  }[colorMode];\n  // Invalid\n  const invalidBackgroundColor = {\n    dark: 'red:60',\n    light: 'red:20',\n  }[colorMode];\n  const hoverInvalidBackgroundColor = {\n    dark: 'red:50',\n    light: 'red:10',\n  }[colorMode];\n  const invalidColor = {\n    dark: 'white:emphasis',\n    light: 'red:100',\n  }[colorMode];\n\n  return {\n    _hover: {\n      '&:not([disabled])': {\n        backgroundColor: hoverBackgroundColor,\n      },\n    },\n    _invalid: {\n      backgroundColor: invalidBackgroundColor,\n      color: invalidColor,\n      '&:not([disabled]):hover': {\n        backgroundColor: hoverInvalidBackgroundColor,\n        color: invalidColor,\n      },\n    },\n  };\n};\n\nconst getOutlineEditableTagStyle = ({\n  colorMode,\n}) => {\n  // Focus\n  const focusColor = {\n    dark: 'blue:60',\n    light: 'blue:60',\n  }[colorMode];\n  // Hover\n  const hoverBorderColor = {\n    dark: 'gray:30',\n    light: 'gray:50',\n  }[colorMode];\n  const hoverColor = {\n    dark: 'gray:30',\n    light: 'gray:50',\n  }[colorMode];\n  // Invalid\n  const invalidBackgroundColor = {\n    dark: 'red:60',\n    light: 'red:20',\n  }[colorMode];\n  const hoverInvalidBackgroundColor = {\n    dark: 'red:50',\n    light: 'red:10',\n  }[colorMode];\n  const invalidColor = {\n    dark: 'white:emphasis',\n    light: 'red:100',\n  }[colorMode];\n\n  return {\n    _hover: {\n      '&:not([disabled])': {\n        borderColor: hoverBorderColor,\n        color: hoverColor,\n      },\n    },\n    _focusHover: {\n      '&:not([disabled])': {\n        borderColor: focusColor,\n        color: hoverColor,\n      },\n    },\n    _invalid: {\n      borderColor: invalidBackgroundColor,\n      backgroundColor: invalidBackgroundColor,\n      color: invalidColor,\n      '&:not([disabled]):hover': {\n        borderColor: hoverInvalidBackgroundColor,\n        backgroundColor: hoverInvalidBackgroundColor,\n        color: invalidColor,\n      },\n      '&:not([disabled]):focus:hover': {\n        color: invalidColor,\n      },\n    },\n  };\n};\n\nconst useEditableTagStyle = ({\n  size,\n  variant,\n}) => {\n  const [colorMode] = useColorMode();\n  const baseStyle = {\n    alignItems: 'center',\n    borderColor: 'transparent',\n    borderStyle: 'solid',\n    borderWidth: '1q',\n    borderRadius: 'sm',\n    cursor: 'cursor',\n    display: 'inline-flex',\n    outline: 'none',\n    pl: '2x',\n    pr: '2x',\n  };\n  const sizeStyle = {\n    sm: {\n      fontSize: 'xs',\n      lineHeight: 1,\n      minHeight: '4x',\n    },\n    md: {\n      fontSize: 'xs',\n      lineHeight: 'xs',\n      minHeight: '6x',\n      py: '1h',\n    },\n    lg: {\n      fontSize: 'md',\n      lineHeight: 'md',\n      minHeight: '8x',\n      py: '1x',\n    },\n  }[size];\n  const variantStyle = {\n    'solid': getSolidEditableTagStyle({\n      colorMode,\n    }),\n    'outline': getOutlineEditableTagStyle({\n      colorMode,\n    }),\n  }[variant];\n\n  return {\n    ...baseStyle,\n    ...sizeStyle,\n    ...variantStyle,\n  };\n};\n\nexport {\n  useEditableTagStyle,\n};","src/pages/components/tag/components/TagInput.js":"import {\n  InputBase,\n} from '@tonic-ui/react';\nimport React, { forwardRef, useState } from 'react';\n\nconst TagInput = forwardRef((\n  {\n    onBlur,\n    onCreate,\n    onChange,\n    onKeyUp,\n    onPaste,\n    ...reset\n  },\n  ref\n) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const createTags = (values) => {\n    if (typeof onCreate === \"function\") {\n      onCreate(values);\n    }\n    setInputValue('');\n  };\n  const handleInputBlur = (e) => {\n    e.stopPropagation();\n    const value = e.target.value;\n    if (value) {\n      createTags([value]);\n    }\n    if (typeof onBlur === \"function\") {\n      onBlur(e);\n    }\n  };\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n    if (typeof onChange === \"function\") {\n      onChange(e);\n    }\n  };\n  const handleInputKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    let value = e.target.value;\n    if (keyCode === 13) { // Enter\n      createTags([value]);\n    }\n    if (keyCode === 186 || keyCode === 188) { // Semicolon(;) or Comma(,)\n      value = value.substring(0, value.length - 1);\n      createTags([value]);\n    }\n    if (keyCode === 27) { // Esc\n      setInputValue('');\n    }\n    if (typeof onKeyUp === \"function\") {\n      onKeyUp(e);\n    }\n  };\n  const handleInputPaste = (e) => {\n    e.preventDefault();\n    const pastedData = e.clipboardData.getData('text');\n    const separatedValues = pastedData.split(\n      new RegExp([',', ';', '\\n', '\\r', '\\r\\n'].join('|'))\n    );\n    createTags(separatedValues);\n    if (typeof onPaste === \"function\") {\n      onPaste(e);\n    }\n  };\n\n  return (\n    <InputBase\n      ref={ref}\n      value={inputValue}\n      onBlur={handleInputBlur}\n      onChange={handleInputChange}\n      onKeyUp={handleInputKeyUp}\n      onPaste={handleInputPaste}\n      {...reset}\n    />\n  );\n});\n\nTagInput.displayName = 'TagInput';\n\nexport default TagInput;"},raw:"import {\n  Box,\n  Text,\n  useColorMode,\n} from '@tonic-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport EditableTag from '@/pages/components/tag/components/EditableTag';\nimport TagInput from '@/pages/components/tag/components/TagInput';\n\nconst useInputTagStyle = ({\n  isFocused,\n}) => {\n  const [colorMode] = useColorMode();\n  const backgroundColor = {\n    dark: 'transparent',\n    light: 'white',\n  }[colorMode];\n  const borderColor = {\n    dark: 'gray:60',\n    light: 'gray:30',\n  }[colorMode];\n  const hoverBorderColor = {\n    dark: 'blue:50',\n    light: 'blue:50',\n  }[colorMode];\n  const invalidBorderColor = {\n    dark: 'red:50',\n    light: 'red:60',\n  }[colorMode];\n  const focusBorderColor = {\n    dark: 'blue:60',\n    light: 'blue:60',\n  }[colorMode];\n  const disabledBorderColor = {\n    dark: 'gray:60',\n    light: 'gray:30',\n  }[colorMode];\n  const disabledOpacity = {\n    dark: 0.28,\n    light: 0.3,\n  }[colorMode];\n\n  return {\n    backgroundColor,\n    border: 1,\n    borderColor: isFocused ? focusBorderColor : borderColor,\n    borderRadius: 'sm',\n    fontSize: 'sm',\n    lineHeight: 'sm',\n    height: '9x',\n    px: 'calc(.75rem - 1px)', // 12px - 1px\n    py: 'calc(.375rem - 1px)', // 6px - 1px\n    _hover: {\n      borderColor: hoverBorderColor,\n    },\n    _disabled: {\n      borderColor: disabledBorderColor,\n      cursor: 'not-allowed',\n      opacity: disabledOpacity,\n    },\n    _invalid: {\n      borderColor: invalidBorderColor,\n    },\n  };\n};\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const placeholderColor = {\n    dark: 'white:tertiary',\n    light: 'black:tertiary',\n  }[colorMode];\n  const invalidColor = {\n    dark: 'red:50',\n    light: 'red:60',\n  }[colorMode];\n  const tagInputRef = useRef();\n  const [tags, setTags] = useState([]);\n  const [hasError, setHasError] = useState(false);\n  const [placeholderVisible, setPlaceholderVisible] = useState(true);\n  const [isWrapperFocused, setWrapperFocused] = useState(false);\n  const createTags = (values) => {\n    if (values.length === 0) {\n      return;\n    }\n    values = values.filter(value => {\n      if (value.trim() === '') {\n        return false; // skip\n      }\n      return true;\n    }).map((value, i) => {\n      const tagId = new Date().getTime() + i;\n      return {\n        id: tagId,\n        value: value,\n      };\n    });\n    const newTags = [...tags, ...values];\n    setTags(newTags);\n  };\n  const updateTag = ({ id, value }) => {\n    const newTags = [...tags];\n    const tag = newTags.find((t) => t.id === id);\n    tag.value = value || tag.value;\n    setTags(newTags);\n  };\n\n  const handleTagInputBlur = () => {\n    setWrapperFocused(false);\n    if (tags.length === 0) {\n      setPlaceholderVisible(true);\n    }\n  };\n  const handleTagInputFocus = () => {\n    setWrapperFocused(true);\n    setPlaceholderVisible(false);\n  };\n  const handleTagInputKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    const value = e.target.value;\n    if (keyCode == 8) { // Delete\n      if (!value && tags.length > 0) {\n        // remove last tag\n        tags.splice((tags.length-1), 1);\n        setTags([...tags]);\n      }\n    }\n  };\n\n  const handleTagChange = (tagId) => ({ value }) => {\n    updateTag({ id: tagId, value });\n  };\n  const handleTagClose = (tagId) => () => {\n    const newTags = tags.filter((t) => t.id !== tagId);\n    setTags(newTags);\n    tagInputRef.current.focus();\n  };\n\n  const handleWrapperClick = () => {\n    tagInputRef.current.focus();\n  };\n  const styleProps = useInputTagStyle({\n    isFocused: isWrapperFocused,\n  });\n\n  useEffect(() => {\n    const verifyTag = ({ id, value }) => {\n      const isDuplicate = tags.find((t) => t.value === value && t.id !== id);\n      if (isDuplicate) {\n        return 'Duplicate entries';\n      }\n      return '';\n    };\n    const invalidTags = tags.map((tag) => {\n      tag.error = verifyTag({ id: tag.id, value: tag.value });\n      return tag;\n    }).filter(t => t.error.length > 0);\n\n    if (invalidTags.length >= 1) {\n      setHasError(true);\n    }\n    if (invalidTags.length === 0) {\n      setHasError(false);\n    }\n  }, [tags]);\n\n  return (\n    <>\n      <Box\n        aria-invalid={hasError}\n        display=\"flex\"\n        onClick={handleWrapperClick}\n        {...styleProps}\n      >\n        {placeholderVisible && (\n          <Text\n            display=\"inline-flex\"\n            py=\"2q\"\n            color={placeholderColor}\n          >\n            Add new tag\n          </Text>\n        )}\n        {\n          tags.map(tag => {\n            const id = tag.id;\n            const value = tag.value;\n            const error = tag.error;\n            return (\n              <EditableTag\n                key={id}\n                mr=\"2x\"\n                title={value}\n                error={!!error}\n                onChange={handleTagChange(id)}\n                onClose={handleTagClose(id)}\n              >\n                {value}\n              </EditableTag>\n            );\n          })\n        }\n        <TagInput\n          ref={tagInputRef}\n          display=\"inline-flex\"\n          height=\"6x\"\n          onBlur={handleTagInputBlur}\n          onCreate={createTags}\n          onFocus={handleTagInputFocus}\n          onKeyUp={handleTagInputKeyUp}\n        />\n      </Box>\n      {hasError && <Text color={invalidColor}>There are invalid entries.</Text>}\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(e.h2,{id:"props",children:["Props",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.h3,{id:"tag-1",children:["Tag",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tag-1",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{align:"left",children:"Name"}),(0,o.jsx)(e.th,{align:"left",children:"Type"}),(0,o.jsx)(e.th,{align:"left",children:"Default"}),(0,o.jsx)(e.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"children"}),(0,o.jsx)(e.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsx)(e.td,{align:"left"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"disabled"}),(0,o.jsx)(e.td,{align:"left",children:"boolean"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsxs)(e.td,{align:"left",children:["If ",(0,o.jsx)(e.code,{children:"true"}),", the tag will be disabled."]})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"error"}),(0,o.jsx)(e.td,{align:"left",children:"boolean"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsxs)(e.td,{align:"left",children:["If ",(0,o.jsx)(e.code,{children:"true"}),", the tag will display an error state."]})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"isClosable"}),(0,o.jsx)(e.td,{align:"left",children:"boolean"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsxs)(e.td,{align:"left",children:["If ",(0,o.jsx)(e.code,{children:"true"}),", a close button will appear on the right side."]})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"onClose"}),(0,o.jsx)(e.td,{align:"left",children:"function"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsx)(e.td,{align:"left",children:"A callback called when the close button is clicked."})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"size"}),(0,o.jsx)(e.td,{align:"left",children:"string"}),(0,o.jsx)(e.td,{align:"left",children:"'md'"}),(0,o.jsx)(e.td,{align:"left",children:"The size of the tag component. One of: 'sm', 'md', 'lg'"})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"variant"}),(0,o.jsx)(e.td,{align:"left",children:"string"}),(0,o.jsx)(e.td,{align:"left",children:"'solid'"}),(0,o.jsx)(e.td,{align:"left",children:"The variant style of the tag component. One of: 'solid', 'outline'"})]})]})]}),"\n",(0,o.jsxs)(e.h3,{id:"tagclosebutton",children:["TagCloseButton",(0,o.jsx)(e.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tagclosebutton",children:(0,o.jsx)(e.svg,{children:(0,o.jsx)(e.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{align:"left",children:"Name"}),(0,o.jsx)(e.th,{align:"left",children:"Type"}),(0,o.jsx)(e.th,{align:"left",children:"Default"}),(0,o.jsx)(e.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{align:"left",children:"children"}),(0,o.jsx)(e.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(e.td,{align:"left"}),(0,o.jsx)(e.td,{align:"left"})]})})]})]})}var index_page=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,t.ah)(),n.components).wrapper;return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(_createMdxContent,n)})):_createMdxContent(n)}},83449:function(n,e,r){"use strict";r.d(e,{Z:function(){return f}});var o=r(67569),t=r(49427),a=r(5632),l=r(2784),i=r(85175),s=r(82821),c=r(90622),d=r(52057),u=r(63651),g=["size"];function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n}).apply(this,arguments)}var p=(0,l.forwardRef)(function(n,e){var r=n.size,t=function(n,e){if(null==n)return{};var r,o,t=function(n,e){if(null==n)return{};var r,o,t={},a=Object.keys(n);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(t[r]=n[r]);return t}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)r=a[o],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}(n,g);return l.createElement(o.SVGIcon,_extends({size:r,viewBox:"0 0 1024 1024"},t),l.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});p.displayName="CodeSandboxIcon";var h=r(94981);function _slicedToArray(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r,o,t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a=[],l=!0,i=!1;try{for(t=t.call(n);!(l=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);l=!0);}catch(n){i=!0,o=n}finally{try{l||null==t.return||t.return()}finally{if(i)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return _arrayLikeToArray(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);if("Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r)return Array.from(n);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return _arrayLikeToArray(n,e)}}(n,e)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,o=Array(e);r<e;r++)o[r]=n[r];return o}var b={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},Demo=function(n){var e=n.component,r=n.file,g=n.sandbox,f=(0,a.useRouter)(),m=_slicedToArray((0,l.useReducer)(function(n){return!n},!1),2),y=m[0],x=m[1],T=_slicedToArray((0,o.useColorMode)(),1)[0],C={dark:c.y,light:c.q}[T],v=_slicedToArray((0,t.useToggle)(!1),2),k=v[0],j=v[1],S=(0,s.Z)(null==r?void 0:r.data),I=S.onCopy,E=S.hasCopied,w=(0,l.useCallback)(function(){I()},[I]),_=(0,l.useCallback)(function(){(0,d.b)(g)},[g]),A=(0,l.useCallback)(function(){x(),j(!1)},[x,j]);return l.createElement(i.nu,{code:null==r?void 0:r.data,disabled:!0,language:"jsx",theme:C},l.createElement(o.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[T],p:"4x"},l.createElement(o.Box,{fontSize:"sm",lineHeight:"sm"},l.createElement(l.Fragment,{key:y},l.createElement(e,null)))),l.createElement(o.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},l.createElement(h.Z,{"data-track":k?"CodeBlock|hide_source|".concat((0,u.Z)({path:f.pathname})):"CodeBlock|show_source|".concat((0,u.Z)({path:f.pathname})),onClick:j},l.createElement(o.Tooltip,{label:k?"Hide the source":"Show the source"},l.createElement(o.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),l.createElement(h.Z,{"data-track":"CodeBlock|copy_source|".concat((0,u.Z)({path:f.pathname})),onClick:w},l.createElement(o.Tooltip,{label:E?"Copied":"Copy the source"},l.createElement(o.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),l.createElement(h.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(f.pathname),onClick:_},l.createElement(o.Tooltip,{label:"Edit in CodeSandbox"},l.createElement(p,{size:{sm:"5x",md:"4x"}}))),l.createElement(h.Z,{"data-track":"CodeBlock|reset|".concat(f.pathname),onClick:A},l.createElement(o.Tooltip,{label:"Reset the demo"},l.createElement(o.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),l.createElement(o.Fade,{in:k},l.createElement(o.Collapse,{in:k,unmountOnExit:!0},l.createElement(i.uz,{style:b}))))};Demo.displayName="Demo";var f=Demo},86869:function(n,e,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tag",function(){return r(57570)}])}},function(n){n.O(0,[9774,2888,179],function(){return n(n.s=86869)}),_N_E=n.O()}]);
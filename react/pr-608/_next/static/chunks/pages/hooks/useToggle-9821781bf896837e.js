(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8996],{34950:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return g}});var n=a(7896),l=a(59740),r=(a(2784),a(30876)),o=["components"],u={};function g(t){var e=t.components,a=(0,l.Z)(t,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"useToggle"),(0,r.kt)("p",null,"A custom Hook that toggles between boolean values. It also accepts a toggle function that can be used to change the value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// import\nimport { useToggle } from '@tonic-ui/react-hooks';\n\n// usage\nconst [value, toggleValue] = useToggle(initialValue, [toggleReducer]);\n")),(0,r.kt)("h3",null,"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"initialValue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The initial value of the toggle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"toggleReducer?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(state: boolean, nextValue: boolean) => boolean"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"An optional reducer function that can be used to determine the next value.")))),(0,r.kt)("h3",null,"Returns"),(0,r.kt)("p",null,"Returns an array with the current value and a function to toggle the value."),(0,r.kt)("p",null,"If a boolean value is explicitly passed to the toggle function, it will be used instead of negating the current value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const defaultToggleReducer = (state, nextValue) => {\n  return (typeof nextValue === 'boolean') ? nextValue : !state;\n};\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Toggle Function"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Previous Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Next Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"toggle()",(0,r.kt)("br",null),"toggle(event: MouseEvent)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"toggle()",(0,r.kt)("br",null),"toggle(event: MouseEvent)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"toggle(false)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true ","|"," false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"toggle(true)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true ","|"," false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true")))),(0,r.kt)("h3",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function Switch() {\n  const [value, toggleValue] = useToggle(false);\n\n  return (\n    <Button onClick={toggleValue}>\n      {value ? 'ON' : 'OFF'}\n    </Button>\n  );\n}\n")))}g.isMDXComponent=!0},85082:function(t,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useToggle",function(){return a(34950)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=85082,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
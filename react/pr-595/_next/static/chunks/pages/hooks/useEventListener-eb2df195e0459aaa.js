(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1749],{26667:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return p}});var a=n(7896),r=n(59740),l=(n(2784),n(30876)),o=["components"],i={};function p(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"useEventListener"),(0,l.kt)("p",null,"A custom Hook to manage browser event listeners."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// import\nimport { useEventListener } from '@tonic-ui/react-hooks';\n\n// usage\nuseEventListener(target, eventName, eventHandler, [options]);\n")),(0,l.kt)("h3",null,"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"target"),(0,l.kt)("td",{parentName:"tr",align:"left"},"HTMLElement"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The target element to attach the event listener to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"eventName"),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The name of the event to listen for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"eventHandler"),(0,l.kt)("td",{parentName:"tr",align:"left"},"(event: MouseEvent) => void"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"The event handler to call when the event is fired.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"options?"),(0,l.kt)("td",{parentName:"tr",align:"left"},"object"),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Optional options to pass to the event handler.")))),(0,l.kt)("h3",null,"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const buttonRef = React.useRef(null);\n\n  const onScroll = (event) => {\n    console.log('document scrolled', event);\n  };\n\n  const onClick = (event) => {\n    console.log('button clicked', event);\n  };\n\n  // example with document based event\n  useEventListener(\n    () => (buttonRef.current.ownerDocument || document),\n    'scroll',\n    onScroll,\n  );\n\n  // example with element based event\n  useEventListener(\n    () => buttonRef.current,\n    'click',\n    onClick,\n  );\n\n  return (\n    <Button ref={buttonRef}>\n      Click Me\n    </Button>\n  );\n}\n")))}p.isMDXComponent=!0},34737:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useEventListener",function(){return n(26667)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=34737,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2611],{24011:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return r}});var u=t(7896),o=t(59740),c=(t(2784),t(30876)),a=["components"],l={};function r(n){var e=n.components,t=(0,o.Z)(n,a);return(0,c.kt)("wrapper",(0,u.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h1",null,"useOnce"),(0,c.kt)("p",null,"A custom Hook that runs a callback at most once."),(0,c.kt)("h2",null,"Import"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import { useOnce } from '@tonic-ui/react-hooks';\n")),(0,c.kt)("h3",null,"useOnce"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import useOnceWhen from './useOnceWhen';\n\nconst useOnce = (callback) => {\n  useOnceWhen(callback, true);\n};\n")),(0,c.kt)("h2",null,"Usage"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const [value, setValue] = React.useState(0);\n  const ref = React.useRef(0);\n\n  useOnce(() => {\n    console.log('This will run only once before the initial render');\n    ref.current++;\n  });\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        Callback called: {ref.current}\n      </Box>\n      <Button onClick={() => setValue(value => value + 1)}>\n        Click Me\n      </Button>\n    </>\n  );\n}\n")))}r.isMDXComponent=!0},25960:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useOnce",function(){return t(24011)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=25960,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
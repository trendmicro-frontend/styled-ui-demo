(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9267],{7e4:function(e,n,t){"use strict";t.r(n);var s=t(52322),o=t(45392);function _createMdxContent(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),e.components);return(0,s.jsxs)(n.div,{className:"main-content",id:"main-content",children:[(0,s.jsx)(n.h1,{id:"toastmanager",children:"ToastManager"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ToastManager"})," allows you to create and manage toasts in your React application. Toasts are small messages that appear temporarily on the screen to inform the user about important events or actions."]}),"\n",(0,s.jsxs)(n.h2,{id:"setup",children:["Setup",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#setup",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["To use ",(0,s.jsx)(n.code,{children:"ToastManager"}),", you should wrap your root component with it, along with the ",(0,s.jsx)(n.code,{children:"TonicProvider"})," component, as shown in the example below:"]}),"\n",(0,s.jsx)(n.pre,{disabled:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { TonicProvider, ToastManager } from '@tonic-ui/react';\n\nfunction App() {\n  return (\n    <TonicProvider>\n      <ToastManager placement=\"bottom-right\">\n        {/* Your app goes here */}\n      </ToastManager>\n    </TonicProvider>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once ",(0,s.jsx)(n.code,{children:"ToastManager"})," is set up, you can use the ",(0,s.jsx)(n.code,{children:"useToastManager"})," Hook to create and manage toasts from any component:"]}),"\n",(0,s.jsx)(n.pre,{disabled:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { useToastManager } from '@tonic-ui/react';\n\nfunction MyComponent() {\n  const toast = useToastManager();\n  const handleClickOpenToast = () => {\n    const render = ({ onClose, placement }) => {\n      const styleProps = {\n        'top-left': { pt: '2x', px: '4x' },\n        'top': { pt: '2x', px: '4x' },\n        'top-right': { pt: '2x', px: '4x' },\n        'bottom-left': { pb: '2x', px: '4x' },\n        'bottom': { pb: '2x', px: '4x' },\n        'bottom-right': { pb: '2x', px: '4x' },\n      }[placement];\n\n      return (\n        <Box\n          {...styleProps}\n          width={320}\n        >\n          <Toast isClosable onClose={onClose}>\n            This is a toast notification\n          </Toast>\n        </Box>\n      );\n    });\n    const options = {\n      placement: 'bottom-right',\n      duration: 5000,\n    };\n    toast(render, options);\n  };\n\n  return (\n    <Button onClick={handleClickOpenToast}>\n      Open Toast\n    </Button>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"toast"})," method takes a function that returns the toast element to be displayed. The function can also receive an ",(0,s.jsx)(n.code,{children:"onClose"})," function and the ",(0,s.jsx)(n.code,{children:"placement"})," string. The ",(0,s.jsx)(n.code,{children:"onClose"})," function can be used to remove the toast when the user clicks on a close button or after a certain time period."]}),"\n",(0,s.jsx)(n.pre,{disabled:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const id = toast(({ onClose, placement }) => (\n  <Toast isClosable onClose={onClose}>\n    This is a toast notification\n  </Toast>\n));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To remove a toast, you can either call the ",(0,s.jsx)(n.code,{children:"onClose"})," function or use the ",(0,s.jsx)(n.code,{children:"toast.remove"})," method, which takes the toast's unique id as an argument."]}),"\n",(0,s.jsx)(n.pre,{disabled:!0,children:(0,s.jsx)(n.code,{className:"language-jsx",children:"toast.remove(id);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"./toast-manager/useToastManager",children:"useToastManager"})," Hook for detailed usage."]}),"\n",(0,s.jsxs)(n.h2,{id:"props",children:["Props",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsxs)(n.h3,{id:"toastmanager-1",children:["ToastManager",(0,s.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toastmanager-1",children:(0,s.jsx)(n.svg,{children:(0,s.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{align:"left",children:"Name"}),(0,s.jsx)(n.th,{align:"left",children:"Type"}),(0,s.jsx)(n.th,{align:"left",children:"Default"}),(0,s.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{align:"left",children:"children"}),(0,s.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,s.jsx)(n.code,{children:"(context) => ReactNode"})]}),(0,s.jsx)(n.td,{align:"left"}),(0,s.jsx)(n.td,{align:"left",children:"A function child can be used intead of a React element. This function is called with the context object."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{align:"left",children:"containerRef"}),(0,s.jsx)(n.td,{align:"left",children:"RefObject"}),(0,s.jsx)(n.td,{align:"left"}),(0,s.jsxs)(n.td,{align:"left",children:["The ",(0,s.jsx)(n.code,{children:"ref"})," to the component where the toasts will be rendered."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{align:"left",children:"placement"}),(0,s.jsx)(n.td,{align:"left",children:"string"}),(0,s.jsx)(n.td,{align:"left",children:"'bottom-right'"}),(0,s.jsx)(n.td,{align:"left",children:"The default placement to place toasts. One of: 'top', 'top-right', 'top-left', 'bottom', 'bottom-left', 'bottom-right'"})]})]})]})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(_createMdxContent,e)})):_createMdxContent(e)}},37958:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toast-manager",function(){return t(7e4)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=37958)}),_N_E=e.O()}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[362],{774:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return d}});a(2784);var n=a(876),o=["components"];function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},r.apply(this,arguments)}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l={};function d(e){var t=e.components,a=i(e,o);return(0,n.kt)("wrapper",r({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",null,"RadioGroup"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"RadioGroup")," is used to group related radio buttons."),(0,n.kt)("h2",null,"Import"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import { RadioGroup } from '@tonic-ui/react';\n")),(0,n.kt)("h3",null,"Usage"),(0,n.kt)("h4",null,"Uncontrolled radio group"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'<RadioGroup defaultValue="1">\n  <Stack spacing="1x" shouldWrapChildren>\n    <Radio value="1">First</Radio>\n    <Radio value="2">Second</Radio>\n    <Radio value="3">Third</Radio>\n  </Stack>\n</RadioGroup>\n')),(0,n.kt)("h4",null,"Controlled radio group"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  const [value, setValue] = React.useState(\'1\');\n\n  return (\n    <RadioGroup value={value} onChange={value => setValue(value)}>\n      <Stack spacing="1x" shouldWrapChildren>\n        <Radio value="1">First</Radio>\n        <Radio value="2">Second</Radio>\n        <Radio value="3">Third</Radio>\n      </Stack>\n    </RadioGroup>\n  );\n}\n')),(0,n.kt)("h3",null,"Group orientation"),(0,n.kt)("p",null,"Make a set of radios appear horizontal stacked rather than vertically, by adding ",(0,n.kt)("inlineCode",{parentName:"p"},'flexDirection="row"')," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Stack")," component."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'<RadioGroup defaultValue="1">\n  <Stack direction="row" spacing="3x">\n    <Radio value="1">Radio 1</Radio>\n    <Radio value="2">Radio 2</Radio>\n    <Radio value="3">Radio 3</Radio>\n  </Stack>\n</RadioGroup>\n')),(0,n.kt)("h3",null,"Colors"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"variantColor")," prop to change the color scheme of the Radio. ",(0,n.kt)("inlineCode",{parentName:"p"},"variantColor")," can be any color key with key ",(0,n.kt)("inlineCode",{parentName:"p"},"50"),"(hover), ",(0,n.kt)("inlineCode",{parentName:"p"},"60"),"(checked) that exist in the ",(0,n.kt)("inlineCode",{parentName:"p"},"theme.colors"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'<RadioGroup variantColor="green" defaultValue="1">\n  <Stack direction="row" spacing="3x">\n    <Radio value="1">Radio 1</Radio>\n    <Radio value="2">Radio 2</Radio>\n  </Stack>\n</RadioGroup>\n')),(0,n.kt)("h3",null,"Sizes"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"size")," prop to change the size of the ",(0,n.kt)("inlineCode",{parentName:"p"},"RadioGroup"),". You can set the value to ",(0,n.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"md"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"lg"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="4x" shouldWrapChildren>\n  <RadioGroup size="sm" defaultValue="1">\n    <Stack direction="row" spacing="3x">\n      <Radio value="1">Radio 1</Radio>\n      <Radio value="2">Radio 2</Radio>\n      <Radio value="3">Radio 3</Radio>\n    </Stack>\n  </RadioGroup>\n  <RadioGroup size="md" defaultValue="1">\n    <Stack direction="row" spacing="3x">\n      <Radio value="1">Radio 1</Radio>\n      <Radio value="2">Radio 2</Radio>\n      <Radio value="3">Radio 3</Radio>\n    </Stack>\n  </RadioGroup>\n  <RadioGroup size="lg" defaultValue="1">\n    <Stack direction="row" spacing="3x">\n      <Radio value="1">Radio 1</Radio>\n      <Radio value="2">Radio 2</Radio>\n      <Radio value="3">Radio 3</Radio>\n    </Stack>\n  </RadioGroup>\n</Stack>\n')),(0,n.kt)("h3",null,"States"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},'<Stack direction="column" spacing="2x" shouldWrapChildren>\n  <RadioGroup defaultValue="1">\n    <Stack direction="row" spacing="3x">\n      <Radio value="1">Radio 1</Radio>\n      <Radio value="2">Radio 2</Radio>\n      <Radio value="3">Radio 3</Radio>\n    </Stack>\n  </RadioGroup>\n  <RadioGroup disabled defaultValue="1">\n    <Stack direction="row" spacing="3x">\n      <Radio value="1">Radio 1</Radio>\n      <Radio value="2">Radio 2</Radio>\n      <Radio value="3">Radio 3</Radio>\n    </Stack>\n  </RadioGroup>\n</Stack>\n')),(0,n.kt)("h3",null,"Asynchronous data loading"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const [state, setState] = React.useState({\n    state: 'idle',\n    value: null,\n  });\n  const timerRef = React.useRef(null);\n  const fetchData = React.useCallback(() => {\n    setState(prevState => ({\n      ...prevState,\n      state: 'loading',\n      value: null,\n    }));\n\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n    timerRef.current = setTimeout(() => {\n      setState({\n        state: 'success',\n        value: '1',\n      });\n\n      timerRef.current = null;\n    }, 2000);\n  }, []);\n\n  React.useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        <LinkButton onClick={() => fetchData()}>\n          <Flex alignItems=\"center\">\n            <Icon icon=\"redo\" spin={true} animationPlayState={state.state === 'loading' ? 'running' : 'paused'} />\n            <Space width=\"2x\" />\n            Reload\n          </Flex>\n        </LinkButton>\n      </Box>\n      <RadioGroup\n        value={state.value}\n        disabled={state.state === 'loading'}\n        onChange={nextValue => {\n          setState(prevState => ({ ...prevState, value: nextValue }));\n        }}\n      >\n        <Stack spacing=\"1x\" shouldWrapChildren>\n          <Radio value=\"1\">First</Radio>\n          <Radio value=\"2\">Second</Radio>\n          <Radio value=\"3\">Third</Radio>\n        </Stack>\n      </RadioGroup>\n    </>\n  );\n}\n")),(0,n.kt)("h2",null,"Props"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"children"),(0,n.kt)("td",{parentName:"tr",align:"left"},"ReactNode ","|"," (context) => ReactNode"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"A function child can be used intead of a React element. This function is called with the context object.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"defaultValue"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string ","|"," number"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The default ",(0,n.kt)("inlineCode",{parentName:"td"},"input")," element value. Use when the component is not controlled.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false"),(0,n.kt)("td",{parentName:"tr",align:"left"},"If ",(0,n.kt)("inlineCode",{parentName:"td"},"true"),", all radios will be disabled.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The name used to reference the value of the control. If you don't provide this prop, it falls back to a randomly generated name.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"onChange"),(0,n.kt)("td",{parentName:"tr",align:"left"},"function"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"A callback called when the state of the radio changes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"'md'"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The size (width and height) of the radio. One of: 'sm', 'md', 'lg'")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"value"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string ","|"," number"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The value to be used in the radio input. This is the value that will be returned on form submission.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"variantColor"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The color of the radio when it's checked. This should be one of the color keys in the theme (e.g. 'green', 'red').")))))}d.isMDXComponent=!0},1796:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/radiogroup",function(){return a(774)}])}},function(e){e.O(0,[9774,2888,179],(function(){return t=1796,e(e.s=t);var t}));var t=e.O();_N_E=t}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8996],{256:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return g}});a(2784);var n=a(876),l=["components"];function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},r.apply(this,arguments)}function o(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var u={};function g(t){var e=t.components,a=o(t,l);return(0,n.kt)("wrapper",r({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",null,"useToggle"),(0,n.kt)("p",null,"A custom Hook that toggles between boolean values. It also accepts a toggle function that can be used to change the value."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// import\nimport { useToggle } from '@tonic-ui/react-hooks';\n\n// usage\nconst [value, toggleValue] = useToggle(initialValue, [toggleReducer]);\n")),(0,n.kt)("h3",null,"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"initialValue"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"The initial value of the toggle.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toggleReducer?"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(state: boolean, nextValue: boolean) => boolean"),(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"},"An optional reducer function that can be used to determine the next value.")))),(0,n.kt)("h3",null,"Returns"),(0,n.kt)("p",null,"Returns an array with the current value and a function to toggle the value."),(0,n.kt)("p",null,"If a boolean value is explicitly passed to the toggle function, it will be used instead of negating the current value."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const defaultToggleReducer = (state, nextValue) => {\n  return (typeof nextValue === 'boolean') ? nextValue : !state;\n};\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Toggle Function"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Previous Value"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Next Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toggle()",(0,n.kt)("br",null),"toggle(event: MouseEvent)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toggle()",(0,n.kt)("br",null),"toggle(event: MouseEvent)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toggle(false)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true ","|"," false"),(0,n.kt)("td",{parentName:"tr",align:"left"},"false")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toggle(true)"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true ","|"," false"),(0,n.kt)("td",{parentName:"tr",align:"left"},"true")))),(0,n.kt)("h3",null,"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"function Switch() {\n  const [value, toggleValue] = useToggle(false);\n\n  return (\n    <Button onClick={toggleValue}>\n      {value ? 'ON' : 'OFF'}\n    </Button>\n  );\n}\n")))}g.isMDXComponent=!0},5082:function(t,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useToggle",function(){return a(256)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=5082,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2611],{962:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return c}});n(2784);var a=n(876),r=["components"];function l(){return l=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l.apply(this,arguments)}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u={};function c(t){var e=t.components,n=o(t,r);return(0,a.kt)("wrapper",l({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",null,"useOnce"),(0,a.kt)("p",null,"A custom Hook that runs a callback at most once."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// import\nimport { useOnce } from '@tonic-ui/react-hooks';\n\n// usage\nuseOnce(callback);\n")),(0,a.kt)("h3",null,"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"callback"),(0,a.kt)("td",{parentName:"tr",align:"left"},"() => void"),(0,a.kt)("td",{parentName:"tr",align:"left"}),(0,a.kt)("td",{parentName:"tr",align:"left"},"The callback to run.")))),(0,a.kt)("h3",null,"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Component() {\n  const [value, setValue] = React.useState(0);\n  const ref = React.useRef(0);\n\n  useOnce(() => {\n    console.log('This will run only once before the initial render');\n    ref.current++;\n  });\n\n  return (\n    <>\n      <Box mb=\"4x\">\n        Callback called: {ref.current}\n      </Box>\n      <Button onClick={() => setValue(value => value + 1)}>\n        Click Me\n      </Button>\n    </>\n  );\n}\n")))}c.isMDXComponent=!0},7847:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/useOnce",function(){return n(962)}])}},function(t){t.O(0,[9774,2888,179],(function(){return e=7847,t(t.s=e);var e}));var e=t.O();_N_E=e}]);
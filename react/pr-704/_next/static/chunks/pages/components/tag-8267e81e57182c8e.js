(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1447],{71992:function(e,n,l){"use strict";l.r(n);var a=l(52322),o=l(45392);function s(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",h4:"h4",blockquote:"blockquote",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",nav:"nav",ul:"ul",li:"li"},(0,o.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.div,{className:"main-content",id:"main-content",children:[(0,a.jsx)(n.h1,{id:"tag",children:"Tag"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Tag"})," is used for items that need to be labeled, categorized, or organized using keywords that describe them."]}),"\n",(0,a.jsxs)(n.h2,{id:"import",children:["Import",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import {\n  Tag,\n  TagCloseButton,\n} from '@tonic-ui/react';\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"usage",children:["Usage",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Tag>Sample Tag</Tag>\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"variants",children:["Variants",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#variants",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.code,{children:"variant"})," prop to change the visual style of the ",(0,a.jsx)(n.code,{children:"Tag"}),". You can set the value to ",(0,a.jsx)(n.code,{children:"solid"}),", ",(0,a.jsx)(n.code,{children:"outline"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<Stack direction="row" spacing="2x" shouldWrapChildren>\n  <Tag variant="solid">Solid Tag</Tag>\n  <Tag variant="outline">Outline Tag</Tag>\n</Stack>\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"custom-colors",children:["Custom colors",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#custom-colors",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["The color of the tag can be changed by passing the ",(0,a.jsx)(n.code,{children:"backgroundColor"}),", ",(0,a.jsx)(n.code,{children:"borderColor"}),", and ",(0,a.jsx)(n.code,{children:"color"})," props. See the ",(0,a.jsx)(n.a,{href:"../theme/colors",children:"colors"})," section to learn more about colors."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"function Example() {\n  const [colorMode] = useColorMode();\n  const solidColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:70',\n        color: 'gray:20'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:80',\n        color: 'red:20'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:80',\n        color: 'magenta:20'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:80',\n        color: 'purple:20'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:80',\n        color: 'blue:20'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:70',\n        color: 'green:20'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:70',\n        color: 'teal:20'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:70',\n        color: 'cyan:20'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        backgroundColor: 'gray:20',\n        color: 'black:emphasis'\n      },\n      {\n        label: 'Red',\n        backgroundColor: 'red:20',\n        color: 'red:100'\n      },\n      {\n        label: 'Magenta',\n        backgroundColor: 'magenta:20',\n        color: 'magenta:100'\n      },\n      {\n        label: 'Purple',\n        backgroundColor: 'purple:20',\n        color: 'purple:100'\n      },\n      {\n        label: 'Blue',\n        backgroundColor: 'blue:20',\n        color: 'blue:100'\n      },\n      {\n        label: 'Green',\n        backgroundColor: 'green:20',\n        color: 'green:100'\n      },\n      {\n        label: 'Teal',\n        backgroundColor: 'teal:20',\n        color: 'teal:100'\n      },\n      {\n        label: 'Cyan',\n        backgroundColor: 'cyan:20',\n        color: 'cyan:100'\n      },\n    ]\n  }[colorMode];\n  const outlineColors = {\n    dark: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:40',\n        color: 'gray:40'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:50',\n        color: 'red:50'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:50',\n        color: 'magenta:50'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:50',\n        color: 'blue:50'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:50',\n        color: 'green:50'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:50',\n        color: 'teal:50'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:50',\n        color: 'cyan:50'\n      },\n    ],\n    light: [\n      {\n        label: 'Light gray',\n        borderColor: 'gray:60',\n        color: 'gray:60'\n      },\n      {\n        label: 'Red',\n        borderColor: 'red:60',\n        color: 'red:60'\n      },\n      {\n        label: 'Magenta',\n        borderColor: 'magenta:60',\n        color: 'magenta:60'\n      },\n      {\n        label: 'Purple',\n        borderColor: 'purple:50',\n        color: 'purple:50'\n      },\n      {\n        label: 'Blue',\n        borderColor: 'blue:60',\n        color: 'blue:60'\n      },\n      {\n        label: 'Green',\n        borderColor: 'green:60',\n        color: 'green:60'\n      },\n      {\n        label: 'Teal',\n        borderColor: 'teal:60',\n        color: 'teal:60'\n      },\n      {\n        label: 'Cyan',\n        borderColor: 'cyan:60',\n        color: 'cyan:60'\n      },\n    ]\n  }[colorMode];\n\n  return (\n    <Stack spacing=\"4x\">\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {solidColors.map(({ backgroundColor, color, label }, index) => (\n          <Tag key={label} backgroundColor={backgroundColor} color={color} variant=\"solid\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\">{label}</Tag>\n        ))}\n      </Stack>\n      <Stack direction=\"row\" spacing=\"2x\" shouldWrapChildren>\n        {outlineColors.map(({ borderColor, color, label }, index) => (\n          <Tag key={label} borderColor={borderColor} color={color} variant=\"outline\" borderRadius=\"lg\">{label}</Tag>\n        ))}\n      </Stack>\n    </Stack>\n  );\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"sizes",children:["Sizes",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#sizes",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.code,{children:"size"})," prop to change the size of the ",(0,a.jsx)(n.code,{children:"Tag"}),". You can set the value to ",(0,a.jsx)(n.code,{children:"sm"}),", ",(0,a.jsx)(n.code,{children:"md"}),", or ",(0,a.jsx)(n.code,{children:"lg"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<Stack spacing="4x">\n  <Stack direction="row" alignItems="center" spacing="2x">\n    <Tag size="sm">Small</Tag>\n    <Tag size="md">Medium</Tag>\n    <Tag size="lg">Large</Tag>\n  </Stack>\n  <Stack direction="row" alignItems="center" spacing="2x">\n    <Tag size="sm" borderRadius="lg">Small</Tag>\n    <Tag size="md" borderRadius="lg">Medium</Tag>\n    <Tag size="lg" borderRadius="32px">Large</Tag>\n  </Stack>\n  <Stack direction="row" alignItems="center" spacing="2x">\n    <Tag size="sm" variant="outline">Small</Tag>\n    <Tag size="md" variant="outline">Medium</Tag>\n    <Tag size="lg" variant="outline">Large</Tag>\n  </Stack>\n    <Stack direction="row" alignItems="center" spacing="2x">\n    <Tag size="sm" variant="outline" borderRadius="lg">Small</Tag>\n    <Tag size="md" variant="outline" borderRadius="lg">Medium</Tag>\n    <Tag size="lg" variant="outline" borderRadius="32px">Large</Tag>\n  </Stack>\n</Stack>\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"states",children:["States",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#states",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<Stack spacing="4x">\n  <Stack direction="row" spacing="4x" shouldWrapChildren>\n    <Tag>Normal</Tag>\n    <Tag disabled>Disabled</Tag>\n    <Tag error>Error</Tag>\n  </Stack>\n  <Stack direction="row" spacing="4x" shouldWrapChildren>\n    <Tag variant="outline">Normal</Tag>\n    <Tag variant="outline" disabled>Disabled</Tag>\n    <Tag variant="outline" error>Error</Tag>\n  </Stack>\n</Stack>\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"how-to-close-a-tag",children:["How to close a tag",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-close-a-tag",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.h4,{id:"using-the-isclosable-prop",children:["Using the ",(0,a.jsx)(n.code,{children:"isClosable"})," prop",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-isclosable-prop",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"isClosable"})," prop is used to make a tag closable by adding a close button to it. By default, the value of ",(0,a.jsx)(n.code,{children:"isClosable"})," is false. To make an alert closable, set ",(0,a.jsx)(n.code,{children:"isClosable"})," to true."]}),"\n",(0,a.jsx)(n.pre,{disabled:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<Tag variant="solid" isClosable onClose={onClose}>\n  <Text>This is a tag</Text>\n</Tag>\n'})}),"\n",(0,a.jsx)(n.pre,{noInline:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:'render(() => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant="solid" isClosable onClose={onClose}>\n        <Text>This is a tag</Text>\n      </Tag>\n    </Fade>\n  );\n});\n'})}),"\n",(0,a.jsxs)(n.h4,{id:"using-the-tagclosebutton-component",children:["Using the ",(0,a.jsx)(n.code,{children:"TagCloseButton"})," component",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-tagclosebutton-component",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"TagCloseButton"})," component provides an easy way to add a close button to a tag. This button is specifically designed to handle closing the tag, so you don't need to write any additional code to handle it. If you use ",(0,a.jsx)(n.code,{children:"TagCloseButton"}),", you can omit the ",(0,a.jsx)(n.code,{children:"isClosable"})," prop in the ",(0,a.jsx)(n.code,{children:"Tag"})," component."]}),"\n",(0,a.jsxs)(n.p,{children:["Besides the default functionality of the ",(0,a.jsx)(n.code,{children:"TagCloseButton"}),", you can also pass additional props, such as ",(0,a.jsx)(n.code,{children:"data-test"})," or ",(0,a.jsx)(n.code,{children:"data-tracking"})," attributes, to the ",(0,a.jsx)(n.code,{children:"TagCloseButton"})," component as needed."]}),"\n",(0,a.jsx)(n.pre,{disabled:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<Tag variant="solid" onClose={onClose}>\n  <Text>This is a tag</Text>\n  <TagCloseButton ml="2x" data-test="tag-close-button" />\n</Tag>\n'})}),"\n",(0,a.jsxs)(n.p,{children:["When using the ",(0,a.jsx)(n.code,{children:"TagCloseButton"})," component, be sure to manually adjust its position. In the example above, the close button is positioned with a ",(0,a.jsx)(n.code,{children:"2x"})," (=8px) margin on the left side to ensure sufficient spacing between the tag and the button."]}),"\n",(0,a.jsx)(n.pre,{noInline:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:'render(() => {\n  const [isOpen, onClose] = useToggle(true);\n  return (\n    <Fade in={isOpen} unmountOnExit>\n      <Tag variant="solid" onClose={onClose}>\n        <Text>This is a tag</Text>\n        <TagCloseButton ml="2x" data-test="tag-close-button" />\n      </Tag>\n    </Fade>\n  );\n});\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"advanced-usage",children:["Advanced usage",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#advanced-usage",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"The advanced usage here is not part of the component library, and might be modified or removed without further notice. They are provided here to help you get started with writing your own tag components."}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"example-inputtag",children:["Example: InputTag",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#example-inputtag",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"InputTag"})," is a component that is used to create a tag that can be used as a filter input."]}),"\n",(0,a.jsxs)(n.p,{children:["To create a tag, enter a value into the input and press enter, a tag will be created and added to the list of tags. Copy and paste is also supported for tag creation by separating each tag with a comma (",(0,a.jsx)(n.code,{children:","}),") or a semi-colon (",(0,a.jsx)(n.code,{children:";"}),") character. To delete a tag, click on the ",(0,a.jsx)(n.code,{children:"x"})," icon or press the backspace key."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Check out the ",(0,a.jsx)(n.a,{href:"https://github.com/trendmicro-frontend/tonic-ui/tree/master/packages/react-docs/components/InputTag",children:"source code"})," to learn how it works."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<InputTag />\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"props",children:["Props",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.h3,{id:"tag-1",children:["Tag",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tag-1",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{align:"left",children:"Name"}),(0,a.jsx)(n.th,{align:"left",children:"Type"}),(0,a.jsx)(n.th,{align:"left",children:"Default"}),(0,a.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"children"}),(0,a.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsx)(n.td,{align:"left"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"disabled"}),(0,a.jsx)(n.td,{align:"left",children:"boolean"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["If ",(0,a.jsx)(n.code,{children:"true"}),", the tag will be disabled."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"error"}),(0,a.jsx)(n.td,{align:"left",children:"boolean"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["If ",(0,a.jsx)(n.code,{children:"true"}),", the tag will display an error state."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"isClosable"}),(0,a.jsx)(n.td,{align:"left",children:"boolean"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["If ",(0,a.jsx)(n.code,{children:"true"}),", a close button will appear on the right side."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"onClose"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsx)(n.td,{align:"left",children:"A callback called when the close button is clicked."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"size"}),(0,a.jsx)(n.td,{align:"left",children:"string"}),(0,a.jsx)(n.td,{align:"left",children:"'md'"}),(0,a.jsx)(n.td,{align:"left",children:"The size of the tag component. One of: 'sm', 'md', 'lg'"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"variant"}),(0,a.jsx)(n.td,{align:"left",children:"string"}),(0,a.jsx)(n.td,{align:"left",children:"'solid'"}),(0,a.jsx)(n.td,{align:"left",children:"The variant style of the tag component. One of: 'solid', 'outline'"})]})]})]}),"\n",(0,a.jsxs)(n.h3,{id:"tagclosebutton",children:["TagCloseButton",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tagclosebutton",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{align:"left",children:"Name"}),(0,a.jsx)(n.th,{align:"left",children:"Type"}),(0,a.jsx)(n.th,{align:"left",children:"Default"}),(0,a.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"children"}),(0,a.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsx)(n.td,{align:"left"})]})})]})]}),(0,a.jsxs)(n.nav,{className:"toc",id:"toc",children:[(0,a.jsx)(n.div,{className:"toc-heading",children:"Contents"}),(0,a.jsxs)(n.ul,{className:"toc-level toc-level-1",children:[(0,a.jsx)(n.li,{className:"toc-item toc-item-h2",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#import",children:"Import"})}),(0,a.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,a.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#usage",children:"Usage"}),(0,a.jsxs)(n.ul,{className:"toc-level toc-level-2",children:[(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#variants",children:"Variants"})}),(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#custom-colors",children:"Custom colors"})}),(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#sizes",children:"Sizes"})}),(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#states",children:"States"})}),(0,a.jsxs)(n.li,{className:"toc-item toc-item-h3",children:[(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#how-to-close-a-tag",children:"How to close a tag"}),(0,a.jsxs)(n.ul,{className:"toc-level toc-level-3",children:[(0,a.jsx)(n.li,{className:"toc-item toc-item-h4",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h4",href:"#using-the-isclosable-prop",children:"Using the isClosable prop"})}),(0,a.jsx)(n.li,{className:"toc-item toc-item-h4",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h4",href:"#using-the-tagclosebutton-component",children:"Using the TagCloseButton component"})})]})]})]})]}),(0,a.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,a.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#advanced-usage",children:"Advanced usage"}),(0,a.jsx)(n.ul,{className:"toc-level toc-level-2",children:(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#example-inputtag",children:"Example: InputTag"})})})]}),(0,a.jsxs)(n.li,{className:"toc-item toc-item-h2",children:[(0,a.jsx)(n.a,{className:"toc-link toc-link-h2",href:"#props",children:"Props"}),(0,a.jsxs)(n.ul,{className:"toc-level toc-level-2",children:[(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#tag-1",children:"Tag"})}),(0,a.jsx)(n.li,{className:"toc-item toc-item-h3",children:(0,a.jsx)(n.a,{className:"toc-link toc-link-h3",href:"#tagclosebutton",children:"TagCloseButton"})})]})]})]})]})]})}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(s,e)})):s(e)}},63284:function(e,n,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tag",function(){return l(71992)}])}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=63284)}),_N_E=e.O()}]);
_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[66],{"97Jx":function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},e.exports.default=e.exports,e.exports.__esModule=!0,n.apply(this,arguments)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},"IE/8":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));var a=n("97Jx"),b=n.n(a),l=n("m3Bd"),r=n.n(l),i=(n("ERkP"),n("ZVZ0")),o=["components"],c={};function d(e){var t=e.components,n=r()(e,o);return Object(i.b)("wrapper",b()({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"Tabs"),Object(i.b)("p",null,"An accessible tabs component."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"Tab")," and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," elements are associated by their order in the tree.\nNone of the components are empty wrappers, each is associated with a real DOM\nelement in the document, giving you maximum control over styling and\ncomposition."),Object(i.b)("h2",null,"Import"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import {\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from '@trendmicro/react-styled-ui';\n")),Object(i.b)("h2",null,"Usage"),Object(i.b)("p",null,"You can render any element within ",Object(i.b)("inlineCode",{parentName:"p"},"Tabs"),", but ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," should only have ",Object(i.b)("inlineCode",{parentName:"p"},"Tab"),"\nas children, and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanels")," should have ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," as children."),Object(i.b)("p",null,"Tabs expects ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," and ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanels")," as children. The order doesn't matter,\nyou can have tabs at the top, at the bottom, or both."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Tabs>\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>three!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n")),Object(i.b)("h2",null,"Accessing Internal state"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<TabPanel>")," provides access to one internal state:  ",Object(i.b)("inlineCode",{parentName:"p"},"isActive"),". Use the render prop pattern to access the internal states."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"<Tabs>\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      {({ isActive }) => {\n        if (isActive) {\n          return (<p>two!</p>);\n        }\n        return null;\n      }}\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n")),Object(i.b)("h3",null,"Tab variants and color"),Object(i.b)("p",null,"Tabs come in 3 different variants to style the tabs: ",Object(i.b)("inlineCode",{parentName:"p"},"line"),",",Object(i.b)("inlineCode",{parentName:"p"},"enclosed"),", ",Object(i.b)("inlineCode",{parentName:"p"},"unstyled")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="enclosed">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>three!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Make a Tab disabled"),Object(i.b)("p",null,"When a ",Object(i.b)("inlineCode",{parentName:"p"},"Tab")," is disabled, it's skipped during keyboard navigation and it's not\nclickable."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  return (\n    <Tabs>\n      <TabList>\n        <Tab>One</Tab>\n        <Tab disabled>Two</Tab>\n        <Tab>Three</Tab>\n      </TabList>\n      <TabPanels>\n        <TabPanel><p>1</p></TabPanel>\n        <TabPanel><p>2</p></TabPanel>\n        <TabPanel><p>3</p></TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n")),Object(i.b)("h3",null,"Change the tabs alignment"),Object(i.b)("p",null,"You can change the alignment of the ",Object(i.b)("inlineCode",{parentName:"p"},"TabList")," by passing ",Object(i.b)("inlineCode",{parentName:"p"},"align")," prop. We\nsupport 3 sizes ",Object(i.b)("inlineCode",{parentName:"p"},"left"),", ",Object(i.b)("inlineCode",{parentName:"p"},"center"),", ",Object(i.b)("inlineCode",{parentName:"p"},"right"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs align="right" variant="enclosed">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Fitted Tabs"),Object(i.b)("p",null,"Stretch the tab list to fit the container by passing ",Object(i.b)("inlineCode",{parentName:"p"},"isFitted")," prop."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs isFitted variant="enclosed">\n  <TabList mb="1em">\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Styling the tab states manually"),Object(i.b)("p",null,"In event you need to create custom styles for the tabs. Simply set the variant\nto ",Object(i.b)("inlineCode",{parentName:"p"},"unstyled"),", and use the ",Object(i.b)("inlineCode",{parentName:"p"},"_selected"),", ",Object(i.b)("inlineCode",{parentName:"p"},"_hover"),", ",Object(i.b)("inlineCode",{parentName:"p"},"_active")," style props."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs variant="unstyled">\n  <TabList>\n    <Tab _selected={{ color: "white", bg: "blue:50" }}>Tab 1</Tab>\n    <Tab _selected={{ color: "white", bg: "green:40" }}>Tab 2</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"AutoSizer Table in the tab"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"noInline",noInline:!0},"function FullWidthTable() {\n  const columns = React.useMemo(() => [\n    {\n      Header: 'Event Type',\n      id: 'eventType',\n      accessor: 'eventType',\n      width: 'auto',\n    },\n    {\n      Header: 'Affected Devices',\n      id: 'affectedDevices',\n      accessor: 'affectedDevices',\n      width: 160,\n    },\n    {\n      Header: 'Detections',\n      id: 'detections',\n      accessor: 'detections',\n      width: '10%',\n    },\n  ], []);\n\n  const data = React.useMemo(() => [\n    { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n    { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  ], []);\n\n  const getCalculatedColumns = ({ initColumns, tableWidth }) => {\n    const columns = initColumns.map(column => {\n      let columnWidth = column.width;\n      if (typeof columnWidth === 'string') {\n        const lastChar = columnWidth.substr(columnWidth.length - 1);\n        if (lastChar === '%') {\n          columnWidth = tableWidth * (parseFloat(columnWidth) / 100);\n          return {\n            ...column,\n            width: columnWidth\n          };\n        }\n        if (columnWidth === 'auto') {\n          return {\n            ...column,\n            width: 0\n          };\n        }\n      }\n      return column;\n    });\n    const customWidthColumns = columns.filter(column => !!column.width);\n    const totalCustomWidth = customWidthColumns.reduce((accumulator, column) => accumulator + column.width, 0);\n    let defaultCellWidth = (tableWidth - totalCustomWidth) / (columns.length - customWidthColumns.length);\n    defaultCellWidth = defaultCellWidth <= 0 ? 150 : defaultCellWidth;\n    return columns.map(column => {\n      if (!!column.width) {\n        return column;\n      }\n      return {\n        ...column,\n        width: defaultCellWidth\n      };\n    });\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useBlockLayout,\n  );\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => {\n        if (height === 0 || width === 0) {\n          return null;\n        }\n        const newColumns = getCalculatedColumns({ initColumns: columns, tableWidth: width });\n        return (\n          <Table\n            isHoverable\n            {...getTableProps()}\n          >\n            <TableHeader>\n              {headerGroups.map(headerGroup => (\n                <TableHeaderRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => {\n                    const columnId = column.id;\n                    const _column = newColumns.filter(column => column.id === columnId);\n                    const _columnWidth = _column[0].width;\n                    return (\n                      <TableHeaderCell\n                        width={_columnWidth}\n                        {...column.getHeaderProps()}\n                      >\n                        {column.render('Header')}\n                      </TableHeaderCell>\n                    );\n                  })}\n                </TableHeaderRow>\n              ))}\n            </TableHeader>\n            <TableBody {...getTableBodyProps()}>\n              {rows.map((row, i) => {\n                prepareRow(row);\n                return (\n                  <TableRow {...row.getRowProps()}>\n                    {\n                      row.cells.map(cell => {\n                        const columnId = cell.column.id;\n                        const _column = newColumns.filter(column => column.id === columnId);\n                        const _columnWidth = _column[0].width;\n                        return (\n                          <TableCell\n                            width={_columnWidth}\n                            {...cell.getCellProps()}\n                          >\n                            {cell.render('Cell')}\n                          </TableCell>\n                        );\n                      })\n                    }\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        );\n      }}\n    </AutoSizer>\n  );\n}\n\nrender(\n  <Tabs height=\"300px\">\n    <TabList>\n      <Tab>Auto height Panel</Tab>\n      <Tab>Full height Panel</Tab>\n    </TabList>\n    <TabPanels height=\"calc(100% - 40px)\">\n      <TabPanel border=\"1\" borderColor=\"green\" marginTop=\"1x\" padding=\"1x\">\n        Hi~~~\n      </TabPanel>\n      <TabPanel height=\"100%\" border=\"1\" borderColor=\"green\" marginTop=\"1x\" padding=\"1x\">\n        <FullWidthTable />\n      </TabPanel>\n    </TabPanels>\n  </Tabs>\n);\n")),Object(i.b)("h3",null,"Manually Activated Tabs"),Object(i.b)("p",null,"By default, ",Object(i.b)("inlineCode",{parentName:"p"},"Tabs")," are activated automatically. This means when you use the\narrow keys to change tabs, the tab is activated and focused."),Object(i.b)("p",null,"The content of a ",Object(i.b)("inlineCode",{parentName:"p"},"TabPanel")," should ideally be preloaded. However, if switching to a tab panel causes a network request and possibly a page refresh, there might be some notable latency and this might affect the experience for keyboard and screen reader users."),Object(i.b)("p",null,"In this scenario, you should use a manually activated tab, it moves focus\nwithout activating the tabs. With focus on a specifc tab, users can activate a\ntab by pressing ",Object(i.b)("kbd",null,"Space")," or ",Object(i.b)("kbd",null,"Enter"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'<Tabs isManual variant="line">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n')),Object(i.b)("h3",null,"Data Tabs"),Object(i.b)("p",null,"If you'd like to drive your tabs with an array instead of using the granular\ncomponents, you can create your own DataTabs component."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx"},'function Example() {\n  // First, you create the component...\n  function DataTabs({ data }) {\n    return (\n      <Tabs>\n        <TabList>\n          {data.map((tab, index) => (\n            <Tab key={index}>{tab.label}</Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          {data.map((tab, index) => (\n            <TabPanel p={4} key={index}>\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    );\n  }\n\n  // Next, you have an array of data...\n  const tabData = [\n    {\n      label: "Nigerian Jollof",\n      content: "Perhaps the greatest dish ever invented.",\n    },\n    {\n      label: "Pounded Yam & Egusi",\n      content:\n        "Perhaps the surest dish ever invented but fills the stomach more than rice.",\n    },\n  ];\n\n  // you can just pass it in:\n  return <DataTabs data={tabData} />;\n}\n')),Object(i.b)("h2",null,"Accessibility"),Object(i.b)("h3",null,"Keyboard"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Key"),Object(i.b)("th",{parentName:"tr",align:"left"},"Action"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"ArrowLeft")),Object(i.b)("td",{parentName:"tr",align:"left"},"Moves focus to the next tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"ArrowUp")),Object(i.b)("td",{parentName:"tr",align:"left"},"Moves focus to the previous tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"Tab")),Object(i.b)("td",{parentName:"tr",align:"left"},"When focus moves into the tab list, places focus on the active tab element")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"Space")," or ",Object(i.b)("inlineCode",{parentName:"td"},"Enter")),Object(i.b)("td",{parentName:"tr",align:"left"},"Activates the tab if it was not activated automatically on focus")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"Home")),Object(i.b)("td",{parentName:"tr",align:"left"},"Moves focus to the first tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"End")),Object(i.b)("td",{parentName:"tr",align:"left"},"Moves focus to the last tab")))),Object(i.b)("h3",null,"ARIA roles"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Component"),Object(i.b)("th",{parentName:"tr",align:"left"},"Aria"),Object(i.b)("th",{parentName:"tr",align:"left"},"Usage"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"Tab"),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},'role="tab"')),Object(i.b)("td",{parentName:"tr",align:"left"},"Indicates that it's a tab")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"aria-selected")),Object(i.b)("td",{parentName:"tr",align:"left"},"Set to ",Object(i.b)("inlineCode",{parentName:"td"},"true")," a tab is selected and all other Tabs have it set to ",Object(i.b)("inlineCode",{parentName:"td"},"false"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"aria-controls")),Object(i.b)("td",{parentName:"tr",align:"left"},"Set to the ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of its associated ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"TabList"),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"id")),Object(i.b)("td",{parentName:"tr",align:"left"},"The ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of the ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel")," that's referencd by its associated ",Object(i.b)("inlineCode",{parentName:"td"},"Tab"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"aria-orientation")),Object(i.b)("td",{parentName:"tr",align:"left"},"Set to vertical or horizontal based on the value of the ",Object(i.b)("inlineCode",{parentName:"td"},"orientation")," prop.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},'role="tablist"')),Object(i.b)("td",{parentName:"tr",align:"left"},"Indicates that it's a tablist")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"aria-labelledby")),Object(i.b)("td",{parentName:"tr",align:"left"},"Set to the ",Object(i.b)("inlineCode",{parentName:"td"},"id")," of the ",Object(i.b)("inlineCode",{parentName:"td"},"Tab")," that labels the ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel"),".")))),Object(i.b)("h2",null,"Props"),Object(i.b)("h3",null,"Tabs Props"),Object(i.b)("p",null,"Tabs composes ",Object(i.b)("inlineCode",{parentName:"p"},"Box")," so you call pass all ",Object(i.b)("inlineCode",{parentName:"p"},"Box")," related props."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Name"),Object(i.b)("th",{parentName:"tr",align:"left"},"Type"),Object(i.b)("th",{parentName:"tr",align:"left"},"Default"),Object(i.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"onChange")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"(index: number) => void")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"The callback to update the active tab index.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"index")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"number")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"The controlled index of the tabs.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"defaultIndex")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"number")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"The index of the initial active tab.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"activateOnKeypress")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", keyboard navigation changes focus between tabs but doens't activate it. User will have to press ",Object(i.b)("inlineCode",{parentName:"td"},"Enter")," or ",Object(i.b)("inlineCode",{parentName:"td"},"Space")," to active it. This is deprecated and will be removed in the v1 release")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"isManual")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", keyboard navigation changes focus between tabs but doens't activate it. User will have to press ",Object(i.b)("inlineCode",{parentName:"td"},"Enter")," or ",Object(i.b)("inlineCode",{parentName:"td"},"Space")," to active it")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"children")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"ReactNode")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"The children of the switch.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"variant")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"line"),",",Object(i.b)("inlineCode",{parentName:"td"},"enclosed"),", ",Object(i.b)("inlineCode",{parentName:"td"},"unstyled")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"line")),Object(i.b)("td",{parentName:"tr",align:"left"},"The visual style of the tab.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"orientation")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"horizontal"),", ",Object(i.b)("inlineCode",{parentName:"td"},"vertical")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"horizontal")),Object(i.b)("td",{parentName:"tr",align:"left"},"The orientation of the tabs")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"isFitted")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the tabs will stretch to fill the available space")))),Object(i.b)("h3",null,"Tab Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Name"),Object(i.b)("th",{parentName:"tr",align:"left"},"Type"),Object(i.b)("th",{parentName:"tr",align:"left"},"Default"),Object(i.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"disabled")),Object(i.b)("td",{parentName:"tr",align:"left"},Object(i.b)("inlineCode",{parentName:"td"},"boolean")),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"If ",Object(i.b)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the control. This sets ",Object(i.b)("inlineCode",{parentName:"td"},"aria-disabled=true")," and you can style this state by passing the ",Object(i.b)("inlineCode",{parentName:"td"},"_disabled")," prop.")))),Object(i.b)("h3",null,"TabPanel Props"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Name"),Object(i.b)("th",{parentName:"tr",align:"left"},"Type"),Object(i.b)("th",{parentName:"tr",align:"left"},"Default"),Object(i.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"children"),Object(i.b)("td",{parentName:"tr",align:"left"},"ReactNode, (props: InternalState) => ReactNode"),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"},"The children of the ",Object(i.b)("inlineCode",{parentName:"td"},"TabPanel"),".")))))}d.isMDXComponent=!0},Iblr:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tabs",function(){return n("IE/8")}])},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},LdEA:function(e,t){e.exports=function(e,t){if(null==e)return{};var n,a,b={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(b[n]=e[n]);return b},e.exports.default=e.exports,e.exports.__esModule=!0},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n("ERkP"),b=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,b=function(e,t){if(null==e)return{};var n,a,b={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}var c=b.a.createContext({}),d=function(e){var t=b.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return b.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},m=b.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,u=p["".concat(r,".").concat(m)]||p[m]||s[m]||l;return n?b.a.createElement(u,i(i({ref:t},c),{},{components:n})):b.a.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"===typeof e?e:a,r[1]=i;for(var c=2;c<l;c++)r[c]=n[c];return b.a.createElement.apply(null,r)}return b.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},m3Bd:function(e,t,n){var a=n("LdEA");e.exports=function(e,t){if(null==e)return{};var n,b,l=a(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(b=0;b<r.length;b++)n=r[b],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l},e.exports.default=e.exports,e.exports.__esModule=!0}},[["Iblr",0,1]]]);